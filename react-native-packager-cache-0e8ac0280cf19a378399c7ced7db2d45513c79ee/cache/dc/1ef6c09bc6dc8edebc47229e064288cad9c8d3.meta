["7001a7975582f370ef27c1a6f646b0dc83e90d5a","5e7eab3518cf1d229ff6bea6ad77188d7ac60861",["mergeInto"],[41],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/vendor/core/merge.js"],"names":["mergeInto","require","merge","one","two","result","module","exports"],"mappings":";;AA+BA;;AAEA,IAAIA,YAAYC,OAAZ,aAAJ;;AASA,IAAIC,QAAQ,SAARA,KAAQ,CAASC,GAAT,EAAcC,GAAd,EAAmB;AAC7B,MAAIC,SAAS,EAAb;AACAL,YAAUK,MAAV,EAAkBF,GAAlB;AACAH,YAAUK,MAAV,EAAkBD,GAAlB;AACA,SAAOC,MAAP;AACD,CALD;;AAOAC,OAAOC,OAAP,GAAiBL,KAAjB","sourcesContent":["/**\n * @generated SignedSource<<0e3063b19e14ed191102b1dffe45551f>>\n *\n * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n * !! This file is a check-in of a static_upstream project!      !!\n * !!                                                            !!\n * !! You should not modify this file directly. Instead:         !!\n * !! 1) Use `fjs use-upstream` to temporarily replace this with !!\n * !!    the latest version from upstream.                       !!\n * !! 2) Make your changes, test them, etc.                      !!\n * !! 3) Use `fjs push-upstream` to copy your changes back to    !!\n * !!    static_upstream.                                        !!\n * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n *\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule merge\n */\n\n\"use strict\";\n\nvar mergeInto = require('mergeInto');\n\n/**\n * Shallow merges two structures into a return value, without mutating either.\n *\n * @param {?object} one Optional object with properties to merge from.\n * @param {?object} two Optional object with properties to merge from.\n * @return {object} The shallow extension of one by two.\n */\nvar merge = function(one, two) {\n  var result = {};\n  mergeInto(result, one);\n  mergeInto(result, two);\n  return result;\n};\n\nmodule.exports = merge;\n"]}]