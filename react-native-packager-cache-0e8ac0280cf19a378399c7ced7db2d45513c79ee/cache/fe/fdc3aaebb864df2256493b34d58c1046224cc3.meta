["a23e0f8a44001a896f987e52f025f22c2d36c9cc","84b3a18e57c36796c574778191d7c6ade2a9e67c",["react-native"],[42],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/expo/src/admob/RNAdMobRewarded.js"],"names":["RNAdMobRewarded","eventHandlers","rewardedVideoDidRewardUser","Map","rewardedVideoDidLoad","rewardedVideoDidFailToLoad","rewardedVideoDidOpen","rewardedVideoDidClose","rewardedVideoWillLeaveApplication","addEventListener","type","handler","set","addListener","amount","error","console","log","removeEventListener","has","get","remove","delete","removeAllListeners","module","exports","requestAd","cb","showAd"],"mappings":"AAAA;;AAEA;;AAEA,IAAMA,kBAAkB,2BAAcA,eAAtC;;AAEA,IAAMC,gBAAgB;AACpBC,8BAA4B,IAAIC,GAAJ,EADR;AAEpBC,wBAAsB,IAAID,GAAJ,EAFF;AAGpBE,8BAA4B,IAAIF,GAAJ,EAHR;AAIpBG,wBAAsB,IAAIH,GAAJ,EAJF;AAKpBI,yBAAuB,IAAIJ,GAAJ,EALH;AAMpBK,qCAAmC,IAAIL,GAAJ;AANf,CAAtB;;AASA,IAAMM,mBAAmB,SAAnBA,gBAAmB,CAACC,IAAD,EAAOC,OAAP,EAAmB;AAC1C,UAAQD,IAAR;AACE,SAAK,4BAAL;AACET,oBAAcS,IAAd,EAAoBE,GAApB,CACED,OADF,EAEE,gCAAmBE,WAAnB,CAA+BH,IAA/B,EAAqC,UAACA,IAAD,EAAOI,MAAP,EAAkB;AACrDH,gBAAQD,IAAR,EAAcI,MAAd;AACD,OAFD,CAFF;AAMA;AACF,SAAK,sBAAL;AACEb,oBAAcS,IAAd,EAAoBE,GAApB,CACED,OADF,EAEE,gCAAmBE,WAAnB,CAA+BH,IAA/B,EAAqCC,OAArC,CAFF;AAIA;AACF,SAAK,4BAAL;AACEV,oBAAcS,IAAd,EAAoBE,GAApB,CACED,OADF,EAEE,gCAAmBE,WAAnB,CAA+BH,IAA/B,EAAqC,iBAAS;AAC5CC,gBAAQI,KAAR;AACD,OAFD,CAFF;AAMA;AACF,SAAK,sBAAL;AACEd,oBAAcS,IAAd,EAAoBE,GAApB,CACED,OADF,EAEE,gCAAmBE,WAAnB,CAA+BH,IAA/B,EAAqCC,OAArC,CAFF;AAIA;AACF,SAAK,uBAAL;AACEV,oBAAcS,IAAd,EAAoBE,GAApB,CACED,OADF,EAEE,gCAAmBE,WAAnB,CAA+BH,IAA/B,EAAqCC,OAArC,CAFF;AAIA;AACF,SAAK,mCAAL;AACEV,oBAAcS,IAAd,EAAoBE,GAApB,CACED,OADF,EAEE,gCAAmBE,WAAnB,CAA+BH,IAA/B,EAAqCC,OAArC,CAFF;AAIA;AACF;AACEK,cAAQC,GAAR,sBAA+BP,IAA/B;AA1CJ;AA4CD,CA7CD;;AA+CA,IAAMQ,sBAAsB,SAAtBA,mBAAsB,CAACR,IAAD,EAAOC,OAAP,EAAmB;AAC7C,MAAI,CAACV,cAAcS,IAAd,EAAoBS,GAApB,CAAwBR,OAAxB,CAAL,EAAuC;AACrC;AACD;AACDV,gBAAcS,IAAd,EAAoBU,GAApB,CAAwBT,OAAxB,EAAiCU,MAAjC;AACApB,gBAAcS,IAAd,EAAoBY,MAApB,CAA2BX,OAA3B;AACD,CAND;;AAQA,IAAMY,qBAAqB,SAArBA,kBAAqB,GAAM;AAC/B,kCAAmBA,kBAAnB,CAAsC,4BAAtC;AACA,kCAAmBA,kBAAnB,CAAsC,sBAAtC;AACA,kCAAmBA,kBAAnB,CAAsC,4BAAtC;AACA,kCAAmBA,kBAAnB,CAAsC,sBAAtC;AACA,kCAAmBA,kBAAnB,CAAsC,uBAAtC;AACA,kCAAmBA,kBAAnB,CAAsC,mCAAtC;AACD,CAPD;;AASAC,OAAOC,OAAP,4BACKzB,eADL;AAEE0B,aAAW;AAAA,QAACC,EAAD,uEAAM,YAAM,CAAE,CAAd;AAAA,WAAmB3B,gBAAgB0B,SAAhB,CAA0BC,EAA1B,CAAnB;AAAA,GAFb;AAGEC,UAAQ;AAAA,QAACD,EAAD,uEAAM,YAAM,CAAE,CAAd;AAAA,WAAmB3B,gBAAgB4B,MAAhB,CAAuBD,EAAvB,CAAnB;AAAA,GAHV;AAIElB,oCAJF;AAKES,0CALF;AAMEK;AANF","sourcesContent":["'use strict';\n\nimport { NativeModules, DeviceEventEmitter } from 'react-native';\n\nconst RNAdMobRewarded = NativeModules.RNAdMobRewarded;\n\nconst eventHandlers = {\n  rewardedVideoDidRewardUser: new Map(),\n  rewardedVideoDidLoad: new Map(),\n  rewardedVideoDidFailToLoad: new Map(),\n  rewardedVideoDidOpen: new Map(),\n  rewardedVideoDidClose: new Map(),\n  rewardedVideoWillLeaveApplication: new Map(),\n};\n\nconst addEventListener = (type, handler) => {\n  switch (type) {\n    case 'rewardedVideoDidRewardUser':\n      eventHandlers[type].set(\n        handler,\n        DeviceEventEmitter.addListener(type, (type, amount) => {\n          handler(type, amount);\n        })\n      );\n      break;\n    case 'rewardedVideoDidLoad':\n      eventHandlers[type].set(\n        handler,\n        DeviceEventEmitter.addListener(type, handler)\n      );\n      break;\n    case 'rewardedVideoDidFailToLoad':\n      eventHandlers[type].set(\n        handler,\n        DeviceEventEmitter.addListener(type, error => {\n          handler(error);\n        })\n      );\n      break;\n    case 'rewardedVideoDidOpen':\n      eventHandlers[type].set(\n        handler,\n        DeviceEventEmitter.addListener(type, handler)\n      );\n      break;\n    case 'rewardedVideoDidClose':\n      eventHandlers[type].set(\n        handler,\n        DeviceEventEmitter.addListener(type, handler)\n      );\n      break;\n    case 'rewardedVideoWillLeaveApplication':\n      eventHandlers[type].set(\n        handler,\n        DeviceEventEmitter.addListener(type, handler)\n      );\n      break;\n    default:\n      console.log(`Event with type ${type} does not exist.`);\n  }\n};\n\nconst removeEventListener = (type, handler) => {\n  if (!eventHandlers[type].has(handler)) {\n    return;\n  }\n  eventHandlers[type].get(handler).remove();\n  eventHandlers[type].delete(handler);\n};\n\nconst removeAllListeners = () => {\n  DeviceEventEmitter.removeAllListeners('rewardedVideoDidRewardUser');\n  DeviceEventEmitter.removeAllListeners('rewardedVideoDidLoad');\n  DeviceEventEmitter.removeAllListeners('rewardedVideoDidFailToLoad');\n  DeviceEventEmitter.removeAllListeners('rewardedVideoDidOpen');\n  DeviceEventEmitter.removeAllListeners('rewardedVideoDidClose');\n  DeviceEventEmitter.removeAllListeners('rewardedVideoWillLeaveApplication');\n};\n\nmodule.exports = {\n  ...RNAdMobRewarded,\n  requestAd: (cb = () => {}) => RNAdMobRewarded.requestAd(cb), // requestAd callback is optional\n  showAd: (cb = () => {}) => RNAdMobRewarded.showAd(cb), // showAd callback is optional\n  addEventListener,\n  removeEventListener,\n  removeAllListeners,\n};\n"]}]