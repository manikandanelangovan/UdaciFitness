["2adeb918378a0ffda0ce05a3f0455983acc189d8","732cef56d718d1fb6f0c7441a8b4baac0ae7f070",[],[],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/polyfills/Number.es6.js"],"names":["Number","EPSILON","undefined","Object","defineProperty","value","Math","pow","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","isNaN","globalIsNaN","global","configurable","enumerable","writable"],"mappings":";;AAeA,IAAIA,OAAOC,OAAP,KAAmBC,SAAvB,EAAkC;AAChCC,SAAOC,cAAP,CAAsBJ,MAAtB,EAA8B,SAA9B,EAAyC;AACvCK,WAAOC,KAAKC,GAAL,CAAS,CAAT,EAAY,CAAC,EAAb;AADgC,GAAzC;AAGD;AACD,IAAIP,OAAOQ,gBAAP,KAA4BN,SAAhC,EAA2C;AACzCC,SAAOC,cAAP,CAAsBJ,MAAtB,EAA8B,kBAA9B,EAAkD;AAChDK,WAAOC,KAAKC,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB;AADuB,GAAlD;AAGD;AACD,IAAIP,OAAOS,gBAAP,KAA4BP,SAAhC,EAA2C;AACzCC,SAAOC,cAAP,CAAsBJ,MAAtB,EAA8B,kBAA9B,EAAkD;AAChDK,WAAO,EAAEC,KAAKC,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAApB;AADyC,GAAlD;AAGD;AACD,IAAI,CAACP,OAAOU,KAAZ,EAAmB;AAGjB,MAAMC,cAAcC,OAAOF,KAA3B;AACAP,SAAOC,cAAP,CAAsBJ,MAAtB,EAA8B,OAA9B,EAAuC;AACrCa,kBAAc,IADuB;AAErCC,gBAAY,KAFyB;AAGrCT,WAAO,SAASK,KAAT,CAAeL,KAAf,EAAsB;AAC3B,aAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BM,YAAYN,KAAZ,CAApC;AACD,KALoC;AAMrCU,cAAU;AAN2B,GAAvC;AAQD","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Number.es6\n * @polyfill\n * @nolint\n */\n\n/* eslint-disable strict */\n\nif (Number.EPSILON === undefined) {\n  Object.defineProperty(Number, 'EPSILON', {\n    value: Math.pow(2, -52),\n  });\n}\nif (Number.MAX_SAFE_INTEGER === undefined) {\n  Object.defineProperty(Number, 'MAX_SAFE_INTEGER', {\n    value: Math.pow(2, 53) - 1,\n  });\n}\nif (Number.MIN_SAFE_INTEGER === undefined) {\n  Object.defineProperty(Number, 'MIN_SAFE_INTEGER', {\n    value: -(Math.pow(2, 53) - 1),\n  });\n}\nif (!Number.isNaN) {\n  // eslint-disable-next-line max-len\n  // https://github.com/dherman/tc39-codex-wiki/blob/master/data/es6/number/index.md#polyfill-for-numberisnan\n  const globalIsNaN = global.isNaN;\n  Object.defineProperty(Number, 'isNaN', {\n    configurable: true,\n    enumerable: false,\n    value: function isNaN(value) {\n      return typeof value === 'number' && globalIsNaN(value);\n    },\n    writable: true,\n  });\n}\n"]}]