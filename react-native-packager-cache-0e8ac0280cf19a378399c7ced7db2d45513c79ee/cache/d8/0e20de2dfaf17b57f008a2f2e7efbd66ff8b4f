Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Gravity = undefined;

var _reactNative = require('react-native');

var _DeviceSensor2 = require('./DeviceSensor');

var _DeviceSensor3 = babelHelpers.interopRequireDefault(_DeviceSensor2);

var ExponentDeviceMotion = _reactNative.NativeModules.ExponentDeviceMotion;

var DeviceMotionSensor = function (_DeviceSensor) {
  babelHelpers.inherits(DeviceMotionSensor, _DeviceSensor);

  function DeviceMotionSensor() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, DeviceMotionSensor);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = DeviceMotionSensor.__proto__ || Object.getPrototypeOf(DeviceMotionSensor)).call.apply(_ref, [this].concat(args))), _this), _this.Gravity = ExponentDeviceMotion.Gravity, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  return DeviceMotionSensor;
}(_DeviceSensor3.default);

var Gravity = exports.Gravity = ExponentDeviceMotion.Gravity;

exports.default = new DeviceMotionSensor(ExponentDeviceMotion, 'deviceMotionDidUpdate');