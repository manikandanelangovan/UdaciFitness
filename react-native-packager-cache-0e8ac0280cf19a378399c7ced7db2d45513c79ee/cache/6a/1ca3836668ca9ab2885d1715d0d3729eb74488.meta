["780fcfed47fa9d56fa6403274d45806507db60af","2d91a5b88cd419bd90727f202a2a136b83f3f2e5",["prop-types","react","react-native","regenerator-runtime"],[161,265,362,413],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/expo/src/Camera.js"],"names":["CameraManager","ExponentCameraManager","ExponentCameraModule","Camera","_nativeOnCameraReady","props","onCameraReady","options","quality","takePicture","OS","getSupportedRatios","Error","console","warn","takePictureAsync","Constants","VideoQuality","record","stopRecording","getSupportedRatiosAsync","nativeProps","_convertNativeProps","newProps","flashMode","FlashMode","type","Type","autoFocus","AutoFocus","whiteBalance","WhiteBalance","onCameraReadyNative","ratio","Component","propTypes","func","oneOfType","string","number","bool","focusDepth","zoom","defaultProps","back","off","on","auto","ExponentCamera","nativeOnly"],"mappings":"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","sourcesContent":["// @flow\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  NativeModules,\n  ViewPropTypes,\n  Platform,\n  requireNativeComponent,\n} from 'react-native';\n\ntype PictureOptions = {\n  quality?: number,\n};\n\ntype RecordingOptions = {\n  maxDuration?: number,\n  maxFileSize?: number,\n  quality?: number | string,\n};\n\nconst CameraManager =\n  NativeModules.ExponentCameraManager || NativeModules.ExponentCameraModule;\n\n// FIX: Define the prop types with Flow properly\ntype Props = any;\n\nexport default class Camera extends React.Component<Props> {\n  static Constants = {\n    Type: CameraManager.Type,\n    FlashMode: CameraManager.FlashMode,\n    AutoFocus: CameraManager.AutoFocus,\n    WhiteBalance: CameraManager.WhiteBalance,\n    VideoQuality: CameraManager.VideoQuality,\n  };\n\n  static propTypes = {\n    ...ViewPropTypes,\n    onCameraReady: PropTypes.func,\n    flashMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    ratio: PropTypes.string,\n    autoFocus: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n      PropTypes.number,\n    ]),\n    focusDepth: PropTypes.number,\n    zoom: PropTypes.number,\n    whiteBalance: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  };\n\n  static defaultProps = {\n    type: CameraManager.Type.back,\n    flashMode: CameraManager.FlashMode.off,\n    autoFocus: CameraManager.AutoFocus.on,\n    focusDepth: 0,\n    ratio: '4:3',\n    zoom: 0,\n    whiteBalance: CameraManager.WhiteBalance.auto,\n  };\n\n  async takePictureAsync(options?: PictureOptions) {\n    if (!options) {\n      options = {};\n    }\n    if (!options.quality) {\n      options.quality = 1;\n    }\n    return await CameraManager.takePicture(options);\n  }\n\n  async getSupportedRatiosAsync() {\n    if (Platform.OS === 'android') {\n      return await CameraManager.getSupportedRatios();\n    } else {\n      throw new Error('Ratio is not supported on iOS');\n    }\n  }\n\n  takePicture(options?: PictureOptions) {\n    console.warn(\n      `Call takePictureAsync instead of takePicture. This method will be removed in SDK 22.`\n    );\n    return this.takePictureAsync(options);\n  }\n\n  async recordAsync(options?: RecordingOptions) {\n    if (!options || typeof options !== 'object') {\n      options = {};\n    } else if (typeof options.quality === 'string') {\n      options.quality = Camera.Constants.VideoQuality[options.quality];\n    }\n    return await CameraManager.record(options);\n  }\n\n  stopRecording() {\n    CameraManager.stopRecording();\n  }\n\n  getSupportedRatios() {\n    console.warn(\n      `Call getSupportedRatiosAsync instead of getSupportedRatios. This method will be removed in SDK 22.`\n    );\n    return this.getSupportedRatiosAsync();\n  }\n\n  _nativeOnCameraReady = () => {\n    if (this.props.onCameraReady) {\n      this.props.onCameraReady();\n    }\n  };\n\n  render() {\n    const nativeProps = this._convertNativeProps(this.props);\n\n    return <ExponentCamera {...nativeProps} />;\n  }\n\n  _convertNativeProps(props: Props) {\n    const newProps = { ...props };\n    if (typeof props.flashMode === 'string') {\n      newProps.flashMode = Camera.Constants.FlashMode[props.flashMode];\n    }\n\n    if (typeof props.type === 'string') {\n      newProps.type = Camera.Constants.Type[props.type];\n    }\n\n    if (typeof props.autoFocus === 'string') {\n      newProps.autoFocus = Camera.Constants.AutoFocus[props.autoFocus];\n    }\n\n    if (typeof props.whiteBalance === 'string') {\n      newProps.whiteBalance = Camera.Constants.WhiteBalance[props.whiteBalance];\n    }\n\n    newProps.onCameraReadyNative = this._nativeOnCameraReady;\n\n    if (Platform.OS === 'ios') {\n      delete newProps.ratio;\n    }\n\n    return newProps;\n  }\n}\n\nexport const Constants = Camera.Constants;\n\nconst ExponentCamera = requireNativeComponent('ExponentCamera', Camera, {\n  nativeOnly: {\n    onCameraReadyNative: true,\n  },\n});\n"]}]