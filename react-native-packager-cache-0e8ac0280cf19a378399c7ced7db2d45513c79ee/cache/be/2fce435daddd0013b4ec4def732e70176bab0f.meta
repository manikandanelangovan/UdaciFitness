["50e354dd26f9798713d204bf0014eaf24b1af152","ed53512bf0e82c314586f5942022cb0d281e9a9d",["NativeModules"],[40],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Components/Clipboard/Clipboard.js"],"names":["Clipboard","require","module","exports","getString","setString","content"],"mappings":";AAWA;;AAEA,IAAMA,YAAYC,yBAAyBD,SAA3C;;AAKAE,OAAOC,OAAP,GAAiB;AASfC,WATe,uBASc;AAC3B,WAAOJ,UAAUI,SAAV,EAAP;AACD,GAXc;AAqBfC,WArBe,qBAqBLC,OArBK,EAqBY;AACzBN,cAAUK,SAAV,CAAoBC,OAApB;AACD;AAvBc,CAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Clipboard\n * @flow\n */\n'use strict';\n\nconst Clipboard = require('NativeModules').Clipboard;\n\n/**\n * `Clipboard` gives you an interface for setting and getting content from Clipboard on both iOS and Android\n */\nmodule.exports = {\n  /**\n   * Get content of string type, this method returns a `Promise`, so you can use following code to get clipboard content\n   * ```javascript\n   * async _getContent() {\n   *   var content = await Clipboard.getString();\n   * }\n   * ```\n   */\n  getString(): Promise<string> {\n    return Clipboard.getString();\n  },\n  /**\n   * Set content of string type. You can use following code to set clipboard content\n   * ```javascript\n   * _setContent() {\n   *   Clipboard.setString('hello world');\n   * }\n   * ```\n   * @param the content to be stored in the clipboard.\n   */\n  setString(content: string) {\n    Clipboard.setString(content);\n  }\n};\n"]}]