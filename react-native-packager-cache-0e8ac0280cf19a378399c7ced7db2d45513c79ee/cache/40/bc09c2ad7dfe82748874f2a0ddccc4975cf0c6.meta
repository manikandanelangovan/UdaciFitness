["eac12b4da4f1d1031f700aaa267309ae4e5cdad0","08e6b5b4b6535b7d0d4c396ba280db925d6f451b",["ErrorUtils","Systrace","deepFreezeAndThrowOnMutationInDev","fbjs/lib/invariant","stringifySafe","JSTimers"],[42,80,142,204,255,5847],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"],"names":["ErrorUtils","require","Systrace","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe","TO_JS","TO_NATIVE","MODULE_IDS","METHOD_IDS","PARAMS","MIN_TIME_BETWEEN_FLUSHES_MS","TRACE_TAG_REACT_APPS","DEBUG_INFO_LIMIT","JSTimers","MessageQueue","callFunctionReturnFlushedQueue","module","method","args","__guard","__callFunction","flushedQueue","callFunctionReturnResultAndFlushedQueue","result","invokeCallbackAndReturnFlushedQueue","cbID","__invokeCallback","__callImmediates","queue","_queue","_callID","length","_lazyCallableModules","_successCallbacks","_failureCallbacks","_lastFlush","_eventLoopStartTime","Date","getTime","__DEV__","_debugInfo","_remoteModuleTable","_remoteMethodTable","name","factory","getValue","moduleID","methodID","params","onFail","onSucc","push","global","nativeTraceBeginAsyncFlow","JSON","stringify","now","nativeFlushQueueImmediate","_inCall","counterEvent","__spy","__spyNativeCall","failCbId","successCbId","nativeCallSyncHook","returnValue","isSync","methods","fn","error","reportFatalError","beginEvent","callImmediates","endEvent","__spyJSCall","moduleMethods","getCallableModule","apply","callID","isSuccess","callback","debug","errorMessage","profileName","methodArgs","type","spy","moduleName","methodName","isFinite","spyOrToggle","prototype","console","log","info","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule MessageQueue\n * @flow\n * @format\n */\n\n/*eslint no-bitwise: 0*/\n\n'use strict';\n\nconst ErrorUtils = require('ErrorUtils');\nconst Systrace = require('Systrace');\n\nconst deepFreezeAndThrowOnMutationInDev = require('deepFreezeAndThrowOnMutationInDev');\nconst invariant = require('fbjs/lib/invariant');\nconst stringifySafe = require('stringifySafe');\n\nexport type SpyData = {\n  type: number,\n  module: ?string,\n  method: string | number,\n  isSync: boolean,\n  successCbId: number,\n  failCbId: number,\n  args: Array<any>,\n  returnValue?: any,\n};\n\nconst TO_JS = 0;\nconst TO_NATIVE = 1;\n\nconst MODULE_IDS = 0;\nconst METHOD_IDS = 1;\nconst PARAMS = 2;\nconst MIN_TIME_BETWEEN_FLUSHES_MS = 5;\n\nconst TRACE_TAG_REACT_APPS = 1 << 17;\n\nconst DEBUG_INFO_LIMIT = 64;\n\n// Work around an initialization order issue\nlet JSTimers = null;\n\nclass MessageQueue {\n  _lazyCallableModules: {[key: string]: (void) => Object};\n  _queue: [Array<number>, Array<number>, Array<any>, number];\n  _successCallbacks: Array<?Function>;\n  _failureCallbacks: Array<?Function>;\n  _callID: number;\n  _inCall: number;\n  _lastFlush: number;\n  _eventLoopStartTime: number;\n\n  _debugInfo: Object;\n  _remoteModuleTable: Object;\n  _remoteMethodTable: Object;\n\n  __spy: ?(data: SpyData) => void;\n\n  constructor() {\n    this._lazyCallableModules = {};\n    this._queue = [[], [], [], 0];\n    this._successCallbacks = [];\n    this._failureCallbacks = [];\n    this._callID = 0;\n    this._lastFlush = 0;\n    this._eventLoopStartTime = new Date().getTime();\n\n    if (__DEV__) {\n      this._debugInfo = {};\n      this._remoteModuleTable = {};\n      this._remoteMethodTable = {};\n    }\n  }\n\n  /**\n   * Public APIs\n   */\n  static spy(spyOrToggle: boolean | ((data: SpyData) => void)) {\n    if (spyOrToggle === true) {\n      MessageQueue.prototype.__spy = info => {\n        console.log(\n          `${info.type === TO_JS ? 'N->JS' : 'JS->N'} : ` +\n            `${info.module ? info.module + '.' : ''}${info.method}` +\n            `(${JSON.stringify(info.args)})`,\n        );\n      };\n    } else if (spyOrToggle === false) {\n      MessageQueue.prototype.__spy = null;\n    } else {\n      MessageQueue.prototype.__spy = spyOrToggle;\n    }\n  }\n\n  callFunctionReturnFlushedQueue = (\n    module: string,\n    method: string,\n    args: Array<any>,\n  ) => {\n    this.__guard(() => {\n      this.__callFunction(module, method, args);\n    });\n\n    return this.flushedQueue();\n  };\n\n  callFunctionReturnResultAndFlushedQueue = (\n    module: string,\n    method: string,\n    args: Array<any>,\n  ) => {\n    let result;\n    this.__guard(() => {\n      result = this.__callFunction(module, method, args);\n    });\n\n    return [result, this.flushedQueue()];\n  };\n\n  invokeCallbackAndReturnFlushedQueue = (cbID: number, args: Array<any>) => {\n    this.__guard(() => {\n      this.__invokeCallback(cbID, args);\n    });\n\n    return this.flushedQueue();\n  };\n\n  flushedQueue = () => {\n    this.__guard(() => {\n      this.__callImmediates();\n    });\n\n    const queue = this._queue;\n    this._queue = [[], [], [], this._callID];\n    return queue[0].length ? queue : null;\n  };\n\n  getEventLoopRunningTime() {\n    return new Date().getTime() - this._eventLoopStartTime;\n  }\n\n  registerCallableModule(name: string, module: Object) {\n    this._lazyCallableModules[name] = () => module;\n  }\n\n  registerLazyCallableModule(name: string, factory: void => Object) {\n    let module: Object;\n    let getValue: ?(void) => Object = factory;\n    this._lazyCallableModules[name] = () => {\n      if (getValue) {\n        module = getValue();\n        getValue = null;\n      }\n      return module;\n    };\n  }\n\n  getCallableModule(name: string) {\n    const getValue = this._lazyCallableModules[name];\n    return getValue ? getValue() : null;\n  }\n\n  enqueueNativeCall(\n    moduleID: number,\n    methodID: number,\n    params: Array<any>,\n    onFail: ?Function,\n    onSucc: ?Function,\n  ) {\n    if (onFail || onSucc) {\n      if (__DEV__) {\n        this._debugInfo[this._callID] = [moduleID, methodID];\n        if (this._callID > DEBUG_INFO_LIMIT) {\n          delete this._debugInfo[this._callID - DEBUG_INFO_LIMIT];\n        }\n      }\n      // Encode callIDs into pairs of callback identifiers by shifting left and using the rightmost bit\n      // to indicate fail (0) or success (1)\n      onFail && params.push(this._callID << 1);\n      onSucc && params.push((this._callID << 1) | 1);\n      this._successCallbacks[this._callID] = onSucc;\n      this._failureCallbacks[this._callID] = onFail;\n    }\n\n    if (__DEV__) {\n      global.nativeTraceBeginAsyncFlow &&\n        global.nativeTraceBeginAsyncFlow(\n          TRACE_TAG_REACT_APPS,\n          'native',\n          this._callID,\n        );\n    }\n    this._callID++;\n\n    this._queue[MODULE_IDS].push(moduleID);\n    this._queue[METHOD_IDS].push(methodID);\n\n    if (__DEV__) {\n      // Any params sent over the bridge should be encodable as JSON\n      JSON.stringify(params);\n\n      // The params object should not be mutated after being queued\n      deepFreezeAndThrowOnMutationInDev((params: any));\n    }\n    this._queue[PARAMS].push(params);\n\n    const now = new Date().getTime();\n    if (\n      global.nativeFlushQueueImmediate &&\n      (now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS ||\n        this._inCall === 0)\n    ) {\n      var queue = this._queue;\n      this._queue = [[], [], [], this._callID];\n      this._lastFlush = now;\n      global.nativeFlushQueueImmediate(queue);\n    }\n    Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);\n\n    if (this.__spy) {\n      this.__spyNativeCall(moduleID, methodID, params, {\n        failCbId: onFail ? params[params.length - 2] : -1,\n        successCbId: onSucc ? params[params.length - 1] : -1,\n      });\n    }\n  }\n\n  callSyncHook(moduleID: number, methodID: number, args: Array<any>) {\n    if (__DEV__) {\n      invariant(\n        global.nativeCallSyncHook,\n        'Calling synchronous methods on native ' +\n          'modules is not supported in Chrome.\\n\\n Consider providing alternative ' +\n          'methods to expose this method in debug mode, e.g. by exposing constants ' +\n          'ahead-of-time.',\n      );\n    }\n    const returnValue = global.nativeCallSyncHook(moduleID, methodID, args);\n    if (this.__spy) {\n      this.__spyNativeCall(moduleID, methodID, args, {\n        isSync: true,\n        returnValue,\n      });\n    }\n    return returnValue;\n  }\n\n  createDebugLookup(moduleID: number, name: string, methods: Array<string>) {\n    if (__DEV__) {\n      this._remoteModuleTable[moduleID] = name;\n      this._remoteMethodTable[moduleID] = methods;\n    }\n  }\n\n  /**\n   * Private methods\n   */\n\n  __guard(fn: () => void) {\n    this._inCall++;\n    try {\n      fn();\n    } catch (error) {\n      ErrorUtils.reportFatalError(error);\n    } finally {\n      this._inCall--;\n    }\n  }\n\n  __callImmediates() {\n    Systrace.beginEvent('JSTimers.callImmediates()');\n    if (!JSTimers) {\n      JSTimers = require('JSTimers');\n    }\n    JSTimers.callImmediates();\n    Systrace.endEvent();\n  }\n\n  __callFunction(module: string, method: string, args: Array<any>) {\n    this._lastFlush = new Date().getTime();\n    this._eventLoopStartTime = this._lastFlush;\n    Systrace.beginEvent(`${module}.${method}()`);\n    if (this.__spy) {\n      this.__spyJSCall(module, method, args);\n    }\n    const moduleMethods = this.getCallableModule(module);\n    invariant(\n      !!moduleMethods,\n      'Module %s is not a registered callable module (calling %s)',\n      module,\n      method,\n    );\n    invariant(\n      !!moduleMethods[method],\n      'Method %s does not exist on module %s',\n      method,\n      module,\n    );\n    const result = moduleMethods[method].apply(moduleMethods, args);\n    Systrace.endEvent();\n    return result;\n  }\n\n  __invokeCallback(cbID: number, args: Array<any>) {\n    this._lastFlush = new Date().getTime();\n    this._eventLoopStartTime = this._lastFlush;\n\n    // The rightmost bit of cbID indicates fail (0) or success (1), the other bits are the callID shifted left.\n    const callID = cbID >>> 1;\n    const isSuccess = cbID & 1;\n    const callback = isSuccess\n      ? this._successCallbacks[callID]\n      : this._failureCallbacks[callID];\n\n    if (__DEV__) {\n      const debug = this._debugInfo[callID];\n      const module = debug && this._remoteModuleTable[debug[0]];\n      const method = debug && this._remoteMethodTable[debug[0]][debug[1]];\n      if (!callback) {\n        let errorMessage = `Callback with id ${cbID}: ${module}.${method}() not found`;\n        if (method) {\n          errorMessage =\n            `The callback ${method}() exists in module ${module}, ` +\n            'but only one callback may be registered to a function in a native module.';\n        }\n        invariant(callback, errorMessage);\n      }\n      const profileName = debug\n        ? '<callback for ' + module + '.' + method + '>'\n        : cbID + '';\n      if (this.__spy) {\n        this.__spyJSCall(null, profileName, args, {\n          failCbId: isSuccess ? -1 : cbID,\n          successCbId: isSuccess ? cbID : -1,\n        });\n      }\n      Systrace.beginEvent(\n        `MessageQueue.invokeCallback(${profileName}, ${stringifySafe(args)})`,\n      );\n    }\n\n    if (!callback) {\n      return;\n    }\n\n    this._successCallbacks[callID] = this._failureCallbacks[callID] = null;\n    callback.apply(null, args);\n\n    if (__DEV__) {\n      Systrace.endEvent();\n    }\n  }\n\n  __spyJSCall(\n    module: ?string,\n    method: string,\n    methodArgs: Array<any>,\n    params: any,\n  ) {\n    if (!this.__spy) {\n      return;\n    }\n    this.__spy({\n      type: TO_JS,\n      isSync: false,\n      module,\n      method,\n      failCbId: -1,\n      successCbId: -1,\n      args: methodArgs,\n      ...params,\n    });\n  }\n\n  __spyNativeCall(\n    moduleID: number,\n    methodID: number,\n    methodArgs: Array<any>,\n    params: any,\n  ) {\n    const spy = this.__spy;\n    if (!spy) {\n      return;\n    }\n\n    let moduleName = moduleID + '';\n    let methodName = methodID;\n    if (__DEV__ && isFinite(moduleID)) {\n      moduleName = this._remoteModuleTable[moduleID];\n      methodName = this._remoteMethodTable[moduleID][methodID];\n    }\n\n    spy({\n      type: TO_NATIVE,\n      isSync: false,\n      module: moduleName,\n      method: methodName,\n      failCbId: -1,\n      successCbId: -1,\n      args: methodArgs,\n      ...params,\n    });\n  }\n}\n\nmodule.exports = MessageQueue;\n"]}]