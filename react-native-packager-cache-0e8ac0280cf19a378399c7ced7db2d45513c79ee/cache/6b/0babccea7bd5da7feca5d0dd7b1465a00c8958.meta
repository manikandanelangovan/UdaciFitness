["63e3634da596bb5edbfce3a3bec5b72e799b1d7d","01d81cf9a256bd673294f9329459d67103227256",[],[],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/tiny-queue/index.js"],"names":["Queue","length","prototype","push","item","node","last","next","first","shift","undefined","slice","start","end","Infinity","output","i","module","exports"],"mappings":"AAAA;;AAKA,SAASA,KAAT,GAAiB;AACf,OAAKC,MAAL,GAAc,CAAd;AACD;;AAEDD,MAAME,SAAN,CAAgBC,IAAhB,GAAuB,UAAUC,IAAV,EAAgB;AACrC,MAAIC,OAAO,EAACD,MAAMA,IAAP,EAAX;AACA,MAAI,KAAKE,IAAT,EAAe;AACb,SAAKA,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,GAAiBF,IAA7B;AACD,GAFD,MAEO;AACL,SAAKC,IAAL,GAAY,KAAKE,KAAL,GAAaH,IAAzB;AACD;AACD,OAAKJ,MAAL;AACD,CARD;;AAUAD,MAAME,SAAN,CAAgBO,KAAhB,GAAwB,YAAY;AAClC,MAAIJ,OAAO,KAAKG,KAAhB;AACA,MAAIH,IAAJ,EAAU;AACR,SAAKG,KAAL,GAAaH,KAAKE,IAAlB;AACA,QAAI,CAAE,GAAE,KAAKN,MAAb,EAAsB;AACpB,WAAKK,IAAL,GAAYI,SAAZ;AACD;AACD,WAAOL,KAAKD,IAAZ;AACD;AACF,CATD;;AAWAJ,MAAME,SAAN,CAAgBS,KAAhB,GAAwB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAC5CD,UAAQ,OAAOA,KAAP,KAAiB,WAAjB,GAA+B,CAA/B,GAAmCA,KAA3C;AACAC,QAAM,OAAOA,GAAP,KAAe,WAAf,GAA6BC,QAA7B,GAAwCD,GAA9C;;AAEA,MAAIE,SAAS,EAAb;;AAEA,MAAIC,IAAI,CAAR;AACA,OAAK,IAAIX,OAAO,KAAKG,KAArB,EAA4BH,IAA5B,EAAkCA,OAAOA,KAAKE,IAA9C,EAAoD;AAClD,QAAI,EAAEM,GAAF,GAAQ,CAAZ,EAAe;AACb;AACD,KAFD,MAEO,IAAI,EAAEG,CAAF,GAAMJ,KAAV,EAAiB;AACtBG,aAAOZ,IAAP,CAAYE,KAAKD,IAAjB;AACD;AACF;AACD,SAAOW,MAAP;AACD,CAfD;;AAiBAE,OAAOC,OAAP,GAAiBlB,KAAjB","sourcesContent":["'use strict';\n\n// Simple FIFO queue implementation to avoid having to do shift()\n// on an array, which is slow.\n\nfunction Queue() {\n  this.length = 0;\n}\n\nQueue.prototype.push = function (item) {\n  var node = {item: item};\n  if (this.last) {\n    this.last = this.last.next = node;\n  } else {\n    this.last = this.first = node;\n  }\n  this.length++;\n};\n\nQueue.prototype.shift = function () {\n  var node = this.first;\n  if (node) {\n    this.first = node.next;\n    if (!(--this.length)) {\n      this.last = undefined;\n    }\n    return node.item;\n  }\n};\n\nQueue.prototype.slice = function (start, end) {\n  start = typeof start === 'undefined' ? 0 : start;\n  end = typeof end === 'undefined' ? Infinity : end;\n\n  var output = [];\n\n  var i = 0;\n  for (var node = this.first; node; node = node.next) {\n    if (--end < 0) {\n      break;\n    } else if (++i > start) {\n      output.push(node.item);\n    }\n  }\n  return output;\n}\n\nmodule.exports = Queue;\n"]}]