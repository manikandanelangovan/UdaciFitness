["d1db7bd619a479a9ddde1776dbe91707294f7df7","c4f7ed1b421fd35f8f7a8142aefc1f775845a8ba",["react-native","regenerator-runtime"],[602,653],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/expo/src/Contacts.js"],"names":["getContactsAsync","getContactByIdAsync","DEFAULT_PAGE_SIZE","pageSize","pageOffset","fields","OS","includes","IMAGE","THUMBNAIL","console","warn","ExponentContacts","id","Error","PHONE_NUMBERS","EMAILS","ADDRESSES","NOTE","BIRTHDAY","NON_GREGORIAN_BIRTHDAY","NAME_PREFIX","NAME_SUFFIX","PHONETIC_FIRST_NAME","PHONETIC_MIDDLE_NAME","PHONETIC_LAST_NAME","SOCIAL_PROFILES","IM_ADDRESSES","URLS","DATES","RELATIONSHIPS"],"mappings":";;;;QAwIsBA,gB,GAAAA,gB;QAmBAC,mB,GAAAA,mB;;AAzJtB;;;;AAoIA,IAAMC,oBAAoB,GAA1B;;AAEO,SAAeF,gBAAf;AAAA,iFACoE,EADpE;AAAA,2BACHG,QADG;AAAA,MACHA,QADG,iCACQD,iBADR;AAAA,6BAC2BE,UAD3B;AAAA,MAC2BA,UAD3B,mCACwC,CADxC;AAAA,yBAC2CC,MAD3C;AAAA,MAC2CA,MAD3C,+BACoD,EADpD;;AAAA;AAAA;AAAA;AAAA;AAGL,cACE,sBAASC,EAAT,KAAgB,KAAhB,KACCD,OAAOE,QAAP,CAAgBC,KAAhB,KAA0BH,OAAOE,QAAP,CAAgBE,SAAhB,CAD3B,CADF,EAGE;AACAC,oBAAQC,IAAR,CACE,sFACE,wEAFJ;AAID;AAXI;AAAA,0CAYQ,2BAAcC,gBAAd,CAA+BZ,gBAA/B,CAAgD;AAC3DG,8BAD2D;AAE3DC,kCAF2D;AAG3DC;AAH2D,WAAhD,CAZR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,SAAeJ,mBAAf;AAAA,kFAC0B,EAD1B;AAAA,2BACHI,MADG;AAAA,MACHA,MADG,gCACM,EADN;AAAA,MACUQ,EADV,SACUA,EADV;;AAAA;AAAA;AAAA;AAAA;AAAA,gBAGDA,MAAM,IAHL;AAAA;AAAA;AAAA;;AAAA,gBAIG,IAAIC,KAAJ,CAAU,kCAAV,CAJH;;AAAA;AAAA;AAAA,0CAMU,2BAAcF,gBAAd,CAA+BZ,gBAA/B,CAAgD;AAC3DG,sBAAU,CADiD;AAE3DC,wBAAY,CAF+C;AAG3DC,0BAH2D;AAI3DQ;AAJ2D,WAAhD,CANV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,IAAME,wCAAgB,cAAtB;AACA,IAAMC,0BAAS,QAAf;AACA,IAAMC,gCAAY,WAAlB;AACA,IAAMT,wBAAQ,OAAd;AACA,IAAMC,gCAAY,WAAlB;AACA,IAAMS,sBAAO,MAAb;AACA,IAAMC,8BAAW,UAAjB;AACA,IAAMC,0DAAyB,sBAA/B;AACA,IAAMC,oCAAc,YAApB;AACA,IAAMC,oCAAc,YAApB;AACA,IAAMC,oDAAsB,mBAA5B;AACA,IAAMC,sDAAuB,oBAA7B;AACA,IAAMC,kDAAqB,kBAA3B;AACA,IAAMC,4CAAkB,gBAAxB;AACA,IAAMC,sCAAe,yBAArB;AACA,IAAMC,sBAAO,cAAb;AACA,IAAMC,wBAAQ,OAAd;AACA,IAAMC,wCAAgB,eAAtB","sourcesContent":["// @flow\n\nimport { NativeModules, Platform } from 'react-native';\n\ntype FieldType =\n  | typeof PHONE_NUMBERS\n  | typeof EMAILS\n  | typeof ADDRESSES\n  | typeof IMAGE\n  | typeof THUMBNAIL\n  | typeof NOTE\n  | typeof BIRTHDAY\n  | typeof NON_GREGORIAN_BIRTHDAY\n  | typeof NAME_PREFIX\n  | typeof NAME_SUFFIX\n  | typeof PHONETIC_FIRST_NAME\n  | typeof PHONETIC_MIDDLE_NAME\n  | typeof PHONETIC_LAST_NAME\n  | typeof SOCIAL_PROFILES\n  | typeof IM_ADDRESSES\n  | typeof URLS\n  | typeof DATES\n  | typeof RELATIONSHIPS;\n\ntype Options = {\n  id?: string,\n  pageSize?: number,\n  pageOffset?: number,\n  fields?: FieldType[],\n};\n\ntype Contact = {\n  id: string,\n  contactType: string,\n  name: string,\n  firstName?: string,\n  middleName?: string,\n  lastName?: string,\n  previousLastName?: string,\n  namePrefix?: string,\n  nameSuffix?: string,\n  nickname?: string,\n  phoneticFirstName?: string,\n  phoneticMiddleName?: string,\n  phoneticLastName?: string,\n  birthday?: {\n    day?: number,\n    month?: number,\n    year?: number,\n  },\n  nonGregorianBirthday?: {\n    day?: number,\n    month?: number,\n    year?: number,\n  },\n  emails?: {\n    email?: string,\n    primary?: boolean,\n    label: string,\n    id: string,\n  }[],\n  phoneNumbers?: {\n    number?: string,\n    primary?: boolean,\n    digits?: string,\n    countryCode?: string,\n    label: string,\n    id: string,\n  }[],\n  addresses?: {\n    street?: string,\n    city?: string,\n    country?: string,\n    region?: string,\n    neighborhood?: string,\n    postalCode?: string,\n    poBox?: string,\n    isoCountryCode?: string,\n    label: string,\n    id: string,\n  }[],\n  socialProfiles?: {\n    service?: string,\n    localizedProfile?: string,\n    url?: string,\n    username?: string,\n    userId?: string,\n    label: string,\n    id: string,\n  }[],\n  instantMessageAddresses?: {\n    service?: string,\n    username?: string,\n    localizedService?: string,\n    label: string,\n    id: string,\n  }[],\n  urls?: {\n    label: string,\n    url?: string,\n    id: string,\n  }[],\n  company?: string,\n  jobTitle?: string,\n  department?: string,\n  imageAvailable?: boolean,\n  image?: {\n    uri?: string,\n  },\n  thumbnail?: {\n    uri?: string,\n  },\n  note?: string,\n  dates?: {\n    day?: number,\n    month?: number,\n    year?: number,\n    id: string,\n    label: string,\n  }[],\n  relationships?: {\n    label: string,\n    name?: string,\n    id: string,\n  }[],\n};\n\ntype Response = {\n  data: Contact[],\n  total: number,\n  hasNextPage: boolean,\n  hasPreviousPage: boolean,\n};\n\nconst DEFAULT_PAGE_SIZE = 100;\n\nexport async function getContactsAsync(\n  { pageSize = DEFAULT_PAGE_SIZE, pageOffset = 0, fields = [] }: Options = {}\n): Promise<Response> {\n  if (\n    Platform.OS === 'ios' &&\n    (fields.includes(IMAGE) || fields.includes(THUMBNAIL))\n  ) {\n    console.warn(\n      'Mind that fetching images for all contacts might be time and resource consuming. ' +\n        'Consider using getContactByIdAsync() to get data for a single contact.'\n    );\n  }\n  return await NativeModules.ExponentContacts.getContactsAsync({\n    pageSize,\n    pageOffset,\n    fields,\n  });\n}\n\nexport async function getContactByIdAsync(\n  { fields = [], id }: Options = {}\n): Promise<Response> {\n  if (id == null) {\n    throw new Error('Please pass an ID as a parameter');\n  } else {\n    return await NativeModules.ExponentContacts.getContactsAsync({\n      pageSize: 1,\n      pageOffset: 0,\n      fields,\n      id,\n    });\n  }\n}\n\nexport const PHONE_NUMBERS = 'phoneNumbers';\nexport const EMAILS = 'emails';\nexport const ADDRESSES = 'addresses';\nexport const IMAGE = 'image';\nexport const THUMBNAIL = 'thumbnail';\nexport const NOTE = 'note';\nexport const BIRTHDAY = 'birthday';\nexport const NON_GREGORIAN_BIRTHDAY = 'nonGregorianBirthday';\nexport const NAME_PREFIX = 'namePrefix';\nexport const NAME_SUFFIX = 'nameSuffix';\nexport const PHONETIC_FIRST_NAME = 'phoneticFirstName';\nexport const PHONETIC_MIDDLE_NAME = 'phoneticMiddleName';\nexport const PHONETIC_LAST_NAME = 'phoneticLastName';\nexport const SOCIAL_PROFILES = 'socialProfiles';\nexport const IM_ADDRESSES = 'instantMessageAddresses';\nexport const URLS = 'urlAddresses';\nexport const DATES = 'dates';\nexport const RELATIONSHIPS = 'relationships';\n"]}]