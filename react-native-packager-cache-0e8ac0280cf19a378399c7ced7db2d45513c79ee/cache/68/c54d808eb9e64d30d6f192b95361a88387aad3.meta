["c9cb32f89633495633f9fd4634bcd0e69d686188","dc8685e876076a23bccbbeea2a08779e6aca7d55",["./EventSubscription"],[714],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/fbemitter/lib/EmitterSubscription.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","EventSubscription","require","EmitterSubscription","_EventSubscription","subscriber","listener","context","call","module","exports"],"mappings":";;AAYA;;AAEA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,oBAAoBC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,eAAe,IAAvD,EAA6D;AAAE,UAAM,IAAIH,SAAJ,CAAc,6DAA6D,OAAOG,UAAlF,CAAN;AAAsG,GAACD,SAASE,SAAT,GAAqBC,OAAOC,MAAP,CAAcH,cAAcA,WAAWC,SAAvC,EAAkD,EAAEG,aAAa,EAAEC,OAAON,QAAT,EAAmBO,YAAY,KAA/B,EAAsCC,UAAU,IAAhD,EAAsDC,cAAc,IAApE,EAAf,EAAlD,CAArB,CAAqK,IAAIR,UAAJ,EAAgBE,OAAOO,cAAP,GAAwBP,OAAOO,cAAP,CAAsBV,QAAtB,EAAgCC,UAAhC,CAAxB,GAAsED,SAASW,SAAT,GAAqBV,UAA3F;AAAwG;;AAE9e,IAAIW,oBAAoBC,QAAQ,qBAAR,CAAxB;;AAMA,IAAIC,sBAAuB,UAAUC,kBAAV,EAA8B;AACvDhB,YAAUe,mBAAV,EAA+BC,kBAA/B;;AAWA,WAASD,mBAAT,CAA6BE,UAA7B,EAAyCC,QAAzC,EAAmDC,OAAnD,EAA4D;AAC1DvB,oBAAgB,IAAhB,EAAsBmB,mBAAtB;;AAEAC,uBAAmBI,IAAnB,CAAwB,IAAxB,EAA8BH,UAA9B;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACD;;AAED,SAAOJ,mBAAP;AACD,CArByB,CAqBvBF,iBArBuB,CAA1B;;AAuBAQ,OAAOC,OAAP,GAAiBP,mBAAjB","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n * \n * @providesModule EmitterSubscription\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventSubscription = require('./EventSubscription');\n\n/**\n * EmitterSubscription represents a subscription with listener and context data.\n */\n\nvar EmitterSubscription = (function (_EventSubscription) {\n  _inherits(EmitterSubscription, _EventSubscription);\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls\n   *   this subscription\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  function EmitterSubscription(subscriber, listener, context) {\n    _classCallCheck(this, EmitterSubscription);\n\n    _EventSubscription.call(this, subscriber);\n    this.listener = listener;\n    this.context = context;\n  }\n\n  return EmitterSubscription;\n})(EventSubscription);\n\nmodule.exports = EmitterSubscription;"]}]