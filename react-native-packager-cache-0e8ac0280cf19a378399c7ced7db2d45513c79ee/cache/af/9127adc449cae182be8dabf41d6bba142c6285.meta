["a205d2d223c1ea012e313673c445e684375f8dc6","3df252afa1e49f19518adea3a2fe4b8d397c7d59",["RCTDeviceEventEmitter","NativeModules","fbjs/lib/invariant"],[52,111,170],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Settings/Settings.ios.js"],"names":["RCTDeviceEventEmitter","require","RCTSettingsManager","SettingsManager","invariant","subscriptions","Settings","_settings","settings","get","key","set","setValues","watchKeys","keys","callback","Array","isArray","sid","length","push","clearWatch","watchId","_sendObservations","body","Object","forEach","newValue","didChange","sub","indexOf","addListener","bind","module","exports"],"mappings":";AAWA;;AAEA,IAAIA,wBAAwBC,OAAxB,yBAAJ;AACA,IAAIC,qBAAqBD,yBAAyBE,eAAlD;;AAEA,IAAIC,YAAYH,OAAZ,sBAAJ;;AAEA,IAAII,gBAAmE,EAAvE;;AAEA,IAAIC,WAAW;AACbC,aAAWL,sBAAsBA,mBAAmBM,QADvC;;AAGbC,KAHa,eAGTC,GAHS,EAGW;AACtB,WAAO,KAAKH,SAAL,CAAeG,GAAf,CAAP;AACD,GALY;AAObC,KAPa,eAOTH,QAPS,EAOS;AACpB,SAAKD,SAAL,GAAiB,qBAAc,KAAKA,SAAnB,EAA8BC,QAA9B,CAAjB;AACAN,uBAAmBU,SAAnB,CAA6BJ,QAA7B;AACD,GAVY;AAYbK,WAZa,qBAYHC,IAZG,EAY2BC,QAZ3B,EAYuD;AAClE,QAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,aAAO,CAACA,IAAD,CAAP;AACD;;AAEDV,cACEY,MAAMC,OAAN,CAAcH,IAAd,CADF,EAEE,6CAFF;;AAKA,QAAII,MAAMb,cAAcc,MAAxB;AACAd,kBAAce,IAAd,CAAmB,EAACN,MAAMA,IAAP,EAAaC,UAAUA,QAAvB,EAAnB;AACA,WAAOG,GAAP;AACD,GAzBY;AA2BbG,YA3Ba,sBA2BFC,OA3BE,EA2Be;AAC1B,QAAIA,UAAUjB,cAAcc,MAA5B,EAAoC;AAClCd,oBAAciB,OAAd,IAAyB,EAACR,MAAM,EAAP,EAAWC,UAAU,IAArB,EAAzB;AACD;AACF,GA/BY;AAiCbQ,mBAjCa,6BAiCKC,IAjCL,EAiCmB;AAAA;;AAC9BC,WAAOX,IAAP,CAAYU,IAAZ,EAAkBE,OAAlB,CAA0B,UAAChB,GAAD,EAAS;AACjC,UAAIiB,WAAWH,KAAKd,GAAL,CAAf;AACA,UAAIkB,YAAY,MAAKrB,SAAL,CAAeG,GAAf,MAAwBiB,QAAxC;AACA,YAAKpB,SAAL,CAAeG,GAAf,IAAsBiB,QAAtB;;AAEA,UAAIC,SAAJ,EAAe;AACbvB,sBAAcqB,OAAd,CAAsB,UAACG,GAAD,EAAS;AAC7B,cAAIA,IAAIf,IAAJ,CAASgB,OAAT,CAAiBpB,GAAjB,MAA0B,CAAC,CAA3B,IAAgCmB,IAAId,QAAxC,EAAkD;AAChDc,gBAAId,QAAJ;AACD;AACF,SAJD;AAKD;AACF,KAZD;AAaD;AA/CY,CAAf;;AAkDAf,sBAAsB+B,WAAtB,CACE,iBADF,EAEEzB,SAASiB,iBAAT,CAA2BS,IAA3B,CAAgC1B,QAAhC,CAFF;;AAKA2B,OAAOC,OAAP,GAAiB5B,QAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Settings\n * @flow\n */\n'use strict';\n\nvar RCTDeviceEventEmitter = require('RCTDeviceEventEmitter');\nvar RCTSettingsManager = require('NativeModules').SettingsManager;\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar subscriptions: Array<{keys: Array<string>, callback: ?Function}> = [];\n\nvar Settings = {\n  _settings: RCTSettingsManager && RCTSettingsManager.settings,\n\n  get(key: string): mixed {\n    return this._settings[key];\n  },\n\n  set(settings: Object) {\n    this._settings = Object.assign(this._settings, settings);\n    RCTSettingsManager.setValues(settings);\n  },\n\n  watchKeys(keys: string | Array<string>, callback: Function): number {\n    if (typeof keys === 'string') {\n      keys = [keys];\n    }\n\n    invariant(\n      Array.isArray(keys),\n      'keys should be a string or array of strings'\n    );\n\n    var sid = subscriptions.length;\n    subscriptions.push({keys: keys, callback: callback});\n    return sid;\n  },\n\n  clearWatch(watchId: number) {\n    if (watchId < subscriptions.length) {\n      subscriptions[watchId] = {keys: [], callback: null};\n    }\n  },\n\n  _sendObservations(body: Object) {\n    Object.keys(body).forEach((key) => {\n      var newValue = body[key];\n      var didChange = this._settings[key] !== newValue;\n      this._settings[key] = newValue;\n\n      if (didChange) {\n        subscriptions.forEach((sub) => {\n          if (sub.keys.indexOf(key) !== -1 && sub.callback) {\n            sub.callback();\n          }\n        });\n      }\n    });\n  },\n};\n\nRCTDeviceEventEmitter.addListener(\n  'settingsUpdated',\n  Settings._sendObservations.bind(Settings)\n);\n\nmodule.exports = Settings;\n"]}]