["08e52b64a7266c4aed96495842f5797e6f5ab116","f8e42690172b233dd8ee2724646952105bb2b683",["react-native","uuid-js","regenerator-runtime"],[611,651,758],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/expo/src/FileSystem.js"],"names":["getInfoAsync","readAsStringAsync","writeAsStringAsync","deleteAsync","moveAsync","copyAsync","makeDirectoryAsync","readDirectoryAsync","downloadAsync","createDownloadResumable","FS","ExponentFileSystem","normalizeEndingSlash","p","replace","documentDirectory","cacheDirectory","fileUri","options","contents","uri","callback","resumeData","DownloadResumable","url","_uuid","create","toString","_url","_fileUri","_options","_resumeData","_callback","_subscription","_emitter","_addSubscription","downloadResumableStartAsync","downloadResumablePauseAsync","pauseResult","savable","Error","addListener","uuid","data"],"mappings":"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","sourcesContent":["// @flow\n\nimport { NativeEventEmitter, NativeModules } from 'react-native';\nimport UUID from 'uuid-js';\n\nconst { ExponentFileSystem: FS } = NativeModules;\n\nconst normalizeEndingSlash = p => p.replace(/\\/*$/, '') + '/';\n\nFS.documentDirectory = normalizeEndingSlash(FS.documentDirectory);\nFS.cacheDirectory = normalizeEndingSlash(FS.cacheDirectory);\n\nexport const documentDirectory = FS.documentDirectory;\nexport const cacheDirectory = FS.cacheDirectory;\n\ntype FileInfo =\n  | {\n      exists: true,\n      uri: string,\n      size: number,\n      modificationTime: number,\n      md5?: string,\n    }\n  | {\n      exists: false,\n      isDirectory: false,\n    };\n\nexport function getInfoAsync(\n  fileUri: string,\n  options: { md5?: boolean } = {}\n): Promise<FileInfo> {\n  return FS.getInfoAsync(fileUri, options);\n}\n\nexport function readAsStringAsync(fileUri: string): Promise<string> {\n  return FS.readAsStringAsync(fileUri, {});\n}\n\nexport function writeAsStringAsync(\n  fileUri: string,\n  contents: string\n): Promise<void> {\n  return FS.writeAsStringAsync(fileUri, contents, {});\n}\n\nexport function deleteAsync(\n  fileUri: string,\n  options: { idempotent?: boolean } = {}\n): Promise<void> {\n  return FS.deleteAsync(fileUri, options);\n}\n\nexport function moveAsync(options: {\n  from: string,\n  to: string,\n}): Promise<void> {\n  return FS.moveAsync(options);\n}\n\nexport function copyAsync(options: {\n  from: string,\n  to: string,\n}): Promise<void> {\n  return FS.copyAsync(options);\n}\n\nexport function makeDirectoryAsync(\n  fileUri: string,\n  options: { intermediates?: boolean } = {}\n): Promise<void> {\n  return FS.makeDirectoryAsync(fileUri, options);\n}\n\nexport function readDirectoryAsync(fileUri: string): Array<string> {\n  return FS.readDirectoryAsync(fileUri, {});\n}\n\ntype DownloadOptions = {\n  md5?: boolean,\n  headers?: { [string]: string },\n};\ntype DownloadResult = {\n  uri: string,\n  status: number,\n  headers: { [string]: string },\n  md5?: string,\n};\n\nexport function downloadAsync(\n  uri: string,\n  fileUri: string,\n  options: DownloadOptions = {}\n): Promise<DownloadResult> {\n  return FS.downloadAsync(uri, fileUri, options);\n}\n\nexport function createDownloadResumable(\n  uri: string,\n  fileUri: string,\n  options?: DownloadOptions,\n  callback?: DownloadProgressCallback,\n  resumeData?: string\n) {\n  return new DownloadResumable(uri, fileUri, options, callback, resumeData);\n}\n\ntype DownloadProgressCallback = (data: DownloadProgressData) => void;\ntype DownloadProgressData = {\n  totalBytesWritten: number,\n  totalBytesExpectedToWrite: number,\n};\ntype DownloadPauseState = {\n  url: string,\n  fileUri: string,\n  options: DownloadOptions,\n  resumeData: ?string,\n};\n\nexport class DownloadResumable {\n  _uuid: string;\n  _url: string;\n  _fileUri: string;\n  _options: DownloadOptions;\n  _resumeData: ?string;\n  _callback: ?DownloadProgressCallback;\n  _subscription: ?Function;\n  _emitter: NativeEventEmitter;\n\n  constructor(\n    url: string,\n    fileUri: string,\n    options: DownloadOptions = {},\n    callback: ?DownloadProgressCallback,\n    resumeData: ?string\n  ) {\n    this._uuid = UUID.create(4).toString();\n    this._url = url;\n    this._fileUri = fileUri;\n    this._options = options;\n    this._resumeData = resumeData;\n    this._callback = callback;\n    this._subscription = null;\n    this._emitter = new NativeEventEmitter(FS);\n  }\n\n  async downloadAsync(): Promise<?DownloadResult> {\n    this._addSubscription();\n    return await FS.downloadResumableStartAsync(\n      this._url,\n      this._fileUri,\n      this._uuid,\n      this._options,\n      this._resumeData\n    );\n  }\n\n  async pauseAsync(): Promise<DownloadPauseState> {\n    const pauseResult = await FS.downloadResumablePauseAsync(this._uuid);\n    if (pauseResult) {\n      this._resumeData = pauseResult.resumeData;\n      return this.savable();\n    } else {\n      throw new Error('Unable to generate a savable pause state');\n    }\n  }\n\n  async resumeAsync(): Promise<?DownloadResult> {\n    this._addSubscription();\n    return await FS.downloadResumableStartAsync(\n      this._url,\n      this._fileUri,\n      this._uuid,\n      this._options,\n      this._resumeData\n    );\n  }\n\n  savable(): DownloadPauseState {\n    return {\n      url: this._url,\n      fileUri: this._fileUri,\n      options: this._options,\n      resumeData: this._resumeData,\n    };\n  }\n\n  _addSubscription(): void {\n    if (this._subscription) {\n      return;\n    }\n    this._subscription = this._emitter.addListener(\n      'Exponent.downloadProgress',\n      ({ uuid, data }) => {\n        if (uuid === this._uuid) {\n          const callback = this._callback;\n          if (callback) {\n            callback(data);\n          }\n        }\n      }\n    );\n  }\n}\n"]}]