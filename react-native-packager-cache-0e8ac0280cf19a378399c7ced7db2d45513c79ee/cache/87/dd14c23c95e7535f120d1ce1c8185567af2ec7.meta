["bd8c23b91d11a6d1883e79db0f5b26b630fca438","31822792440d121848869a4cc38ddff1b1938309",["react","react-native","react-native-safe-module","prop-types"],[21,118,173,319],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/lottie-react-native/lib/js/Animation.js"],"names":["NativeLottieView","component","viewName","mockComponent","LottieViewManager","module","moduleName","mock","play","reset","ViewStyleExceptBorderPropType","props","propName","componentName","rest","flattened","flatten","usesBorder","Object","keys","some","key","startsWith","Error","style","NotAllowedPropType","value","propTypes","children","progress","number","speed","loop","bool","source","oneOfType","object","string","isRequired","defaultProps","viewConfig","uiViewClassName","validAttributes","LottieAnimation","refRoot","bind","updateView","getHandle","runCommand","name","args","select","android","dispatchViewManagerCommand","LottieAnimationView","Commands","ios","root","sourceName","undefined","sourceJson","Component","Animation","createAnimatedComponent","prototype","getNode","pause","exports"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  findNodeHandle,\n  UIManager,\n  Animated,\n  View,\n  Platform,\n  StyleSheet,\n  ViewPropTypes,\n} from 'react-native';\nimport SafeModule from 'react-native-safe-module';\nimport PropTypes from 'prop-types';\n\nconst NativeLottieView = SafeModule.component({\n  viewName: 'LottieAnimationView',\n  mockComponent: View,\n});\n\nconst LottieViewManager = SafeModule.module({\n  moduleName: 'LottieAnimationView',\n  mock: {\n    play: () => {},\n    reset: () => {},\n  },\n});\n\nconst ViewStyleExceptBorderPropType = (props, propName, componentName, ...rest) => {\n  const flattened = StyleSheet.flatten(props[propName]);\n  const usesBorder = Object.keys(flattened).some(key => key.startsWith('border'));\n  if (usesBorder) {\n    return Error(\n      `${componentName} does not allow any border related style properties to be specified. ` +\n      'Border styles for this component will behave differently across platforms. If you\\'d like ' +\n      'to render a border around this component, wrap it with a View.'\n    );\n  }\n  return ViewPropTypes.style(props, propName, componentName, ...rest);\n};\n\nconst NotAllowedPropType = (props, propName, componentName) => {\n  const value = props[propName];\n  if (value != null) {\n    return Error(`${componentName} cannot specify '${propName}'.`);\n  }\n  return null;\n};\n\nconst propTypes = {\n  ...ViewPropTypes,\n  style: ViewStyleExceptBorderPropType,\n  children: NotAllowedPropType,\n  progress: PropTypes.number,\n  speed: PropTypes.number,\n  loop: PropTypes.bool,\n  source: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n  ]).isRequired,\n};\n\nconst defaultProps = {\n  progress: 0,\n  speed: 1,\n  loop: false,\n};\n\nconst viewConfig = {\n  uiViewClassName: 'LottieAnimationView',\n  validAttributes: {\n    progress: true,\n  },\n};\n\nclass LottieAnimation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.viewConfig = viewConfig;\n    this.refRoot = this.refRoot.bind(this);\n  }\n\n  setNativeProps(props) {\n    UIManager.updateView(this.getHandle(), this.viewConfig.uiViewClassName, {\n      progress: props.progress,\n    });\n  }\n\n  play() {\n    this.runCommand('play');\n  }\n\n  reset() {\n    this.runCommand('reset');\n  }\n\n  runCommand(name, args = []) {\n    return Platform.select({\n      android: () => UIManager.dispatchViewManagerCommand(\n        this.getHandle(),\n        UIManager.LottieAnimationView.Commands[name],\n        args\n      ),\n      ios: () => LottieViewManager[name](this.getHandle(), ...args),\n    })();\n  }\n\n  getHandle() {\n    return findNodeHandle(this.root);\n  }\n\n  refRoot(root) {\n    this.root = root;\n  }\n\n  render() {\n    const { source } = this.props;\n    const sourceName = typeof source === 'string' ? source : undefined;\n    const sourceJson = typeof source === 'string' ? undefined : source;\n\n    return (\n      <NativeLottieView\n        ref={this.refRoot}\n        {...this.props}\n        source={undefined}\n        sourceName={sourceName}\n        sourceJson={sourceJson}\n      />\n    );\n  }\n}\n\nLottieAnimation.propTypes = propTypes;\nLottieAnimation.defaultProps = defaultProps;\n\nconst Animation = Animated.createAnimatedComponent(LottieAnimation);\n\nAnimation.prototype.play = function play() {\n  return this.getNode().play();\n};\n\nAnimation.prototype.reset = function pause() {\n  return this.getNode().reset();\n};\n\nmodule.exports = Animation;\n"]}]