["1bf7aefda86209b564dca9fd493af79eb25a6943","d5bc1397aac42543093daad0d6ebc7da339cfcba",["../Matrix2D","lodash"],[246,350],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native-svg/lib/extract/extractTransform.js"],"names":["props","transformToMatrix","props2transform","transform","pooledMatrix","reset","appendTransform","toArray","x","originX","y","originY","scaleX","scaleY","rotation","skewX","skewY","universal2axis","universal","axisX","axisY","defaultValue","coords","isString","split","length","isNumber","isNaN","origin","scale","skew","translate","isNil","translateX","translateY","rotate"],"mappings":"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","sourcesContent":["import Matrix2D from '../Matrix2D';\nimport _ from 'lodash';\nlet pooledMatrix = new Matrix2D();\n\nfunction transformToMatrix(props, transform) {\n    pooledMatrix.reset();\n    appendTransform(props);\n\n    if (transform) {\n        appendTransform(transform);\n    }\n\n    return pooledMatrix.toArray();\n}\n\nfunction appendTransform(transform) {\n    pooledMatrix\n        .appendTransform(\n            transform.x + transform.originX,\n            transform.y + transform.originY,\n            transform.scaleX, transform.scaleY,\n            transform.rotation,\n            transform.skewX,\n            transform.skewY,\n            transform.originX,\n            transform.originY\n        );\n}\n\nfunction universal2axis(universal, axisX, axisY, defaultValue) {\n    let coords = [];\n    let x;\n    let y;\n    if (_.isString(universal)) {\n        coords = universal.split(/\\s*,\\s*/);\n        if (coords.length === 2) {\n            x = +coords[0];\n            y = +coords[1];\n        } else if　(coords.length === 1)　{\n            x = y = +coords[0];\n        }\n    } else if (_.isNumber(universal)) {\n        x = y = universal;\n    }\n\n    axisX = +axisX;\n    if (!isNaN(axisX)) {\n        x = axisX;\n    }\n\n    axisY = +axisY;\n    if (!isNaN(axisY)) {\n        y = axisY;\n    }\n\n    return [x || defaultValue || 0, y || defaultValue || 0];\n}\n\nfunction props2transform(props) {\n    let [originX, originY] = universal2axis(props.origin, props.originX, props.originY);\n    let [scaleX, scaleY] = universal2axis(props.scale, props.scaleX, props.scaleY, 1);\n    let [skewX, skewY] = universal2axis(props.skew, props.skewX, props.skewY);\n    let [translateX, translateY] = universal2axis(\n        props.translate,\n        _.isNil(props.translateX) ? props.x : props.translateX,\n        _.isNil(props.translateY) ? props.y : props.translateY\n    );\n\n    return {\n        rotation: +props.rotation || +props.rotate || 0,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        originX: originX,\n        originY: originY,\n        skewX: skewX,\n        skewY: skewY,\n        x: translateX,\n        y: translateY\n    };\n}\n\nexport default function (props) {\n    return transformToMatrix(props2transform(props), props.transform ? props2transform(props.transform) : null);\n}\n"]}]