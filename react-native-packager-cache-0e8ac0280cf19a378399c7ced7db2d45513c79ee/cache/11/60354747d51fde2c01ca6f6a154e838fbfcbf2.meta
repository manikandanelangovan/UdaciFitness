["6ab2e4b9be5963e2dcd7098f4fdb00b5f0252242","e95f20964cd6ab17e4240d353b82f413b1de3af4",["./AnimatedValue","./AnimatedWithChildren","fbjs/lib/invariant"],[44,99,151],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Animated/src/nodes/AnimatedValueXY.js"],"names":["AnimatedValue","require","AnimatedWithChildren","invariant","_uniqueId","AnimatedValueXY","valueIn","value","x","y","_listeners","setValue","offset","setOffset","flattenOffset","extractOffset","__getValue","callback","resetAnimation","stopAnimation","id","String","jointCallback","number","addListener","removeListener","removeAllListeners","left","top","translateX","translateY","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AnimatedValueXY\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedValue = require('./AnimatedValue');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\n\nconst invariant = require('fbjs/lib/invariant');\n\ntype ValueXYListenerCallback = (value: {x: number, y: number}) => void;\n\nlet _uniqueId = 1;\n\n/**\n * 2D Value for driving 2D animations, such as pan gestures.  Almost identical\n * API to normal `Animated.Value`, but multiplexed.  Contains two regular\n * `Animated.Value`s under the hood.\n *\n * #### Example\n *\n *```javascript\n *  class DraggableView extends React.Component {\n *    constructor(props) {\n *      super(props);\n *      this.state = {\n *        pan: new Animated.ValueXY(), // inits to zero\n *      };\n *      this.state.panResponder = PanResponder.create({\n *        onStartShouldSetPanResponder: () => true,\n *        onPanResponderMove: Animated.event([null, {\n *          dx: this.state.pan.x, // x,y are Animated.Value\n *          dy: this.state.pan.y,\n *        }]),\n *        onPanResponderRelease: () => {\n *          Animated.spring(\n *            this.state.pan,         // Auto-multiplexed\n *            {toValue: {x: 0, y: 0}} // Back to zero\n *          ).start();\n *        },\n *      });\n *    }\n *    render() {\n *      return (\n *        <Animated.View\n *          {...this.state.panResponder.panHandlers}\n *          style={this.state.pan.getLayout()}>\n *          {this.props.children}\n *        </Animated.View>\n *      );\n *    }\n *  }\n *```\n */\nclass AnimatedValueXY extends AnimatedWithChildren {\n  x: AnimatedValue;\n  y: AnimatedValue;\n  _listeners: {[key: string]: {x: string, y: string}};\n\n  constructor(\n    valueIn?: ?{x: number | AnimatedValue, y: number | AnimatedValue},\n  ) {\n    super();\n    const value: any = valueIn || {x: 0, y: 0}; // @flowfixme: shouldn't need `: any`\n    if (typeof value.x === 'number' && typeof value.y === 'number') {\n      this.x = new AnimatedValue(value.x);\n      this.y = new AnimatedValue(value.y);\n    } else {\n      invariant(\n        value.x instanceof AnimatedValue && value.y instanceof AnimatedValue,\n        'AnimatedValueXY must be initalized with an object of numbers or ' +\n          'AnimatedValues.',\n      );\n      this.x = value.x;\n      this.y = value.y;\n    }\n    this._listeners = {};\n  }\n\n  setValue(value: {x: number, y: number}) {\n    this.x.setValue(value.x);\n    this.y.setValue(value.y);\n  }\n\n  setOffset(offset: {x: number, y: number}) {\n    this.x.setOffset(offset.x);\n    this.y.setOffset(offset.y);\n  }\n\n  flattenOffset(): void {\n    this.x.flattenOffset();\n    this.y.flattenOffset();\n  }\n\n  extractOffset(): void {\n    this.x.extractOffset();\n    this.y.extractOffset();\n  }\n\n  __getValue(): {x: number, y: number} {\n    return {\n      x: this.x.__getValue(),\n      y: this.y.__getValue(),\n    };\n  }\n\n  resetAnimation(callback?: (value: {x: number, y: number}) => void): void {\n    this.x.resetAnimation();\n    this.y.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  stopAnimation(callback?: (value: {x: number, y: number}) => void): void {\n    this.x.stopAnimation();\n    this.y.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  addListener(callback: ValueXYListenerCallback): string {\n    const id = String(_uniqueId++);\n    const jointCallback = ({value: number}) => {\n      callback(this.__getValue());\n    };\n    this._listeners[id] = {\n      x: this.x.addListener(jointCallback),\n      y: this.y.addListener(jointCallback),\n    };\n    return id;\n  }\n\n  removeListener(id: string): void {\n    this.x.removeListener(this._listeners[id].x);\n    this.y.removeListener(this._listeners[id].y);\n    delete this._listeners[id];\n  }\n\n  removeAllListeners(): void {\n    this.x.removeAllListeners();\n    this.y.removeAllListeners();\n    this._listeners = {};\n  }\n\n  /**\n   * Converts `{x, y}` into `{left, top}` for use in style, e.g.\n   *\n   *```javascript\n   *  style={this.state.anim.getLayout()}\n   *```\n   */\n  getLayout(): {[key: string]: AnimatedValue} {\n    return {\n      left: this.x,\n      top: this.y,\n    };\n  }\n\n  /**\n   * Converts `{x, y}` into a useable translation transform, e.g.\n   *\n   *```javascript\n   *  style={{\n   *    transform: this.state.anim.getTranslateTransform()\n   *  }}\n   *```\n   */\n  getTranslateTransform(): Array<{[key: string]: AnimatedValue}> {\n    return [{translateX: this.x}, {translateY: this.y}];\n  }\n}\n\nmodule.exports = AnimatedValueXY;\n"]}]