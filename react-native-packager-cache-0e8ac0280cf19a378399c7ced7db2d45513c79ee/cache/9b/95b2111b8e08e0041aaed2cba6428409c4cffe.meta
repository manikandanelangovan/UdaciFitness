["f6f044169e548f0b761eaf7ca59489111de26260","750136310452914af2a15e8fcbbaa29449a00c52",["NativeMethodsMixin","prop-types","React","StyleSheet","ViewPropTypes","create-react-class","requireNativeComponent"],[49,96,131,166,209,259,319],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Components/CheckBox/CheckBox.js"],"names":["NativeMethodsMixin","require","PropTypes","React","StyleSheet","ViewPropTypes","createReactClass","requireNativeComponent","CheckBox","displayName","propTypes","value","bool","disabled","onChange","func","onValueChange","testID","string","getDefaultProps","mixins","_rctCheckBox","_onChange","event","setNativeProps","props","nativeEvent","render","onStartShouldSetResponder","onResponderTerminationRequest","enabled","on","style","styles","rctCheckBox","ref","create","height","width","RCTCheckBox","nativeOnly","module","exports"],"mappings":";AAYA;;AAEA,IAAMA,qBAAqBC,OAArB,sBAAN;AACA,IAAMC,YAAYD,OAAZ,cAAN;AACA,IAAME,QAAQF,OAAR,SAAN;AACA,IAAMG,aAAaH,OAAb,cAAN;AACA,IAAMI,gBAAgBJ,OAAhB,iBAAN;;AAEA,IAAMK,mBAAmBL,OAAnB,sBAAN;AACA,IAAMM,yBAAyBN,OAAzB,0BAAN;;AAmBA,IAAIO,WAAWF,iBAAiB;AAC9BG,eAAa,UADiB;AAE9BC,sCACKL,aADL;AAMEM,WAAOT,UAAUU,IANnB;;AAWEC,cAAUX,UAAUU,IAXtB;;AAeEE,cAAUZ,UAAUa,IAftB;;AAmBEC,mBAAed,UAAUa,IAnB3B;;AAuBEE,YAAQf,UAAUgB;AAvBpB,IAF8B;;AA4B9BC,mBAAiB,2BAAyB;AACxC,WAAO;AACLR,aAAO,KADF;AAELE,gBAAU;AAFL,KAAP;AAID,GAjC6B;;AAmC9BO,UAAQ,CAACpB,kBAAD,CAnCsB;;AAqC9BqB,gBAAc,EArCgB;AAsC9BC,aAAW,mBAASC,KAAT,EAAwB;AACjC,SAAKF,YAAL,CAAkBG,cAAlB,CAAiC,EAACb,OAAO,KAAKc,KAAL,CAAWd,KAAnB,EAAjC;;AAGA,SAAKc,KAAL,CAAWX,QAAX,IAAuB,KAAKW,KAAL,CAAWX,QAAX,CAAoBS,KAApB,CAAvB;AACA,SAAKE,KAAL,CAAWT,aAAX,IACE,KAAKS,KAAL,CAAWT,aAAX,CAAyBO,MAAMG,WAAN,CAAkBf,KAA3C,CADF;AAED,GA7C6B;;AA+C9BgB,UAAQ,kBAAW;AAAA;;AACjB,QAAIF,iCAAY,KAAKA,KAAjB,CAAJ;AACAA,UAAMG,yBAAN,GAAkC;AAAA,aAAM,IAAN;AAAA,KAAlC;AACAH,UAAMI,6BAAN,GAAsC;AAAA,aAAM,KAAN;AAAA,KAAtC;AACAJ,UAAMK,OAAN,GAAgB,CAAC,KAAKL,KAAL,CAAWZ,QAA5B;AACAY,UAAMM,EAAN,GAAW,KAAKN,KAAL,CAAWd,KAAtB;AACAc,UAAMO,KAAN,GAAc,CAACC,OAAOC,WAAR,EAAqB,KAAKT,KAAL,CAAWO,KAAhC,CAAd;;AAEA,WACE,oBAAC,WAAD,2BACMP,KADN;AAEE,WAAK,mBAAO;AAIV,cAAKJ,YAAL,GAAoBc,IAApB;AACD,OAPH;AAQE,gBAAU,KAAKb;AARjB,OADF;AAYD;AAnE6B,CAAjB,CAAf;;AAsEA,IAAIW,SAAS7B,WAAWgC,MAAX,CAAkB;AAC7BF,eAAa;AACXG,YAAQ,EADG;AAEXC,WAAO;AAFI;AADgB,CAAlB,CAAb;;AAOA,IAAIC,cAAchC,uBAAuB,iBAAvB,EAA0CC,QAA1C,EAAoD;AACpEgC,cAAY;AACV1B,cAAU,IADA;AAEViB,QAAI,IAFM;AAGVD,aAAS;AAHC;AADwD,CAApD,CAAlB;;AAQAW,OAAOC,OAAP,GAAiBlC,QAAjB","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CheckBox\n * @flow\n * @format\n */\n'use strict';\n\nconst NativeMethodsMixin = require('NativeMethodsMixin');\nconst PropTypes = require('prop-types');\nconst React = require('React');\nconst StyleSheet = require('StyleSheet');\nconst ViewPropTypes = require('ViewPropTypes');\n\nconst createReactClass = require('create-react-class');\nconst requireNativeComponent = require('requireNativeComponent');\n\ntype DefaultProps = {\n  value: boolean,\n  disabled: boolean,\n};\n\n/**\n * Renders a boolean input.\n *\n * This is a controlled component that requires an `onValueChange` callback that\n * updates the `value` prop in order for the component to reflect user actions.\n * If the `value` prop is not updated, the component will continue to render\n * the supplied `value` prop instead of the expected result of any user actions.\n *\n * @keyword checkbox\n * @keyword toggle\n */\n// $FlowFixMe(>=0.41.0)\nlet CheckBox = createReactClass({\n  displayName: 'CheckBox',\n  propTypes: {\n    ...ViewPropTypes,\n    /**\n     * The value of the checkbox.  If true the checkbox will be turned on.\n     * Default value is false.\n     */\n    value: PropTypes.bool,\n    /**\n     * If true the user won't be able to toggle the checkbox.\n     * Default value is false.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Used in case the props change removes the component.\n     */\n    onChange: PropTypes.func,\n    /**\n     * Invoked with the new value when the value changes.\n     */\n    onValueChange: PropTypes.func,\n    /**\n     * Used to locate this view in end-to-end tests.\n     */\n    testID: PropTypes.string,\n  },\n\n  getDefaultProps: function(): DefaultProps {\n    return {\n      value: false,\n      disabled: false,\n    };\n  },\n\n  mixins: [NativeMethodsMixin],\n\n  _rctCheckBox: {},\n  _onChange: function(event: Object) {\n    this._rctCheckBox.setNativeProps({value: this.props.value});\n    // Change the props after the native props are set in case the props\n    // change removes the component\n    this.props.onChange && this.props.onChange(event);\n    this.props.onValueChange &&\n      this.props.onValueChange(event.nativeEvent.value);\n  },\n\n  render: function() {\n    let props = {...this.props};\n    props.onStartShouldSetResponder = () => true;\n    props.onResponderTerminationRequest = () => false;\n    props.enabled = !this.props.disabled;\n    props.on = this.props.value;\n    props.style = [styles.rctCheckBox, this.props.style];\n\n    return (\n      <RCTCheckBox\n        {...props}\n        ref={ref => {\n          /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n           * comment suppresses an error when upgrading Flow's support for\n           * React. To see the error delete this comment and run Flow. */\n          this._rctCheckBox = ref;\n        }}\n        onChange={this._onChange}\n      />\n    );\n  },\n});\n\nlet styles = StyleSheet.create({\n  rctCheckBox: {\n    height: 32,\n    width: 32,\n  },\n});\n\nlet RCTCheckBox = requireNativeComponent('AndroidCheckBox', CheckBox, {\n  nativeOnly: {\n    onChange: true,\n    on: true,\n    enabled: true,\n  },\n});\n\nmodule.exports = CheckBox;\n"]}]