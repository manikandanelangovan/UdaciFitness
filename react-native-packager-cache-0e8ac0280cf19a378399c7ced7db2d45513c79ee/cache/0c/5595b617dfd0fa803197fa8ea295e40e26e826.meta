["d48f3c3d838fe772e83c759a2f26f5d95caaa058","ebb9d5791894d067d993451f879f7b3152593a5b",["fbjs/lib/invariant"],[41],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Renderer/shims/PooledClass.js"],"names":["invariant","require","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","length","instance","pop","call","twoArgumentPooler","a1","a2","threeArgumentPooler","a3","fourArgumentPooler","a4","standardReleaser","destructor","poolSize","push","DEFAULT_POOL_SIZE","DEFAULT_POOLER","addPoolingTo","CopyConstructor","pooler","NewKlass","getPooled","release","PooledClass","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule PooledClass\n * @flow\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function(copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function(a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function(a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function(a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar standardReleaser = function(instance) {\n  var Klass = this;\n  invariant(\n    instance instanceof Klass,\n    'Trying to release an instance into a pool of a different type.',\n  );\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\ntype Pooler = any;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function<T>(\n  CopyConstructor: Class<T>,\n  pooler: Pooler,\n): Class<T> & {\n  getPooled(\n    ...args: $ReadOnlyArray<mixed>\n  ): /* arguments of the constructor */ T,\n  release(instance: mixed): void,\n} {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  var NewKlass = (CopyConstructor: any);\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: (oneArgumentPooler: Pooler),\n  twoArgumentPooler: (twoArgumentPooler: Pooler),\n  threeArgumentPooler: (threeArgumentPooler: Pooler),\n  fourArgumentPooler: (fourArgumentPooler: Pooler),\n};\n\nmodule.exports = PooledClass;\n"]}]