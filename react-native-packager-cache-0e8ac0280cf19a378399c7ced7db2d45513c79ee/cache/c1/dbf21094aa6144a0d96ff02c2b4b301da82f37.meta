["4a4289cc7385b43fc5471ea9abdd9c01ac44f6fe","4508ff338b9dfbe445a96ca77ca74edd34812e50",["react","prop-types","react-native","./PureContainer"],[155,250,360,407],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/expo/src/modal/ModalHost.js"],"names":["channel","ModalHost","state","modals","layout","height","width","measured","_currentKey","_register","renderer","key","setState","update","r","map","m","remove","filter","_handleLayout","e","nativeEvent","register","styles","host","props","children","childContextTypes","object","create","flex"],"mappings":";;;;;;;AAEA;;;;AACA;;;;AACA;;AACA;;;;AA0BO,IAAMA,4BAAU,oBAAhB;;IAEcC,S;;;;;;;;;;;;;;wMAKnBC,K,GAAQ;AACNC,cAAQ,EADF;AAENC,cAAQ;AACNC,gBAAQ,CADF;AAENC,eAAO,CAFD;AAGNC,kBAAU;AAHJ;AAFF,K,QAiBRC,W,GAAc,C,QAEdC,S,GAAY,UAACC,QAAD,EAAwB;AAClC,UAAMC,MAAM,MAAKH,WAAjB;;AAEA,YAAKA,WAAL;AACA,YAAKI,QAAL,CAAc;AAAA,eAAU;AACtBT,2DAAYD,MAAMC,MAAlB,IAA0B,EAAEQ,QAAF,EAAOD,kBAAP,EAA1B;AADsB,SAAV;AAAA,OAAd;;AAIA,UAAMG,SAAS,SAATA,MAAS,CAACC,CAAD;AAAA,eACb,MAAKF,QAAL,CAAc;AAAA,iBAAU;AACtBT,oBAAQD,MAAMC,MAAN,CAAaY,GAAb,CACN;AAAA,qBAAMC,EAAEL,GAAF,KAAUA,GAAV,GAAgB,EAAEA,QAAF,EAAOD,UAAUI,CAAjB,EAAhB,GAAuCE,CAA7C;AAAA,aADM;AADc,WAAV;AAAA,SAAd,CADa;AAAA,OAAf;;AAOA,UAAMC,SAAS,SAATA,MAAS;AAAA,eACb,MAAKL,QAAL,CAAc;AAAA,iBAAU;AACtBT,oBAAQD,MAAMC,MAAN,CAAae,MAAb,CAAoB;AAAA,qBAAKF,EAAEL,GAAF,KAAUA,GAAf;AAAA,aAApB;AADc,WAAV;AAAA,SAAd,CADa;AAAA,OAAf;;AAKA,aAAO;AACLE,sBADK;AAELI;AAFK,OAAP;AAID,K,QAEDE,a,GAAgB,UAACC,CAAD,EAAoB;AAAA,UAC1BhB,MAD0B,GACfgB,EAAEC,WADa,CAC1BjB,MAD0B;;AAElC,UACEA,OAAOC,MAAP,KAAkB,MAAKH,KAAL,CAAWE,MAAX,CAAkBC,MAApC,IACAD,OAAOE,KAAP,KAAiB,MAAKJ,KAAL,CAAWE,MAAX,CAAkBE,KAFrC,EAGE;AACA,cAAKM,QAAL,CAAc,EAAER,iCAAagB,EAAEC,WAAF,CAAcjB,MAA3B,IAAmCG,UAAU,IAA7C,GAAF,EAAd;AACD;AACF,K;;;;;sCA5CiB;AAChB,6CACGP,OADH,EACa;AACTsB,kBAAU,KAAKb;AADN,OADb;AAKD;;;6BAwCQ;AAAA;;AACP,aACE;AAAA;AAAA,UAAM,OAAOc,OAAOC,IAApB,EAA0B,UAAU,KAAKL,aAAzC;AACE;AAAA;AAAmB,eAAKM,KAAxB;AAAgC,eAAKA,KAAL,CAAWC;AAA3C,SADF;AAEG,aAAKxB,KAAL,CAAWE,MAAX,CAAkBG,QAAlB,GACC,KAAKL,KAAL,CAAWC,MAAX,CAAkBY,GAAlB,CAAsB,iBAAuB;AAAA,cAApBJ,GAAoB,SAApBA,GAAoB;AAAA,cAAfD,QAAe,SAAfA,QAAe;;AAC3C,iBAAOA,SAAS,OAAKR,KAAL,CAAWE,MAApB,EAA4BO,GAA5B,CAAP;AACD,SAFD,CADD,GAIG;AANN,OADF;AAUD;;;4BAtEMgB,iB,mCACJ3B,O,EAAU,oBAAU4B,M;kBAFJ3B,S;;;AA0ErB,IAAMsB,SAAS,wBAAWM,MAAX,CAAkB;AAC/BL,QAAM;AACJM,UAAM;AADF;AADyB,CAAlB,CAAf","sourcesContent":["/* @flow */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, StyleSheet } from 'react-native';\nimport PureContainer from './PureContainer';\n\ntype Layout = {\n  width: number,\n  height: number,\n};\n\ntype LayoutEvent = {\n  nativeEvent: {\n    layout: Layout,\n  },\n};\n\ntype Renderer = (layout: Layout, key: number) => any;\n\ntype Props = {\n  children?: any,\n};\n\ntype State = {\n  modals: Array<{ key: number, renderer: Renderer }>,\n  layout: {\n    measured: boolean,\n  } & Layout,\n};\n\nexport const channel = '__$expo_modal_host';\n\nexport default class ModalHost extends Component<Props, State> {\n  static childContextTypes = {\n    [channel]: PropTypes.object,\n  };\n\n  state = {\n    modals: [],\n    layout: {\n      height: 0,\n      width: 0,\n      measured: false,\n    },\n  };\n\n  getChildContext() {\n    return {\n      [channel]: {\n        register: this._register,\n      },\n    };\n  }\n\n  _currentKey = 0;\n\n  _register = (renderer: Renderer) => {\n    const key = this._currentKey;\n\n    this._currentKey++;\n    this.setState(state => ({\n      modals: [...state.modals, { key, renderer }],\n    }));\n\n    const update = (r: Renderer) =>\n      this.setState(state => ({\n        modals: state.modals.map(\n          m => (m.key === key ? { key, renderer: r } : m)\n        ),\n      }));\n\n    const remove = () =>\n      this.setState(state => ({\n        modals: state.modals.filter(m => m.key !== key),\n      }));\n\n    return {\n      update,\n      remove,\n    };\n  };\n\n  _handleLayout = (e: LayoutEvent) => {\n    const { layout } = e.nativeEvent;\n    if (\n      layout.height !== this.state.layout.height ||\n      layout.width !== this.state.layout.width\n    ) {\n      this.setState({ layout: { ...e.nativeEvent.layout, measured: true } });\n    }\n  };\n\n  render() {\n    return (\n      <View style={styles.host} onLayout={this._handleLayout}>\n        <PureContainer {...this.props}>{this.props.children}</PureContainer>\n        {this.state.layout.measured ? (\n          this.state.modals.map(({ key, renderer }) => {\n            return renderer(this.state.layout, key);\n          })\n        ) : null}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  host: {\n    flex: 1,\n  },\n});\n"]}]