["0836be56e8265f2162e3a0e57704622bd5df8505","a85e7b6ff86ac778919852c57708ea588d3eb707",["Image","React","StyleSheet","View","ensureComponentIsNative"],[36,66,101,135,183],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Image/ImageBackground.js"],"names":["Image","require","React","StyleSheet","View","ensureComponentIsNative","ImageBackground","_viewRef","_captureRef","ref","props","viewRef","setNativeProps","children","style","imageStyle","imageRef","absoluteFill","width","height","Component","module","exports"],"mappings":";AAYA;;AAEA,IAAMA,QAAQC,OAAR,SAAN;AACA,IAAMC,QAAQD,OAAR,SAAN;AACA,IAAME,aAAaF,OAAb,cAAN;AACA,IAAMG,OAAOH,OAAP,QAAN;;AAEA,IAAMI,0BAA0BJ,OAA1B,2BAAN;;IA4BMK,e;;;;;;;;;;;;;;oNAUJC,Q,GAAoC,I,QAEpCC,W,GAAc,eAAO;AAInB,YAAKD,QAAL,GAAgBE,GAAhB;AACD,K;;;;;mCAhBcC,K,EAAe;AAE5B,UAAMC,UAAU,KAAKJ,QAArB;AACA,UAAII,OAAJ,EAAa;AACXN,gCAAwBM,OAAxB;AACAA,gBAAQC,cAAR,CAAuBF,KAAvB;AACD;AACF;;;6BAWQ;AAAA,mBACmD,KAAKA,KADxD;AAAA,UACAG,QADA,UACAA,QADA;AAAA,UACUC,KADV,UACUA,KADV;AAAA,UACiBC,UADjB,UACiBA,UADjB;AAAA,UAC6BC,QAD7B,UAC6BA,QAD7B;AAAA,UAC0CN,KAD1C;;;AAGP,aACE;AAAC,YAAD;AAAA,UAAM,OAAOI,KAAb,EAAoB,KAAK,KAAKN,WAA9B;AACE,4BAAC,KAAD,2BACME,KADN;AAEE,iBAAO,CACLP,WAAWc,YADN,EAEL;AAQEC,mBAAOJ,MAAMI,KARf;AASEC,oBAAQL,MAAMK;AAThB,WAFK,EAaLJ,UAbK,CAFT;AAiBE,eAAKC;AAjBP,WADF;AAoBGH;AApBH,OADF;AAwBD;;;EA9C2BX,MAAMkB,S;;AAiDpCC,OAAOC,OAAP,GAAiBhB,eAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ImageBackground\n * @flow\n * @format\n */\n'use strict';\n\nconst Image = require('Image');\nconst React = require('React');\nconst StyleSheet = require('StyleSheet');\nconst View = require('View');\n\nconst ensureComponentIsNative = require('ensureComponentIsNative');\n\nimport type {NativeMethodsMixinType} from 'ReactNativeTypes';\n\n/**\n * Very simple drop-in replacement for <Image> which supports nesting views.\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react';\n * import { AppRegistry, View, ImageBackground, Text } from 'react-native';\n *\n * class DisplayAnImageBackground extends Component {\n *   render() {\n *     return (\n *       <ImageBackground\n *         style={{width: 50, height: 50}}\n *         source={{uri: 'https://facebook.github.io/react/img/logo_og.png'}}\n *       >\n *         <Text>React</Text>\n *       </ImageBackground>\n *     );\n *   }\n * }\n *\n * // App registration and rendering\n * AppRegistry.registerComponent('DisplayAnImageBackground', () => DisplayAnImageBackground);\n * ```\n */\nclass ImageBackground extends React.Component<$FlowFixMeProps> {\n  setNativeProps(props: Object) {\n    // Work-around flow\n    const viewRef = this._viewRef;\n    if (viewRef) {\n      ensureComponentIsNative(viewRef);\n      viewRef.setNativeProps(props);\n    }\n  }\n\n  _viewRef: ?NativeMethodsMixinType = null;\n\n  _captureRef = ref => {\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._viewRef = ref;\n  };\n\n  render() {\n    const {children, style, imageStyle, imageRef, ...props} = this.props;\n\n    return (\n      <View style={style} ref={this._captureRef}>\n        <Image\n          {...props}\n          style={[\n            StyleSheet.absoluteFill,\n            {\n              // Temporary Workaround:\n              // Current (imperfect yet) implementation of <Image> overwrites width and height styles\n              // (which is not quite correct), and these styles conflict with explicitly set styles\n              // of <ImageBackground> and with our internal layout model here.\n              // So, we have to proxy/reapply these styles explicitly for actual <Image> component.\n              // This workaround should be removed after implementing proper support of\n              // intrinsic content size of the <Image>.\n              width: style.width,\n              height: style.height,\n            },\n            imageStyle,\n          ]}\n          ref={imageRef}\n        />\n        {children}\n      </View>\n    );\n  }\n}\n\nmodule.exports = ImageBackground;\n"]}]