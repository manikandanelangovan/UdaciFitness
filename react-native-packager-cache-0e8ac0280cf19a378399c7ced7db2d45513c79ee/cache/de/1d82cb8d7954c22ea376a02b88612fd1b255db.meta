["8912cc596b094d3468dfcc98f5e589f6c03a1919","6917409f02aa5451b8aa640ef55dd1e5d98c2692",["react","prop-types","react-native","./Constants"],[137,232,342,385],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/expo/src/GLView.js"],"names":["GLView","_setNativeRef","props","nativeRef_EXPERIMENTAL","nativeRef","_onSurfaceCreate","exglCtxId","nativeEvent","gl","getGl","onContextCreate","msaaSamples","viewProps","flex","backgroundColor","OS","undefined","ExponentGLViewManager","startARSessionAsync","Component","propTypes","func","number","defaultProps","NativeView","nativeOnly","onSurfaceCreate","WebGLRenderingContext","idToObject","WebGLObject","id","Error","wrapObject","type","found","WebGLBuffer","WebGLFramebuffer","WebGLProgram","WebGLRenderbuffer","WebGLShader","WebGLTexture","WebGLUniformLocation","WebGLActiveInfo","obj","WebGLShaderPrecisionFormat","wrapMethods","wrap","methodNames","wrapper","Array","isArray","forEach","methodName","getParameterTypes","ARRAY_BUFFER_BINDING","ELEMENT_ARRAY_BUFFER_BINDING","CURRENT_PROGRAM","FRAMEBUFFER_BINDING","RENDERBUFFER_BINDING","TEXTURE_BINDING_2D","TEXTURE_BINDING_CUBE_MAP","ret","orig","call","pname","VERSION","expoVersion","target","buffer","framebuffer","attachment","rbtarget","rb","textarget","tex","level","renderbuffer","texture","program","shader","index","name","map","shadertype","precisiontype","source","location","loc","x","y","z","w","val","Float32Array","Int32Array","transpose","global","__EXGLContexts","__exglCtxId","Object","setPrototypeOf","prototype","__proto__","canvas","viewport","getParameter","VIEWPORT","drawingBufferWidth","drawingBufferHeight","enableLogging","defineProperty","configurable","get","set","enable","keys","key","original","args","console","log","join","r","apply"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  NativeModules,\n  Platform,\n  View,\n  ViewPropTypes,\n  findNodeHandle,\n  requireNativeComponent,\n} from 'react-native';\n\nimport Constants from './Constants';\n\n// A component that acts as an OpenGL render target.\n\nexport default class GLView extends React.Component {\n  static propTypes = {\n    // Called when the OpenGL context is created, with the context object as a\n    // parameter. The context object has an API mirroring WebGL's\n    // WebGLRenderingContext.\n    onContextCreate: PropTypes.func,\n\n    // [iOS only] Number of samples for Apple's built-in multisampling.\n    msaaSamples: PropTypes.number,\n\n    // A ref callback for the native GLView\n    nativeRef_EXPERIMENTAL: PropTypes.func,\n\n    ...ViewPropTypes,\n  };\n\n  static defaultProps = {\n    msaaSamples: 4,\n  };\n\n  render() {\n    const {\n      onContextCreate, // eslint-disable-line no-unused-vars\n      msaaSamples,\n      ...viewProps\n    } = this.props;\n\n    // NOTE: Removing `backgroundColor: 'transparent'` causes a performance\n    //       regression. Not sure why yet...\n    return (\n      <View {...viewProps}>\n        <GLView.NativeView\n          ref={this._setNativeRef}\n          style={{ flex: 1, backgroundColor: 'transparent' }}\n          onSurfaceCreate={this._onSurfaceCreate}\n          msaaSamples={Platform.OS === 'ios' ? msaaSamples : undefined}\n        />\n      </View>\n    );\n  }\n\n  _setNativeRef = nativeRef => {\n    if (this.props.nativeRef_EXPERIMENTAL) {\n      this.props.nativeRef_EXPERIMENTAL(nativeRef);\n    }\n    this.nativeRef = nativeRef;\n  };\n\n  _onSurfaceCreate = ({ nativeEvent: { exglCtxId } }) => {\n    const gl = getGl(exglCtxId);\n    if (this.props.onContextCreate) {\n      this.props.onContextCreate(gl);\n    }\n  };\n\n  static NativeView = requireNativeComponent('ExponentGLView', GLView, {\n    nativeOnly: { onSurfaceCreate: true },\n  });\n\n  startARSessionAsync() {\n    return NativeModules.ExponentGLViewManager.startARSessionAsync(\n      findNodeHandle(this.nativeRef)\n    );\n  }\n}\n\n// JavaScript WebGL types to wrap around native objects\n\nclass WebGLRenderingContext {}\n\nconst idToObject = {};\n\nclass WebGLObject {\n  constructor(id) {\n    if (idToObject[id]) {\n      throw new Error(\n        `WebGL object with underlying EXGLObjectId '${id}' already exists!`\n      );\n    }\n    this.id = id; // Native GL object id\n  }\n  toString() {\n    return `[WebGLObject ${this.id}]`;\n  }\n}\n\nconst wrapObject = (type, id) => {\n  const found = idToObject[id];\n  if (found) {\n    return found;\n  }\n  return (idToObject[id] = new type(id));\n};\n\nclass WebGLBuffer extends WebGLObject {}\n\nclass WebGLFramebuffer extends WebGLObject {}\n\nclass WebGLProgram extends WebGLObject {}\n\nclass WebGLRenderbuffer extends WebGLObject {}\n\nclass WebGLShader extends WebGLObject {}\n\nclass WebGLTexture extends WebGLObject {}\n\nclass WebGLUniformLocation {\n  constructor(id) {\n    this.id = id; // Native GL object id\n  }\n}\n\nclass WebGLActiveInfo {\n  constructor(obj) {\n    Object.assign(this, obj);\n  }\n}\n\nclass WebGLShaderPrecisionFormat {\n  constructor(obj) {\n    Object.assign(this, obj);\n  }\n}\n\n// Many functions need wrapping/unwrapping of arguments and return value. We\n// handle each case specifically so we can write the tightest code for\n// better performance.\nconst wrapMethods = gl => {\n  const wrap = (methodNames, wrapper) =>\n    (Array.isArray(methodNames) ? methodNames : [methodNames]).forEach(\n      methodName => (gl[methodName] = wrapper(gl[methodName]))\n    );\n\n  // We can be slow in `gl.getParameter(...)` since it's a blocking call anyways\n  const getParameterTypes = {\n    [gl.ARRAY_BUFFER_BINDING]: WebGLBuffer,\n    [gl.ELEMENT_ARRAY_BUFFER_BINDING]: WebGLBuffer,\n    [gl.CURRENT_PROGRAM]: WebGLProgram,\n    [gl.FRAMEBUFFER_BINDING]: WebGLFramebuffer,\n    [gl.RENDERBUFFER_BINDING]: WebGLRenderbuffer,\n    [gl.TEXTURE_BINDING_2D]: WebGLTexture,\n    [gl.TEXTURE_BINDING_CUBE_MAP]: WebGLTexture,\n  };\n  wrap('getParameter', orig => pname => {\n    let ret = orig.call(gl, pname);\n    if (pname === gl.VERSION) {\n      // Wrap native version name\n      ret = `WebGL 1.0 (Expo-${Platform.OS}-${Constants.expoVersion}) (${ret})`;\n    }\n    const type = getParameterTypes[pname];\n    return type ? wrapObject(type, ret) : ret;\n  });\n\n  // Buffers\n  wrap('bindBuffer', orig => (target, buffer) =>\n    orig.call(gl, target, buffer && buffer.id)\n  );\n  wrap('createBuffer', orig => () => wrapObject(WebGLBuffer, orig.call(gl)));\n  wrap('deleteBuffer', orig => buffer => orig.call(gl, buffer && buffer.id));\n  wrap('isBuffer', orig => buffer =>\n    buffer instanceof WebGLBuffer && orig.call(gl, buffer.id)\n  );\n\n  // Framebuffers\n  wrap('bindFramebuffer', orig => (target, framebuffer) =>\n    orig.call(gl, target, framebuffer && framebuffer.id)\n  );\n  wrap('createFramebuffer', orig => () =>\n    wrapObject(WebGLFramebuffer, orig.call(gl))\n  );\n  wrap('deleteFramebuffer', orig => framebuffer =>\n    orig.call(gl, framebuffer && framebuffer.id)\n  );\n  wrap('framebufferRenderbuffer', orig => (target, attachment, rbtarget, rb) =>\n    orig.call(gl, target, attachment, rbtarget, rb && rb.id)\n  );\n  wrap(\n    'framebufferTexture2D',\n    orig => (target, attachment, textarget, tex, level) =>\n      orig.call(gl, target, attachment, textarget, tex && tex.id, level)\n  );\n  wrap('isFramebuffer', orig => framebuffer =>\n    framebuffer instanceof WebGLFramebuffer && orig.call(gl, framebuffer.id)\n  );\n\n  // Renderbuffers\n  wrap('bindRenderbuffer', orig => (target, renderbuffer) =>\n    orig.call(gl, target, renderbuffer && renderbuffer.id)\n  );\n  wrap('createRenderbuffer', orig => () =>\n    wrapObject(WebGLRenderbuffer, orig.call(gl))\n  );\n  wrap('deleteRenderbuffer', orig => renderbuffer =>\n    orig.call(gl, renderbuffer && renderbuffer.id)\n  );\n  wrap('isRenderbuffer', orig => renderbuffer =>\n    renderbuffer instanceof WebGLRenderbuffer && orig.call(gl, renderbuffer.id)\n  );\n\n  // Textures\n  wrap('bindTexture', orig => (target, texture) =>\n    orig.call(gl, target, texture && texture.id)\n  );\n  wrap('createTexture', orig => () => wrapObject(WebGLTexture, orig.call(gl)));\n  wrap('deleteTexture', orig => texture =>\n    orig.call(gl, texture && texture.id)\n  );\n  wrap('isTexture', orig => texture =>\n    texture instanceof WebGLTexture && orig.call(gl, texture.id)\n  );\n\n  // Programs and shaders\n  wrap('attachShader', orig => (program, shader) =>\n    orig.call(gl, program && program.id, shader && shader.id)\n  );\n  wrap('bindAttribLocation', orig => (program, index, name) =>\n    orig.call(gl, program && program.id, index, name)\n  );\n  wrap('compileShader', orig => shader => orig.call(gl, shader && shader.id));\n  wrap('createProgram', orig => () => wrapObject(WebGLProgram, orig.call(gl)));\n  wrap('createShader', orig => type =>\n    wrapObject(WebGLShader, orig.call(gl, type))\n  );\n  wrap('deleteProgram', orig => program =>\n    orig.call(gl, program && program.id)\n  );\n  wrap('deleteShader', orig => shader => orig.call(gl, shader && shader.id));\n  wrap('detachShader', orig => (program, shader) =>\n    orig.call(gl, program && program.id, shader && shader.id)\n  );\n  wrap('getAttachedShaders', orig => program =>\n    orig.call(gl, program && program.id).map(id => wrapObject(WebGLShader, id))\n  );\n  wrap('getProgramParameter', orig => (program, pname) =>\n    orig.call(gl, program && program.id, pname)\n  );\n  wrap('getProgramInfoLog', orig => program =>\n    orig.call(gl, program && program.id)\n  );\n  wrap('getShaderParameter', orig => (shader, pname) =>\n    orig.call(gl, shader && shader.id, pname)\n  );\n  wrap('getShaderPrecisionFormat', orig => (shadertype, precisiontype) =>\n    new WebGLShaderPrecisionFormat(orig.call(gl, shadertype, precisiontype))\n  );\n  wrap('getShaderInfoLog', orig => shader =>\n    orig.call(gl, shader && shader.id)\n  );\n  wrap('getShaderSource', orig => shader => orig.call(gl, shader && shader.id));\n  wrap('linkProgram', orig => program => orig.call(gl, program && program.id));\n  wrap('shaderSource', orig => (shader, source) =>\n    orig.call(gl, shader && shader.id, source)\n  );\n  wrap('useProgram', orig => program => orig.call(gl, program && program.id));\n  wrap('validateProgram', orig => program =>\n    orig.call(gl, program && program.id)\n  );\n  wrap('isShader', orig => shader =>\n    shader instanceof WebGLShader && orig.call(gl, shader.id)\n  );\n  wrap('isProgram', orig => program =>\n    program instanceof WebGLProgram && orig.call(gl, program.id)\n  );\n\n  // Uniforms and attributes\n  wrap('getActiveAttrib', orig => (program, index) =>\n    new WebGLActiveInfo(orig.call(gl, program && program.id, index))\n  );\n  wrap('getActiveUniform', orig => (program, index) =>\n    new WebGLActiveInfo(orig.call(gl, program && program.id, index))\n  );\n  wrap('getAttribLocation', orig => (program, name) =>\n    orig.call(gl, program && program.id, name)\n  );\n  wrap('getUniform', orig => (program, location) =>\n    orig.call(gl, program && program.id, location && location.id)\n  );\n  wrap('getUniformLocation', orig => (program, name) =>\n    new WebGLUniformLocation(orig.call(gl, program && program.id, name))\n  );\n  wrap(['uniform1f', 'uniform1i'], orig => (loc, x) =>\n    orig.call(gl, loc && loc.id, x)\n  );\n  wrap(['uniform2f', 'uniform2i'], orig => (loc, x, y) =>\n    orig.call(gl, loc && loc.id, x, y)\n  );\n  wrap(['uniform3f', 'uniform3i'], orig => (loc, x, y, z) =>\n    orig.call(gl, loc && loc.id, x, y, z)\n  );\n  wrap(['uniform4f', 'uniform4i'], orig => (loc, x, y, z, w) =>\n    orig.call(gl, loc && loc.id, x, y, z, w)\n  );\n  wrap(\n    ['uniform1fv', 'uniform2fv', 'uniform3fv', 'uniform4fv'],\n    orig => (loc, val) => orig.call(gl, loc && loc.id, new Float32Array(val))\n  );\n  wrap(\n    ['uniform1iv', 'uniform2iv', 'uniform3iv', 'uniform4iv'],\n    orig => (loc, val) => orig.call(gl, loc && loc.id, new Int32Array(val))\n  );\n  wrap(\n    ['uniformMatrix2fv', 'uniformMatrix3fv', 'uniformMatrix4fv'],\n    orig => (loc, transpose, val) =>\n      orig.call(gl, loc && loc.id, transpose, new Float32Array(val))\n  );\n  wrap(\n    [\n      'vertexAttrib1fv',\n      'vertexAttrib2fv',\n      'vertexAttrib3fv',\n      'vertexAttrib4fv',\n    ],\n    orig => (index, val) => orig.call(gl, index, new Float32Array(val))\n  );\n};\n\n// Get the GL interface from an EXGLContextID and do JS-side setup\nconst getGl = exglCtxId => {\n  const gl = global.__EXGLContexts[exglCtxId];\n  gl.__exglCtxId = exglCtxId;\n  delete global.__EXGLContexts[exglCtxId];\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(gl, global.WebGLRenderingContext.prototype);\n  } else {\n    gl.__proto__ = global.WebGLRenderingContext.prototype; // eslint-disable-line no-proto\n  }\n\n  wrapMethods(gl);\n\n  // No canvas yet...\n  gl.canvas = null;\n\n  // Drawing buffer width/height\n  // TODO(nikki): Make this dynamic\n  const viewport = gl.getParameter(gl.VIEWPORT);\n  gl.drawingBufferWidth = viewport[2];\n  gl.drawingBufferHeight = viewport[3];\n\n  // Enable/disable logging of all GL function calls\n  let enableLogging = false;\n  Object.defineProperty(gl, 'enableLogging', {\n    configurable: true,\n    get() {\n      return enableLogging;\n    },\n    set(enable) {\n      if (enable === enableLogging) {\n        return;\n      }\n      if (enable) {\n        Object.keys(gl).forEach(key => {\n          if (typeof gl[key] === 'function') {\n            const original = gl[key];\n            gl[key] = (...args) => {\n              console.log(`EXGL: ${key}(${args.join(', ')})`);\n              const r = original.apply(gl, args);\n              console.log(`EXGL:    = ${r}`);\n              return r;\n            };\n            gl[key].original = original;\n          }\n        });\n      } else {\n        Object.keys(gl).forEach(key => {\n          if (typeof gl[key] === 'function' && gl[key].original) {\n            gl[key] = gl[key].original;\n          }\n        });\n      }\n      enableLogging = enable;\n    },\n  });\n\n  return gl;\n};\n\nglobal.WebGLRenderingContext = WebGLRenderingContext;\nglobal.WebGLObject = WebGLObject;\nglobal.WebGLBuffer = WebGLBuffer;\nglobal.WebGLFramebuffer = WebGLFramebuffer;\nglobal.WebGLProgram = WebGLProgram;\nglobal.WebGLRenderbuffer = WebGLRenderbuffer;\nglobal.WebGLShader = WebGLShader;\nglobal.WebGLTexture = WebGLTexture;\nglobal.WebGLUniformLocation = WebGLUniformLocation;\nglobal.WebGLActiveInfo = WebGLActiveInfo;\nglobal.WebGLShaderPrecisionFormat = WebGLShaderPrecisionFormat;\n"]}]