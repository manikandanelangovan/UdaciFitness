["e7ffe0d24dbfd91ebd6b0b6f54e41f9838122d51","2354c7a4856431b2ce0f2cb4e0209d9e6504a8a8",["react-native"],[42],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/expo/src/admob/RNAdMobInterstitial.js"],"names":["RNAdMobInterstitial","eventHandlers","interstitialDidLoad","Map","interstitialDidFailToLoad","interstitialDidOpen","interstitialDidClose","interstitialWillLeaveApplication","addEventListener","type","handler","set","addListener","error","console","log","removeEventListener","has","get","remove","delete","removeAllListeners","tryShowNewInterstitial","warn","testID","setTestDeviceID","isReady","showAd","requestAd","module","exports","cb","setAdUnitId","setAdUnitID","id"],"mappings":"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","sourcesContent":["'use strict';\n\nimport { NativeModules, DeviceEventEmitter } from 'react-native';\n\nconst RNAdMobInterstitial = NativeModules.RNAdMobInterstitial;\n\nconst eventHandlers = {\n  interstitialDidLoad: new Map(),\n  interstitialDidFailToLoad: new Map(),\n  interstitialDidOpen: new Map(),\n  interstitialDidClose: new Map(),\n  interstitialWillLeaveApplication: new Map(),\n};\n\nconst addEventListener = (type, handler) => {\n  switch (type) {\n    case 'interstitialDidLoad':\n      eventHandlers[type].set(\n        handler,\n        DeviceEventEmitter.addListener(type, handler)\n      );\n      break;\n    case 'interstitialDidFailToLoad':\n      eventHandlers[type].set(\n        handler,\n        DeviceEventEmitter.addListener(type, error => {\n          handler(error);\n        })\n      );\n      break;\n    case 'interstitialDidOpen':\n      eventHandlers[type].set(\n        handler,\n        DeviceEventEmitter.addListener(type, handler)\n      );\n      break;\n    case 'interstitialDidClose':\n      eventHandlers[type].set(\n        handler,\n        DeviceEventEmitter.addListener(type, handler)\n      );\n      break;\n    case 'interstitialWillLeaveApplication':\n      eventHandlers[type].set(\n        handler,\n        DeviceEventEmitter.addListener(type, handler)\n      );\n      break;\n    default:\n      console.log(`Event with type ${type} does not exist.`);\n  }\n};\n\nconst removeEventListener = (type, handler) => {\n  if (!eventHandlers[type].has(handler)) {\n    return;\n  }\n  eventHandlers[type].get(handler).remove();\n  eventHandlers[type].delete(handler);\n};\n\nconst removeAllListeners = () => {\n  DeviceEventEmitter.removeAllListeners('interstitialDidLoad');\n  DeviceEventEmitter.removeAllListeners('interstitialDidFailToLoad');\n  DeviceEventEmitter.removeAllListeners('interstitialDidOpen');\n  DeviceEventEmitter.removeAllListeners('interstitialDidClose');\n  DeviceEventEmitter.removeAllListeners('interstitialWIllLeaveApplication');\n};\n\n// replaces deprecated API\nconst tryShowNewInterstitial = testID => {\n  console.warn(\n    `tryShowNewInterstitial method is deprecated and will be removed in the next major release, please use requestAd() and showAd() directly.\\n\\nExample: AdMobInterstitial.requestAd(AdMobInterstitial.showAd)`\n  );\n  if (testID) {\n    RNAdMobInterstitial.setTestDeviceID(testID);\n  }\n\n  RNAdMobInterstitial.isReady(isReady => {\n    if (isReady) {\n      RNAdMobInterstitial.showAd(() => {});\n    } else {\n      RNAdMobInterstitial.requestAd(() => RNAdMobInterstitial.showAd(() => {}));\n    }\n  });\n};\n\nmodule.exports = {\n  ...RNAdMobInterstitial,\n  requestAd: (cb = () => {}) => RNAdMobInterstitial.requestAd(cb), // requestAd callback is optional\n  showAd: (cb = () => {}) => RNAdMobInterstitial.showAd(cb), // showAd callback is optional\n  tryShowNewInterstitial,\n  addEventListener,\n  removeEventListener,\n  removeAllListeners,\n  setAdUnitId: id => {\n    RNAdMobInterstitial.setAdUnitID(id);\n    console.warn(\n      `setAdUnitId will be deprecated soon. Please use setAdUnitID instead.`\n    );\n  },\n};\n"]}]