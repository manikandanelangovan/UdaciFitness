["1154d6e2eed441d9bd870cbf3ff44b3c9a772517","c640cf8ab4849218ca7e66af0a5c5daf800f70a2",["../NativeAnimatedHelper","fbjs/lib/invariant"],[51,104],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Animated/src/nodes/AnimatedNode.js"],"names":["NativeAnimatedHelper","require","invariant","AnimatedNode","__isNative","__nativeTag","API","dropAnimatedNode","undefined","__getValue","child","Error","assertNativeAnimatedModule","nativeTag","generateNewNodeTag","createAnimatedNode","__getNativeConfig","module","exports"],"mappings":";AAYA;;AAEA,IAAMA,uBAAuBC,QAAQ,yBAAR,CAA7B;;AAEA,IAAMC,YAAYD,OAAZ,sBAAN;;IAIME,Y;;;;;;;+BACa,CAAE;;;+BACF;AACf,UAAI,KAAKC,UAAL,IAAmB,KAAKC,WAAL,IAAoB,IAA3C,EAAiD;AAC/CL,6BAAqBM,GAArB,CAAyBC,gBAAzB,CAA0C,KAAKF,WAA/C;AACA,aAAKA,WAAL,GAAmBG,SAAnB;AACD;AACF;;;iCACiB,CAAE;;;yCACM;AACxB,aAAO,KAAKC,UAAL,EAAP;AACD;;;+BACUC,K,EAAqB,CAAE;;;kCACpBA,K,EAAqB,CAAE;;;oCACA;AACnC,aAAO,EAAP;AACD;;;mCAKc;AACb,UAAI,CAAC,KAAKN,UAAV,EAAsB;AACpB,cAAM,IAAIO,KAAJ,CAAU,mDAAV,CAAN;AACD;AACF;;;qCACyB;AACxBX,2BAAqBY,0BAArB;AACAV,gBACE,KAAKE,UADP,EAEE,4DAFF;AAIA,UAAI,KAAKC,WAAL,IAAoB,IAAxB,EAA8B;AAC5B,YAAMQ,YAAqBb,qBAAqBc,kBAArB,EAA3B;AACAd,6BAAqBM,GAArB,CAAyBS,kBAAzB,CACEF,SADF,EAEE,KAAKG,iBAAL,EAFF;AAIA,aAAKX,WAAL,GAAmBQ,SAAnB;AACD;AACD,aAAO,KAAKR,WAAZ;AACD;;;wCAC2B;AAC1B,YAAM,IAAIM,KAAJ,CACJ,mEADI,CAAN;AAGD;;;6BACa;AACZ,aAAO,KAAKF,UAAL,EAAP;AACD;;;;;AAGHQ,OAAOC,OAAP,GAAiBf,YAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AnimatedNode\n * @flow\n * @format\n */\n'use strict';\n\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\n\nconst invariant = require('fbjs/lib/invariant');\n\n// Note(vjeux): this would be better as an interface but flow doesn't\n// support them yet\nclass AnimatedNode {\n  __attach(): void {}\n  __detach(): void {\n    if (this.__isNative && this.__nativeTag != null) {\n      NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n      this.__nativeTag = undefined;\n    }\n  }\n  __getValue(): any {}\n  __getAnimatedValue(): any {\n    return this.__getValue();\n  }\n  __addChild(child: AnimatedNode) {}\n  __removeChild(child: AnimatedNode) {}\n  __getChildren(): Array<AnimatedNode> {\n    return [];\n  }\n\n  /* Methods and props used by native Animated impl */\n  __isNative: boolean;\n  __nativeTag: ?number;\n  __makeNative() {\n    if (!this.__isNative) {\n      throw new Error('This node cannot be made a \"native\" animated node');\n    }\n  }\n  __getNativeTag(): ?number {\n    NativeAnimatedHelper.assertNativeAnimatedModule();\n    invariant(\n      this.__isNative,\n      'Attempt to get native tag from node not marked as \"native\"',\n    );\n    if (this.__nativeTag == null) {\n      const nativeTag: ?number = NativeAnimatedHelper.generateNewNodeTag();\n      NativeAnimatedHelper.API.createAnimatedNode(\n        nativeTag,\n        this.__getNativeConfig(),\n      );\n      this.__nativeTag = nativeTag;\n    }\n    return this.__nativeTag;\n  }\n  __getNativeConfig(): Object {\n    throw new Error(\n      'This JS animated node type cannot be used as native animated node',\n    );\n  }\n  toJSON(): any {\n    return this.__getValue();\n  }\n}\n\nmodule.exports = AnimatedNode;\n"]}]