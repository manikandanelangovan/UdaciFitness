["9c614607591ea464edac0629381fe7053ef44cdb","ca8aebf1e3903713061351cb6a21804245a463da",["ColorPropType","React","prop-types","StyleSheet","TabBarItemIOS","ViewPropTypes","requireNativeComponent"],[64,102,136,176,219,265,321],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Components/TabBarIOS/TabBarIOS.ios.js"],"names":["ColorPropType","require","React","PropTypes","StyleSheet","TabBarItemIOS","ViewPropTypes","requireNativeComponent","TabBarIOS","styles","tabGroup","props","style","unselectedTintColor","unselectedItemTintColor","tintColor","barTintColor","barStyle","itemPositioning","translucent","children","Component","Item","propTypes","oneOf","bool","create","flex","RCTTabBar","module","exports"],"mappings":";AAWA;;;;AAEA,IAAIA,gBAAgBC,OAAhB,iBAAJ;AACA,IAAIC,QAAQD,OAAR,SAAJ;AACA,IAAME,YAAYF,OAAZ,cAAN;AACA,IAAIG,aAAaH,OAAb,cAAJ;AACA,IAAII,gBAAgBJ,OAAhB,iBAAJ;AACA,IAAMK,gBAAgBL,OAAhB,iBAAN;;AAEA,IAAIM,yBAAyBN,OAAzB,0BAAJ;;IAEMO,S;;;;;;;;;;6BAsDK;AACP,aACE;AAAC,iBAAD;AAAA;AACE,iBAAO,CAACC,OAAOC,QAAR,EAAkB,KAAKC,KAAL,CAAWC,KAA7B,CADT;AAEE,+BAAqB,KAAKD,KAAL,CAAWE,mBAFlC;AAGE,mCAAyB,KAAKF,KAAL,CAAWG,uBAHtC;AAIE,qBAAW,KAAKH,KAAL,CAAWI,SAJxB;AAKE,wBAAc,KAAKJ,KAAL,CAAWK,YAL3B;AAME,oBAAU,KAAKL,KAAL,CAAWM,QANvB;AAOE,2BAAiB,KAAKN,KAAL,CAAWO,eAP9B;AAQE,uBAAa,KAAKP,KAAL,CAAWQ,WAAX,KAA2B,KAR1C;AAWI,aAAKR,KAAL,CAAWS;AAXf,OADF;AAeD;;;EAtEqBlB,MAAMmB,S,UAUrBC,I,GAAOjB,a,SAGPkB,S,4BACFjB,a;AACHM,SAAON,cAAcM,K;;AAIrBC,uBAAqBb,a;;AAIrBe,aAAWf,a;;AAIXc,2BAAyBd,a;;AAIzBgB,gBAAchB,a;;AAMdiB,YAAUd,UAAUqB,KAAV,CAAgB,CAAC,SAAD,EAAY,OAAZ,CAAhB,C;;AAIVL,eAAahB,UAAUsB,I;;AAUvBP,mBAAiBf,UAAUqB,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,CAAhB;;;;AAsBrB,IAAIf,SAASL,WAAWsB,MAAX,CAAkB;AAC7BhB,YAAU;AACRiB,UAAM;AADE;AADmB,CAAlB,CAAb;;AAMA,IAAIC,YAAYrB,uBAAuB,WAAvB,EAAoCC,SAApC,CAAhB;;AAEAqB,OAAOC,OAAP,GAAiBtB,SAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule TabBarIOS\n * @flow\n */\n'use strict';\n\nvar ColorPropType = require('ColorPropType');\nvar React = require('React');\nconst PropTypes = require('prop-types');\nvar StyleSheet = require('StyleSheet');\nvar TabBarItemIOS = require('TabBarItemIOS');\nconst ViewPropTypes = require('ViewPropTypes');\n\nvar requireNativeComponent = require('requireNativeComponent');\n\nclass TabBarIOS extends React.Component<{\n  style?: $FlowFixMe,\n  unselectedTintColor?: $FlowFixMe,\n  tintColor?: $FlowFixMe,\n  unselectedItemTintColor?: $FlowFixMe,\n  barTintColor?: $FlowFixMe,\n  barStyle?: 'default' | 'black',\n  translucent?: boolean,\n  itemPositioning?: 'fill' | 'center' | 'auto',\n}> {\n  static Item = TabBarItemIOS;\n\n  // $FlowFixMe(>=0.41.0)\n  static propTypes = {\n    ...ViewPropTypes,\n    style: ViewPropTypes.style,\n    /**\n     * Color of text on unselected tabs\n     */\n    unselectedTintColor: ColorPropType,\n    /**\n     * Color of the currently selected tab icon\n     */\n    tintColor: ColorPropType,\n    /**\n     * Color of unselected tab icons. Available since iOS 10.\n     */\n    unselectedItemTintColor: ColorPropType,\n    /**\n     * Background color of the tab bar\n     */\n    barTintColor: ColorPropType,\n    /**\n     * The style of the tab bar. Supported values are 'default', 'black'.\n     * Use 'black' instead of setting `barTintColor` to black. This produces\n     * a tab bar with the native iOS style with higher translucency.\n     */\n    barStyle: PropTypes.oneOf(['default', 'black']),\n    /**\n     * A Boolean value that indicates whether the tab bar is translucent\n     */\n    translucent: PropTypes.bool,\n    /**\n     * Specifies tab bar item positioning. Available values are:\n     * - fill - distributes items across the entire width of the tab bar\n     * - center - centers item in the available tab bar space\n     * - auto (default) - distributes items dynamically according to the\n     * user interface idiom. In a horizontally compact environment (e.g. iPhone 5)\n     * this value defaults to `fill`, in a horizontally regular one (e.g. iPad)\n     * it defaults to center.\n     */\n    itemPositioning: PropTypes.oneOf(['fill', 'center', 'auto']),\n  };\n\n  render() {\n    return (\n      <RCTTabBar\n        style={[styles.tabGroup, this.props.style]}\n        unselectedTintColor={this.props.unselectedTintColor}\n        unselectedItemTintColor={this.props.unselectedItemTintColor}\n        tintColor={this.props.tintColor}\n        barTintColor={this.props.barTintColor}\n        barStyle={this.props.barStyle}\n        itemPositioning={this.props.itemPositioning}\n        translucent={this.props.translucent !== false}>\n        {\n          // $FlowFixMe found when converting React.createClass to ES6\n          this.props.children}\n      </RCTTabBar>\n    );\n  }\n}\n\nvar styles = StyleSheet.create({\n  tabGroup: {\n    flex: 1,\n  }\n});\n\nvar RCTTabBar = requireNativeComponent('RCTTabBar', TabBarIOS);\n\nmodule.exports = TabBarIOS;\n"]}]