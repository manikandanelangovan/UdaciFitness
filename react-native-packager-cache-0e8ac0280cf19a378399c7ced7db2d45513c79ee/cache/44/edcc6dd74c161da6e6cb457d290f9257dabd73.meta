["236d2667b1efbe899ad9048bc45c7cb5556047d2","3f204c2657685e4a3b7bd4627a0a91caff60f7dc",[],[],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/regenerator-runtime/runtime.js"],"names":["global","hasOwn","Object","prototype","hasOwnProperty","undefined","$Symbol","Symbol","iteratorSymbol","iterator","toStringTagSymbol","toStringTag","inModule","module","runtime","regeneratorRuntime","exports","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","obj","arg","type","call","err","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","Gp","constructor","displayName","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","AwaitArgument","AsyncIterator","invoke","resolve","reject","record","result","value","Promise","then","unwrapped","process","domain","bind","previousPromise","enqueue","callInvokeWithMethodAndArg","async","iter","next","done","state","Error","doneResult","delegate","returnMethod","info","resultName","nextLoc","sent","_sent","dispatchException","abrupt","toString","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","keys","object","key","reverse","length","pop","values","iterable","iteratorMethod","isNaN","i","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","window"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `value instanceof AwaitArgument` to determine if the yielded value is\n  // meant to be awaited. Some may consider the name of this method too\n  // cutesy, but they are curmudgeons.\n  runtime.awrap = function(arg) {\n    return new AwaitArgument(arg);\n  };\n\n  function AwaitArgument(arg) {\n    this.arg = arg;\n  }\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value instanceof AwaitArgument) {\n          return Promise.resolve(value.arg).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          if (method === \"return\" ||\n              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n            // A return or throw (when the delegate iterator has no throw\n            // method) always terminates the yield* loop.\n            context.delegate = null;\n\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            var returnMethod = delegate.iterator[\"return\"];\n            if (returnMethod) {\n              var record = tryCatch(returnMethod, delegate.iterator, arg);\n              if (record.type === \"throw\") {\n                // If the return method threw an exception, let that\n                // exception prevail over the original return or throw.\n                method = \"throw\";\n                arg = record.arg;\n                continue;\n              }\n            }\n\n            if (method === \"return\") {\n              // Continue with the outer return, now that the delegate\n              // iterator has been terminated.\n              continue;\n            }\n          }\n\n          var record = tryCatch(\n            delegate.iterator[method],\n            delegate.iterator,\n            arg\n          );\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = arg;\n\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(arg) call above.\n          method = \"throw\";\n          arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n"]}]