["ddf20a8f5bfe4bc4e6636117efba5fa207fc7558","c9884ecd0ad02c5be9f4f9f67f7143decbb9d6de",["NativeModules"],[45],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/CameraRoll/ImagePickerIOS.js"],"names":["RCTImagePicker","require","ImagePickerIOS","canRecordVideos","callback","canUseCamera","openCameraDialog","config","successCallback","cancelCallback","videoMode","openSelectDialog","showImages","showVideos","module","exports"],"mappings":";AAWA;;AAEA,IAAIA,iBAAiBC,yBAAyBC,cAA9C;;AAEA,IAAIA,iBAAiB;AACnBC,mBAAiB,yBAASC,QAAT,EAA6B;AAC5C,WAAOJ,eAAeG,eAAf,CAA+BC,QAA/B,CAAP;AACD,GAHkB;AAInBC,gBAAc,sBAASD,QAAT,EAA6B;AACzC,WAAOJ,eAAeK,YAAf,CAA4BD,QAA5B,CAAP;AACD,GANkB;AAOnBE,oBAAkB,0BAASC,MAAT,EAAyBC,eAAzB,EAAoDC,cAApD,EAA8E;AAC9FF;AACEG,iBAAW;AADb,OAEKH,MAFL;AAIA,WAAOP,eAAeM,gBAAf,CAAgCC,MAAhC,EAAwCC,eAAxC,EAAyDC,cAAzD,CAAP;AACD,GAbkB;AAcnBE,oBAAkB,0BAASJ,MAAT,EAAyBC,eAAzB,EAAoDC,cAApD,EAA8E;AAC9FF;AACEK,kBAAY,IADd;AAEEC,kBAAY;AAFd,OAGKN,MAHL;AAKA,WAAOP,eAAeW,gBAAf,CAAgCJ,MAAhC,EAAwCC,eAAxC,EAAyDC,cAAzD,CAAP;AACD;AArBkB,CAArB;;AAwBAK,OAAOC,OAAP,GAAiBb,cAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ImagePickerIOS\n * @flow\n */\n'use strict';\n\nvar RCTImagePicker = require('NativeModules').ImagePickerIOS;\n\nvar ImagePickerIOS = {\n  canRecordVideos: function(callback: Function) {\n    return RCTImagePicker.canRecordVideos(callback);\n  },\n  canUseCamera: function(callback: Function) {\n    return RCTImagePicker.canUseCamera(callback);\n  },\n  openCameraDialog: function(config: Object, successCallback: Function, cancelCallback: Function) {\n    config = {\n      videoMode: false,\n      ...config,\n    };\n    return RCTImagePicker.openCameraDialog(config, successCallback, cancelCallback);\n  },\n  openSelectDialog: function(config: Object, successCallback: Function, cancelCallback: Function) {\n    config = {\n      showImages: true,\n      showVideos: false,\n      ...config,\n    };\n    return RCTImagePicker.openSelectDialog(config, successCallback, cancelCallback);\n  },\n};\n\nmodule.exports = ImagePickerIOS;\n"]}]