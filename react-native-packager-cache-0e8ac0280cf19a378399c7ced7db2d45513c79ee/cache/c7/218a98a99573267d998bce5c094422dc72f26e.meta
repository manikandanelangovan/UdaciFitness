["017d11a7a196e3f9c3eb4910d13c7834bb19f65e","fc0896495bf0bd3d50af131c2bb1d97d0cfaa5ef",["./utils"],[35],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/qs/lib/parse.js"],"names":["utils","require","has","Object","prototype","hasOwnProperty","defaults","allowDots","allowPrototypes","arrayLimit","decoder","decode","delimiter","depth","parameterLimit","plainObjects","strictNullHandling","parseValues","parseQueryStringValues","str","options","obj","cleanStr","ignoreQueryPrefix","replace","limit","Infinity","undefined","parts","split","i","length","part","bracketEqualsPos","indexOf","pos","key","val","slice","call","concat","parseObject","chain","leaf","root","create","cleanRoot","charAt","index","parseInt","isNaN","String","parseArrays","parseKeys","parseQueryStringKeys","givenKey","brackets","child","segment","exec","parent","keys","push","module","exports","opts","assign","TypeError","isRegExp","tempObj","newObj","merge","compact"],"mappings":"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","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder);\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]') {\n            obj = [];\n            obj = obj.concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n"]}]