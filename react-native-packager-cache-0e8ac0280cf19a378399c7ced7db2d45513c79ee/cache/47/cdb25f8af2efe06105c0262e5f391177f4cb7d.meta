["4dc08ec841256afacdf434f195a24688490b8a76","fee32566965f0c0211cba165e018b1a5e93896be",["Blob","event-target-shim","NativeEventEmitter","NativeModules","Platform","WebSocketEvent","base64-js","binaryToBase64","fbjs/lib/invariant"],[55,90,145,196,237,279,320,363,406],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/WebSocket/WebSocket.js"],"names":["Blob","require","EventTarget","NativeEventEmitter","NativeModules","Platform","WebSocketEvent","base64","binaryToBase64","invariant","WebSocketModule","CONNECTING","OPEN","CLOSING","CLOSED","CLOSE_NORMAL","WEBSOCKET_EVENTS","nextWebSocketId","WebSocket","url","protocols","options","readyState","headers","unrecognized","origin","console","warn","Object","keys","length","join","Array","isArray","isAvailable","Error","_eventEmitter","_socketId","_registerEvents","connect","code","reason","_close","data","BlobModule","sendBlob","send","ArrayBuffer","isView","sendBinary","ping","OS","statusCode","closeReason","close","_subscriptions","forEach","e","remove","addListener","ev","id","type","toByteArray","buffer","create","dispatchEvent","_unregisterEvents","message","_binaryType","binaryType","enableBlobSupport","disableBlobSupport","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule WebSocket\n * @flow\n */\n'use strict';\n\nconst Blob = require('Blob');\nconst EventTarget = require('event-target-shim');\nconst NativeEventEmitter = require('NativeEventEmitter');\nconst NativeModules = require('NativeModules');\nconst Platform = require('Platform');\nconst WebSocketEvent = require('WebSocketEvent');\n\nconst base64 = require('base64-js');\nconst binaryToBase64 = require('binaryToBase64');\nconst invariant = require('fbjs/lib/invariant');\n\nconst {WebSocketModule} = NativeModules;\n\nimport type EventSubscription from 'EventSubscription';\n\ntype ArrayBufferView =\n  | Int8Array\n  | Uint8Array\n  | Uint8ClampedArray\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array\n  | DataView\n\ntype BinaryType = 'blob' | 'arraybuffer'\n\nconst CONNECTING = 0;\nconst OPEN = 1;\nconst CLOSING = 2;\nconst CLOSED = 3;\n\nconst CLOSE_NORMAL = 1000;\n\nconst WEBSOCKET_EVENTS = [\n  'close',\n  'error',\n  'message',\n  'open',\n];\n\nlet nextWebSocketId = 0;\n\n/**\n * Browser-compatible WebSockets implementation.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * See https://github.com/websockets/ws\n */\nclass WebSocket extends EventTarget(...WEBSOCKET_EVENTS) {\n  static CONNECTING = CONNECTING;\n  static OPEN = OPEN;\n  static CLOSING = CLOSING;\n  static CLOSED = CLOSED;\n\n  CONNECTING: number = CONNECTING;\n  OPEN: number = OPEN;\n  CLOSING: number = CLOSING;\n  CLOSED: number = CLOSED;\n\n  _socketId: number;\n  _eventEmitter: NativeEventEmitter;\n  _subscriptions: Array<EventSubscription>;\n  _binaryType: ?BinaryType;\n\n  onclose: ?Function;\n  onerror: ?Function;\n  onmessage: ?Function;\n  onopen: ?Function;\n\n  bufferedAmount: number;\n  extension: ?string;\n  protocol: ?string;\n  readyState: number = CONNECTING;\n  url: ?string;\n\n  // This module depends on the native `WebSocketModule` module. If you don't include it,\n  // `WebSocket.isAvailable` will return `false`, and WebSocket constructor will throw an error\n  static isAvailable: boolean = !!WebSocketModule;\n\n  constructor(url: string, protocols: ?string | ?Array<string>, options: ?{headers?: {origin?: string}}) {\n    super();\n    if (typeof protocols === 'string') {\n      protocols = [protocols];\n    }\n\n    const {headers = {}, ...unrecognized} = options || {};\n\n    // Preserve deprecated backwards compatibility for the 'origin' option\n    if (unrecognized && typeof unrecognized.origin === 'string') {\n      console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.');\n      headers.origin = unrecognized.origin;\n      delete unrecognized.origin;\n    }\n\n    // Warn about and discard anything else\n    if (Object.keys(unrecognized).length > 0) {\n      console.warn('Unrecognized WebSocket connection option(s) `' + Object.keys(unrecognized).join('`, `') + '`. '\n        + 'Did you mean to put these under `headers`?');\n    }\n\n    if (!Array.isArray(protocols)) {\n      protocols = null;\n    }\n\n    if (!WebSocket.isAvailable) {\n      throw new Error('Cannot initialize WebSocket module. ' +\n      'Native module WebSocketModule is missing.');\n    }\n\n    this._eventEmitter = new NativeEventEmitter(WebSocketModule);\n    this._socketId = nextWebSocketId++;\n    this._registerEvents();\n    WebSocketModule.connect(url, protocols, { headers }, this._socketId);\n  }\n\n  get binaryType(): ?BinaryType {\n    return this._binaryType;\n  }\n\n  set binaryType(binaryType: BinaryType): void {\n    if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n      throw new Error('binaryType must be either \\'blob\\' or \\'arraybuffer\\'');\n    }\n    if (this._binaryType === 'blob' || binaryType === 'blob') {\n      const BlobModule = NativeModules.BlobModule;\n      invariant(BlobModule, 'Native module BlobModule is required for blob support');\n      if (BlobModule) {\n        if (binaryType === 'blob') {\n          BlobModule.enableBlobSupport(this._socketId);\n        } else {\n          BlobModule.disableBlobSupport(this._socketId);\n        }\n      }\n    }\n    this._binaryType = binaryType;\n  }\n\n  close(code?: number, reason?: string): void {\n    if (this.readyState === this.CLOSING ||\n        this.readyState === this.CLOSED) {\n      return;\n    }\n\n    this.readyState = this.CLOSING;\n    this._close(code, reason);\n  }\n\n  send(data: string | ArrayBuffer | ArrayBufferView | Blob): void {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    if (data instanceof Blob) {\n      const BlobModule = NativeModules.BlobModule;\n      invariant(BlobModule, 'Native module BlobModule is required for blob support');\n      BlobModule.sendBlob(data, this._socketId);\n      return;\n    }\n\n    if (typeof data === 'string') {\n      WebSocketModule.send(data, this._socketId);\n      return;\n    }\n\n    if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n      WebSocketModule.sendBinary(binaryToBase64(data), this._socketId);\n      return;\n    }\n\n    throw new Error('Unsupported data type');\n  }\n\n  ping(): void {\n    if (this.readyState === this.CONNECTING) {\n        throw new Error('INVALID_STATE_ERR');\n    }\n\n    WebSocketModule.ping(this._socketId);\n  }\n\n  _close(code?: number, reason?: string): void {\n    if (Platform.OS === 'android') {\n      // See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n      const statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n      const closeReason = typeof reason === 'string' ? reason : '';\n      WebSocketModule.close(statusCode, closeReason, this._socketId);\n    } else {\n      WebSocketModule.close(this._socketId);\n    }\n  }\n\n  _unregisterEvents(): void {\n    this._subscriptions.forEach(e => e.remove());\n    this._subscriptions = [];\n  }\n\n  _registerEvents(): void {\n    this._subscriptions = [\n      this._eventEmitter.addListener('websocketMessage', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        let data = ev.data;\n        switch (ev.type) {\n          case 'binary':\n            data = base64.toByteArray(ev.data).buffer;\n            break;\n          case 'blob':\n            data = Blob.create(ev.data);\n            break;\n        }\n        this.dispatchEvent(new WebSocketEvent('message', { data }));\n      }),\n      this._eventEmitter.addListener('websocketOpen', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.OPEN;\n        this.dispatchEvent(new WebSocketEvent('open'));\n      }),\n      this._eventEmitter.addListener('websocketClosed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(new WebSocketEvent('close', {\n          code: ev.code,\n          reason: ev.reason,\n        }));\n        this._unregisterEvents();\n        this.close();\n      }),\n      this._eventEmitter.addListener('websocketFailed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(new WebSocketEvent('error', {\n          message: ev.message,\n        }));\n        this.dispatchEvent(new WebSocketEvent('close', {\n          message: ev.message,\n        }));\n        this._unregisterEvents();\n        this.close();\n      })\n    ];\n  }\n}\n\nmodule.exports = WebSocket;\n"]}]