["327d6d3f824747ae85734664359c3b1126b432a1","819c7ec80b0cefa8a7adee5957565a59f9b3bd26",["Blob","NativeModules"],[36,69],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Blob/URL.js"],"names":["Blob","require","BlobModule","BLOB_URL_PREFIX","BLOB_URI_SCHEME","BLOB_URI_HOST","URL","Error","blob","blobId","offset","size","url","module","exports"],"mappings":";;AAaA;;AAEA,IAAMA,OAAOC,OAAP,QAAN;;eAEqBA,O;IAAdC,U,YAAAA,U;;AAEP,IAAIC,kBAAkB,IAAtB;;AAEA,IAAID,cAAc,OAAOA,WAAWE,eAAlB,KAAsC,QAAxD,EAAkE;AAChED,oBAAkBD,WAAWE,eAAX,GAA6B,GAA/C;AACA,MAAI,OAAOF,WAAWG,aAAlB,KAAoC,QAAxC,EAAkD;AAChDF,8BAAwBD,WAAWG,aAAnC;AACD;AACF;;IA0BKC,G;AACJ,iBAAc;AAAA;;AACZ,UAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;AACD;;;;oCAEsBC,I,EAAY;AACjC,UAAIL,oBAAoB,IAAxB,EAA8B;AAC5B,cAAM,IAAII,KAAJ,CAAU,6BAAV,CAAN;AACD;AACD,kBAAUJ,eAAV,GAA4BK,KAAKC,MAAjC,gBAAkDD,KAAKE,MAAvD,cAAsEF,KAAKG,IAA3E;AACD;;;oCAEsBC,G,EAAa,CAEnC;;;;;AAGHC,OAAOC,OAAP,GAAiBR,GAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule URL\n * @format\n * @flow\n */\n\n'use strict';\n\nconst Blob = require('Blob');\n\nconst {BlobModule} = require('NativeModules');\n\nlet BLOB_URL_PREFIX = null;\n\nif (BlobModule && typeof BlobModule.BLOB_URI_SCHEME === 'string') {\n  BLOB_URL_PREFIX = BlobModule.BLOB_URI_SCHEME + ':';\n  if (typeof BlobModule.BLOB_URI_HOST === 'string') {\n    BLOB_URL_PREFIX += `//${BlobModule.BLOB_URI_HOST}/`;\n  }\n}\n\n/**\n * To allow Blobs be accessed via `content://` URIs,\n * you need to register `BlobProvider` as a ContentProvider in your app's `AndroidManifest.xml`:\n *\n * ```xml\n * <manifest>\n *   <application>\n *     <provider\n *       android:name=\"com.facebook.react.modules.blob.BlobProvider\"\n *       android:authorities=\"@string/blob_provider_authority\"\n *       android:exported=\"false\"\n *     />\n *   </application>\n * </manifest>\n * ```\n * And then define the `blob_provider_authority` string in `res/values/strings.xml`.\n * Use a dotted name that's entirely unique to your app:\n *\n * ```xml\n * <resources>\n *   <string name=\"blob_provider_authority\">your.app.package.blobs</string>\n * </resources>\n * ```\n */\nclass URL {\n  constructor() {\n    throw new Error('Creating BlobURL objects is not supported yet.');\n  }\n\n  static createObjectURL(blob: Blob) {\n    if (BLOB_URL_PREFIX === null) {\n      throw new Error('Cannot create URL for blob!');\n    }\n    return `${BLOB_URL_PREFIX}${blob.blobId}?offset=${blob.offset}&size=${blob.size}`;\n  }\n\n  static revokeObjectURL(url: string) {\n    // Do nothing.\n  }\n}\n\nmodule.exports = URL;\n"]}]