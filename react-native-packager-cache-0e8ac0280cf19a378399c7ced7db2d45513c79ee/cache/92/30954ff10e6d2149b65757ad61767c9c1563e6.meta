["e7543547a6b576f42bc10b70cdda148248abb968","6c76f8ccc8e14d5701b3817d35f90f6b7357e77e",["prop-types","react-native","./ProviderConstants"],[355,465,516],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native-maps/lib/components/decorateMapComponent.js"],"names":["getAirMapName","decorateMapComponent","SUPPORTED","USES_DEFAULT_IMPLEMENTATION","NOT_SUPPORTED","provider","OS","getAirComponentName","component","contextTypes","string","createNotSupportedComponent","console","error","message","googleMapIsInstalled","UIManager","Component","componentType","providers","components","getDefaultComponent","prototype","getAirComponent","context","providerInfo","platformSupport","componentName","getUIManagerCommand","name","Commands","getMapManagerCommand","airComponentName"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  requireNativeComponent,\n  NativeModules,\n  Platform,\n} from 'react-native';\nimport {\n  PROVIDER_DEFAULT,\n  PROVIDER_GOOGLE,\n} from './ProviderConstants';\n\nexport const SUPPORTED = 'SUPPORTED';\nexport const USES_DEFAULT_IMPLEMENTATION = 'USES_DEFAULT_IMPLEMENTATION';\nexport const NOT_SUPPORTED = 'NOT_SUPPORTED';\n\nexport function getAirMapName(provider) {\n  if (Platform.OS === 'android') return 'AIRMap';\n  if (provider === PROVIDER_GOOGLE) return 'AIRGoogleMap';\n  return 'AIRMap';\n}\n\nfunction getAirComponentName(provider, component) {\n  return `${getAirMapName(provider)}${component}`;\n}\n\nexport const contextTypes = {\n  provider: PropTypes.string,\n};\n\nexport const createNotSupportedComponent = message => () => {\n  console.error(message); // eslint-disable-line no-console\n  return null;\n};\n\nexport const googleMapIsInstalled = !!NativeModules.UIManager[getAirMapName(PROVIDER_GOOGLE)];\n\nexport default function decorateMapComponent(Component, { componentType, providers }) {\n  const components = {};\n\n  const getDefaultComponent = () =>\n    requireNativeComponent(getAirComponentName(null, componentType), Component);\n\n  Component.contextTypes = contextTypes; // eslint-disable-line no-param-reassign\n\n  // eslint-disable-next-line no-param-reassign\n  Component.prototype.getAirComponent = function getAirComponent() {\n    const provider = this.context.provider || PROVIDER_DEFAULT;\n    if (components[provider]) return components[provider];\n\n    if (provider === PROVIDER_DEFAULT) {\n      components[PROVIDER_DEFAULT] = getDefaultComponent();\n      return components[PROVIDER_DEFAULT];\n    }\n\n    const providerInfo = providers[provider];\n    const platformSupport = providerInfo[Platform.OS];\n    const componentName = getAirComponentName(provider, componentType);\n    if (platformSupport === NOT_SUPPORTED) {\n      components[provider] = createNotSupportedComponent(`react-native-maps: ${componentName} is not supported on ${Platform.OS}`); // eslint-disable-line max-len\n    } else if (platformSupport === SUPPORTED) {\n      if (provider !== PROVIDER_GOOGLE || (Platform.OS === 'ios' && googleMapIsInstalled)) {\n        components[provider] = requireNativeComponent(componentName, Component);\n      }\n    } else { // (platformSupport === USES_DEFAULT_IMPLEMENTATION)\n      if (!components[PROVIDER_DEFAULT]) components[PROVIDER_DEFAULT] = getDefaultComponent();\n      components[provider] = components[PROVIDER_DEFAULT];\n    }\n\n    return components[provider];\n  };\n\n  Component.prototype.getUIManagerCommand = function getUIManagerCommand(name) {  // eslint-disable-line no-param-reassign,max-len\n    return NativeModules.UIManager[getAirComponentName(this.context.provider, componentType)]\n      .Commands[name];\n  };\n\n  Component.prototype.getMapManagerCommand = function getMapManagerCommand(name) { // eslint-disable-line no-param-reassign,max-len\n    const airComponentName = `${getAirComponentName(this.context.provider, componentType)}Manager`;\n    return NativeModules[airComponentName][name];\n  };\n\n  return Component;\n}\n"]}]