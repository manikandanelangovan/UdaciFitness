["de05c9bf57b07c026bb460dbd0c9a13d9f2f7714","e8e3781e8ac4d22c56d29fb4790c42e5ced745a8",["fbjs/lib/invariant","merge"],[40,83],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Utilities/createStrictShapeTypeChecker.js"],"names":["invariant","require","merge","createStrictShapeTypeChecker","shapeTypes","checkType","isRequired","props","propName","componentName","location","propValue","propType","locationName","allKeys","rest","key","checker","JSON","stringify","Object","keys","error","message","chainedCheckType","bind","module","exports"],"mappings":";AAWA;;AAEA,IAAIA,YAAYC,OAAZ,sBAAJ;AACA,IAAIC,QAAQD,OAAR,SAAJ;;AAEA,SAASE,4BAAT,CACEC,UADF,EAEkC;AAChC,WAASC,SAAT,CAAmBC,UAAnB,EAA+BC,KAA/B,EAAsCC,QAAtC,EAAgDC,aAAhD,EAA+DC,QAA/D,EAAmF;AACjF,QAAI,CAACH,MAAMC,QAAN,CAAL,EAAsB;AACpB,UAAIF,UAAJ,EAAgB;AACdN,kBACE,KADF,EAEE,sBAAqBQ,QAArB,sCACKC,aADL,QAFF;AAKD;AACD;AACD;AACD,QAAIE,YAAYJ,MAAMC,QAAN,CAAhB;AACA,QAAII,WAAW,OAAOD,SAAtB;AACA,QAAIE,eAAeH,YAAY,WAA/B;AACA,QAAIE,aAAa,QAAjB,EAA2B;AACzBZ,gBACE,KADF,EAEE,aAAWa,YAAX,UAA6BL,QAA7B,mBAAqDI,QAArD,6BACmBH,aADnB,2BAFF;AAKD;;AAGD,QAAIK,UAAUZ,MAAMK,MAAMC,QAAN,CAAN,EAAuBJ,UAAvB,CAAd;;AAvBiF,sCAANW,IAAM;AAANA,UAAM;AAAA;;AAwBjF,SAAK,IAAIC,GAAT,IAAgBF,OAAhB,EAAyB;AACvB,UAAIG,UAAUb,WAAWY,GAAX,CAAd;AACA,UAAI,CAACC,OAAL,EAAc;AACZjB,kBACE,KADF,EAEE,mBAAiBQ,QAAjB,cAAmCQ,GAAnC,uBAA0DP,aAA1D,6BACqBS,KAAKC,SAAL,CAAeZ,MAAMC,QAAN,CAAf,EAAgC,IAAhC,EAAsC,IAAtC,CADrB,sBAEqBU,KAAKC,SAAL,CAAeC,OAAOC,IAAP,CAAYjB,UAAZ,CAAf,EAAwC,IAAxC,EAA8C,IAA9C,CAJvB;AAMD;AACD,UAAIkB,QAAQL,0BAAQN,SAAR,EAAmBK,GAAnB,EAAwBP,aAAxB,EAAuCC,QAAvC,SAAoDK,IAApD,EAAZ;AACA,UAAIO,KAAJ,EAAW;AACTtB,kBACE,KADF,EAEEsB,MAAMC,OAAN,sBACqBL,KAAKC,SAAL,CAAeZ,MAAMC,QAAN,CAAf,EAAgC,IAAhC,EAAsC,IAAtC,CAHvB;AAKD;AACF;AACF;AACD,WAASgB,gBAAT,CACEjB,KADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,QAJF,EAMU;AAAA,uCADLK,IACK;AADLA,UACK;AAAA;;AACR,WAAOV,4BAAU,KAAV,EAAiBE,KAAjB,EAAwBC,QAAxB,EAAkCC,aAAlC,EAAiDC,QAAjD,SAA8DK,IAA9D,EAAP;AACD;AACDS,mBAAiBlB,UAAjB,GAA8BD,UAAUoB,IAAV,CAAe,IAAf,EAAqB,IAArB,CAA9B;AACA,SAAOD,gBAAP;AACD;;AAEDE,OAAOC,OAAP,GAAiBxB,4BAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createStrictShapeTypeChecker\n * @flow\n */\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\nvar merge = require('merge');\n\nfunction createStrictShapeTypeChecker(\n  shapeTypes: {[key: string]: ReactPropsCheckType}\n): ReactPropsChainableTypeChecker {\n  function checkType(isRequired, props, propName, componentName, location?, ...rest) {\n    if (!props[propName]) {\n      if (isRequired) {\n        invariant(\n          false,\n          `Required object \\`${propName}\\` was not specified in ` +\n          `\\`${componentName}\\`.`\n        );\n      }\n      return;\n    }\n    var propValue = props[propName];\n    var propType = typeof propValue;\n    var locationName = location || '(unknown)';\n    if (propType !== 'object') {\n      invariant(\n        false,\n        `Invalid ${locationName} \\`${propName}\\` of type \\`${propType}\\` ` +\n          `supplied to \\`${componentName}\\`, expected \\`object\\`.`\n      );\n    }\n    // We need to check all keys in case some are required but missing from\n    // props.\n    var allKeys = merge(props[propName], shapeTypes);\n    for (var key in allKeys) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        invariant(\n          false,\n          `Invalid props.${propName} key \\`${key}\\` supplied to \\`${componentName}\\`.` +\n            `\\nBad object: ` + JSON.stringify(props[propName], null, '  ') +\n            `\\nValid keys: ` + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n        );\n      }\n      var error = checker(propValue, key, componentName, location, ...rest);\n      if (error) {\n        invariant(\n          false,\n          error.message +\n            `\\nBad object: ` + JSON.stringify(props[propName], null, '  ')\n        );\n      }\n    }\n  }\n  function chainedCheckType(\n    props: {[key: string]: any},\n    propName: string,\n    componentName: string,\n    location?: string,\n    ...rest\n  ): ?Error {\n    return checkType(false, props, propName, componentName, location, ...rest);\n  }\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n}\n\nmodule.exports = createStrictShapeTypeChecker;\n"]}]