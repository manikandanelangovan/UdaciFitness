["5e4193ab7cfaabc7d9ed990393d9132482cc6004","035daa047c51a76954d36555327bbcc3ac8a2141",["NativeMethodsMixin","React","prop-types","StyleSheet","StyleSheetPropType","TextStylePropTypes","View","ViewPropTypes","processColor","create-react-class","requireNativeComponent"],[69,112,146,186,234,290,332,369,414,463,587],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Components/Picker/PickerIOS.ios.js"],"names":["NativeMethodsMixin","require","React","PropTypes","StyleSheet","StyleSheetPropType","TextStylePropTypes","View","ViewPropTypes","processColor","createReactClass","itemStylePropType","requireNativeComponent","PickerIOS","displayName","mixins","propTypes","itemStyle","onValueChange","func","selectedValue","any","getInitialState","_stateFromProps","props","componentWillReceiveProps","nextProps","setState","selectedIndex","items","Children","toArray","children","forEach","child","index","value","push","label","textColor","color","render","style","_picker","picker","styles","pickerIOS","state","_onChange","event","onChange","nativeEvent","newValue","newIndex","setNativeProps","Item","Component","string","create","height","RCTPickerIOS","nativeOnly","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule PickerIOS\n *\n * This is a controlled component version of RCTPickerIOS\n */\n'use strict';\n\nvar NativeMethodsMixin = require('NativeMethodsMixin');\nvar React = require('React');\nconst PropTypes = require('prop-types');\nvar StyleSheet = require('StyleSheet');\nvar StyleSheetPropType = require('StyleSheetPropType');\nvar TextStylePropTypes = require('TextStylePropTypes');\nvar View = require('View');\nconst ViewPropTypes = require('ViewPropTypes');\nvar processColor = require('processColor');\n\nvar createReactClass = require('create-react-class');\nvar itemStylePropType = StyleSheetPropType(TextStylePropTypes);\nvar requireNativeComponent = require('requireNativeComponent');\n\nvar PickerIOS = createReactClass({\n  displayName: 'PickerIOS',\n  mixins: [NativeMethodsMixin],\n\n  propTypes: {\n    ...ViewPropTypes,\n    itemStyle: itemStylePropType,\n    onValueChange: PropTypes.func,\n    selectedValue: PropTypes.any, // string or integer basically\n  },\n\n  getInitialState: function() {\n    return this._stateFromProps(this.props);\n  },\n\n  componentWillReceiveProps: function(nextProps) {\n    this.setState(this._stateFromProps(nextProps));\n  },\n\n  // Translate PickerIOS prop and children into stuff that RCTPickerIOS understands.\n  _stateFromProps: function(props) {\n    var selectedIndex = 0;\n    var items = [];\n    React.Children.toArray(props.children).forEach(function (child, index) {\n      if (child.props.value === props.selectedValue) {\n        selectedIndex = index;\n      }\n      items.push({\n        value: child.props.value,\n        label: child.props.label,\n        textColor: processColor(child.props.color),\n      });\n    });\n    return {selectedIndex, items};\n  },\n\n  render: function() {\n    return (\n      <View style={this.props.style}>\n        <RCTPickerIOS\n          ref={picker => this._picker = picker}\n          style={[styles.pickerIOS, this.props.itemStyle]}\n          items={this.state.items}\n          selectedIndex={this.state.selectedIndex}\n          onChange={this._onChange}\n          onStartShouldSetResponder={() => true}\n          onResponderTerminationRequest={() => false}\n        />\n      </View>\n    );\n  },\n\n  _onChange: function(event) {\n    if (this.props.onChange) {\n      this.props.onChange(event);\n    }\n    if (this.props.onValueChange) {\n      this.props.onValueChange(event.nativeEvent.newValue, event.nativeEvent.newIndex);\n    }\n\n    // The picker is a controlled component. This means we expect the\n    // on*Change handlers to be in charge of updating our\n    // `selectedValue` prop. That way they can also\n    // disallow/undo/mutate the selection of certain values. In other\n    // words, the embedder of this component should be the source of\n    // truth, not the native component.\n    if (this._picker && this.state.selectedIndex !== event.nativeEvent.newIndex) {\n      this._picker.setNativeProps({\n        selectedIndex: this.state.selectedIndex\n      });\n    }\n  },\n});\n\nPickerIOS.Item = class extends React.Component {\n  static propTypes = {\n    value: PropTypes.any, // string or integer basically\n    label: PropTypes.string,\n    color: PropTypes.string,\n  };\n\n  render() {\n    // These items don't get rendered directly.\n    return null;\n  }\n};\n\nvar styles = StyleSheet.create({\n  pickerIOS: {\n    // The picker will conform to whatever width is given, but we do\n    // have to set the component's height explicitly on the\n    // surrounding view to ensure it gets rendered.\n    height: 216,\n  },\n});\n\nvar RCTPickerIOS = requireNativeComponent('RCTPicker', {\n  propTypes: {\n    style: itemStylePropType,\n  },\n}, {\n  nativeOnly: {\n    items: true,\n    onChange: true,\n    selectedIndex: true,\n  },\n});\n\nmodule.exports = PickerIOS;\n"]}]