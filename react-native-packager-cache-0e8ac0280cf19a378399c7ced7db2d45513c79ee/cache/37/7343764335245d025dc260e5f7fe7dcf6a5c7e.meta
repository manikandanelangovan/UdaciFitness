["e155bb9b038cf8946a643318ef82813c14b4717b","8b6fa7021270924db1fbc50ec5d82b1d1f865040",["Platform","fbjs/lib/invariant","processColor","NativeModules"],[39,77,127,168],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Share/Share.js"],"names":["Platform","require","invariant","processColor","ActionSheetManager","ShareModule","Share","content","options","url","message","OS","title","share","dialogTitle","Promise","resolve","reject","showShareActionSheetWithOptions","tintColor","error","success","activityType","Error","module","exports"],"mappings":";AAWA;;AAEA,IAAMA,WAAWC,OAAX,YAAN;;AAEA,IAAMC,YAAYD,OAAZ,sBAAN;AACA,IAAME,eAAeF,OAAf,gBAAN;;eAKIA,O;IAFFG,kB,YAAAA,kB;IACAC,W,YAAAA,W;;IAMIC,K;;;;;;;0BAkCSC,O,EAA0D;AAAA,UAAxCC,OAAwC,uEAArB,EAAqB;;AACrEN,gBACE,OAAOK,OAAP,KAAmB,QAAnB,IAA+BA,YAAY,IAD7C,EAEE,yCAFF;AAIAL,gBACE,OAAOK,QAAQE,GAAf,KAAuB,QAAvB,IAAmC,OAAOF,QAAQG,OAAf,KAA2B,QADhE,EAEE,6CAFF;AAIAR,gBACE,OAAOM,OAAP,KAAmB,QAAnB,IAA+BA,YAAY,IAD7C,EAEE,gCAFF;;AAKA,UAAIR,SAASW,EAAT,KAAgB,SAApB,EAA+B;AAC7BT,kBACE,CAACK,QAAQK,KAAT,IAAkB,OAAOL,QAAQK,KAAf,KAAyB,QAD7C,EAEE,0CAFF;AAIA,eAAOP,YAAYQ,KAAZ,CAAkBN,OAAlB,EAA2BC,QAAQM,WAAnC,CAAP;AACD,OAND,MAMO,IAAId,SAASW,EAAT,KAAgB,KAApB,EAA2B;AAChC,eAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCb,6BAAmBc,+BAAnB,0BACMX,OADN,EACkBC,OADlB,IAC2BW,WAAWhB,aAAaK,QAAQW,SAArB,CADtC,KAEE,UAACC,KAAD;AAAA,mBAAWH,OAAOG,KAAP,CAAX;AAAA,WAFF,EAGE,UAACC,OAAD,EAAUC,YAAV,EAA2B;AACzB,gBAAID,OAAJ,EAAa;AACXL,sBAAQ;AACN,0BAAU,cADJ;AAEN,gCAAgBM;AAFV,eAAR;AAID,aALD,MAKO;AACLN,sBAAQ;AACN,0BAAU;AADJ,eAAR;AAGD;AACF,WAdH;AAgBD,SAjBM,CAAP;AAkBD,OAnBM,MAmBA;AACL,eAAOD,QAAQE,MAAR,CAAe,IAAIM,KAAJ,CAAU,sBAAV,CAAf,CAAP;AACD;AACF;;;wBAKyB;AAAE,aAAO,cAAP;AAAwB;;;wBAMvB;AAAE,aAAO,iBAAP;AAA2B;;;;;AAI5DC,OAAOC,OAAP,GAAiBnB,KAAjB","sourcesContent":["/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Share\n * @flow\n */\n'use strict';\n\nconst Platform = require('Platform');\n\nconst invariant = require('fbjs/lib/invariant');\nconst processColor = require('processColor');\n\nconst {\n  ActionSheetManager,\n  ShareModule\n} = require('NativeModules');\n\ntype Content = { title?: string, message: string } | { title?: string, url: string };\ntype Options = { dialogTitle?: string, excludeActivityTypes?: Array<string>, tintColor?: string };\n\nclass Share {\n\n  /**\n   * Open a dialog to share text content.\n   *\n   * In iOS, Returns a Promise which will be invoked an object containing `action`, `activityType`.\n   * If the user dismissed the dialog, the Promise will still be resolved with action being `Share.dismissedAction`\n   * and all the other keys being undefined.\n   *\n   * In Android, Returns a Promise which always be resolved with action being `Share.sharedAction`.\n   *\n   * ### Content\n   *\n   *  - `message` - a message to share\n   *  - `title` - title of the message\n   *\n   * #### iOS\n   *\n   *  - `url` - an URL to share\n   *\n   * At least one of URL and message is required.\n   *\n   * ### Options\n   *\n   * #### iOS\n   *\n   * - `excludedActivityTypes`\n   * - `tintColor`\n   *\n   * #### Android\n   *\n   * - `dialogTitle`\n   *\n   */\n  static share(content: Content, options: Options = {}): Promise<Object> {\n    invariant(\n      typeof content === 'object' && content !== null,\n      'Content to share must be a valid object'\n    );\n    invariant(\n      typeof content.url === 'string' || typeof content.message === 'string',\n      'At least one of URL and message is required'\n    );\n    invariant(\n      typeof options === 'object' && options !== null,\n      'Options must be a valid object'\n    );\n\n    if (Platform.OS === 'android') {\n      invariant(\n        !content.title || typeof content.title === 'string',\n        'Invalid title: title should be a string.'\n      );\n      return ShareModule.share(content, options.dialogTitle);\n    } else if (Platform.OS === 'ios') {\n      return new Promise((resolve, reject) => {\n        ActionSheetManager.showShareActionSheetWithOptions(\n          {...content, ...options, tintColor: processColor(options.tintColor)},\n          (error) => reject(error),\n          (success, activityType) => {\n            if (success) {\n              resolve({\n                'action': 'sharedAction',\n                'activityType': activityType\n              });\n            } else {\n              resolve({\n                'action': 'dismissedAction'\n              });\n            }\n          }\n        );\n      });\n    } else {\n      return Promise.reject(new Error('Unsupported platform'));\n    }\n  }\n\n  /**\n   * The content was successfully shared.\n   */\n  static get sharedAction() { return 'sharedAction'; }\n\n  /**\n   * The dialog has been dismissed.\n   * @platform ios\n   */\n  static get dismissedAction() { return 'dismissedAction'; }\n\n}\n\nmodule.exports = Share;\n"]}]