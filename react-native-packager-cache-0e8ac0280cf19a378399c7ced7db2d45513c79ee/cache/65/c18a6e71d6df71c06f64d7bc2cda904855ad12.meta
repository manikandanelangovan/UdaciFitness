["c2e666746931f8cc2a39f1f8cc5b705838e44384","1567affa867d8c7303d09627a3a2c28264c398ca",["react","prop-types","react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js","../attributes"],[959,1054,1184,1399],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native-svg/lib/extract/extractViewBox.js"],"names":["props","viewBox","preserveAspectRatio","params","trim","split","spacesRegExp","length","every","isNaN","console","warn","modes","meetOrSlice","meetOrSliceTypes","align","alignEnum","minX","minY","vbWidth","vbHeight","meet","slice","none","reduce","prev","name"],"mappings":";;;;;kBAwBe,UAAUA,KAAV,EAAiB;AAAA,QACrBC,OADqB,GACWD,KADX,CACrBC,OADqB;AAAA,QACZC,mBADY,GACWF,KADX,CACZE,mBADY;;;AAG5B,QAAI,CAACD,OAAL,EAAc;AACV,eAAO,IAAP;AACH;;AAED,QAAIE,SAASF,QAAQG,IAAR,GAAeC,KAAf,CAAqBC,YAArB,CAAb;;AAEA,QAAIH,OAAOI,MAAP,KAAkB,CAAlB,IAAwBJ,OAAOK,KAAP,CAAa;AAAA,eAAS,CAACC,MAAM,CAACN,MAAP,CAAV;AAAA,KAAb,CAA5B,EAAoE;AAChEO,gBAAQC,IAAR,CAAa,4BAA4BV,OAAzC;AACA,eAAO,IAAP;AACH;;AAED,QAAIW,QAAQV,sBAAsBA,oBAAoBE,IAApB,GAA2BC,KAA3B,CAAiCC,YAAjC,CAAtB,GAAuE,EAAnF;;AAEA,QAAIO,cAAcC,iBAAiBF,MAAM,CAAN,CAAjB,KAA8B,CAAhD;AACA,QAAIG,QAAQC,UAAUJ,MAAM,CAAN,CAAV,KAAuB,UAAnC;;AAEA,WAAO;AACHK,cAAM,CAACd,OAAO,CAAP,CADJ;AAEHe,cAAM,CAACf,OAAO,CAAP,CAFJ;AAGHgB,iBAAS,CAAChB,OAAO,CAAP,CAHP;AAIHiB,kBAAU,CAACjB,OAAO,CAAP,CAJR;AAKHY,oBALG;AAMHF;AANG,KAAP;AAQH,C;;AAlDD;;;;AACA;;;;AACA;;;;AACA;;AAEA,IAAMC,mBAAmB;AACrBO,UAAM,CADe;AAErBC,WAAO,CAFc;AAGrBC,UAAM;AAHe,CAAzB;;AAMA,IAAMP,YAAY,CACd,UADc,EACF,UADE,EACU,UADV,EAEd,UAFc,EAEF,UAFE,EAEU,UAFV,EAGd,UAHc,EAGF,UAHE,EAGU,UAHV,EAId,MAJc,EAKhBQ,MALgB,CAKT,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACrBD,SAAKC,IAAL,IAAaA,IAAb;AACA,WAAOD,IAAP;AACH,CARiB,EAQf,EARe,CAAlB;;AAUA,IAAMnB,eAAe,KAArB;;QAgCIQ,gB,GAAAA,gB;QACAE,S,GAAAA,S","sourcesContent":["\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport createReactNativeComponentClass from 'react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js';\nimport {ViewBoxAttributes} from '../attributes';\n\nconst meetOrSliceTypes = {\n    meet: 0,\n    slice: 1,\n    none: 2\n};\n\nconst alignEnum = [\n    'xMinYMin', 'xMidYMin', 'xMaxYMin',\n    'xMinYMid', 'xMidYMid', 'xMaxYMid',\n    'xMinYMax', 'xMidYMax', 'xMaxYMax',\n    'none'\n].reduce((prev, name) => {\n    prev[name] = name;\n    return prev;\n}, {});\n\nconst spacesRegExp = /\\s+/;\n\nexport default function (props) {\n    const {viewBox, preserveAspectRatio} = props;\n\n    if (!viewBox) {\n        return null;\n    }\n\n    let params = viewBox.trim().split(spacesRegExp);\n\n    if (params.length === 4 &&  params.every(param => !isNaN(+params))) {\n        console.warn('Invalid `viewBox` prop:' + viewBox);\n        return null;\n    }\n\n    let modes = preserveAspectRatio ? preserveAspectRatio.trim().split(spacesRegExp) : [];\n\n    let meetOrSlice = meetOrSliceTypes[modes[1]] || 0;\n    let align = alignEnum[modes[0]] || 'xMidYMid';\n\n    return {\n        minX: +params[0],\n        minY: +params[1],\n        vbWidth: +params[2],\n        vbHeight: +params[3],\n        align,\n        meetOrSlice\n    }\n}\n\nexport {\n    meetOrSliceTypes,\n    alignEnum\n};\n"]}]