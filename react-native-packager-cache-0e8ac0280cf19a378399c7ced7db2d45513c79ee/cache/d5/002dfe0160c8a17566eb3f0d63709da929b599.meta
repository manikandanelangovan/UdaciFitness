["4292521d50a55561c0e5a437196ec36bf78be7b5","983939bc99c3a9e75e70b03cd04d390805298dc3",["./AnimatedInterpolation","./AnimatedNode","./AnimatedValue","./AnimatedWithChildren"],[52,107,154,209],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Animated/src/nodes/AnimatedDivision.js"],"names":["AnimatedInterpolation","require","AnimatedNode","AnimatedValue","AnimatedWithChildren","AnimatedDivision","a","b","_a","_b","__makeNative","__getValue","console","error","config","__addChild","__removeChild","type","input","__getNativeTag","module","exports"],"mappings":";AAYA;;AAEA,IAAMA,wBAAwBC,QAAQ,yBAAR,CAA9B;AACA,IAAMC,eAAeD,QAAQ,gBAAR,CAArB;AACA,IAAME,gBAAgBF,QAAQ,iBAAR,CAAtB;AACA,IAAMG,uBAAuBH,QAAQ,wBAAR,CAA7B;;IAIMI,gB;;;AAIJ,4BAAYC,CAAZ,EAAsCC,CAAtC,EAAgE;AAAA;;AAAA;;AAE9D,UAAKC,EAAL,GAAU,OAAOF,CAAP,KAAa,QAAb,GAAwB,IAAIH,aAAJ,CAAkBG,CAAlB,CAAxB,GAA+CA,CAAzD;AACA,UAAKG,EAAL,GAAU,OAAOF,CAAP,KAAa,QAAb,GAAwB,IAAIJ,aAAJ,CAAkBI,CAAlB,CAAxB,GAA+CA,CAAzD;AAH8D;AAI/D;;;;mCAEc;AACb,WAAKC,EAAL,CAAQE,YAAR;AACA,WAAKD,EAAL,CAAQC,YAAR;AACA;AACD;;;iCAEoB;AACnB,UAAMJ,IAAI,KAAKE,EAAL,CAAQG,UAAR,EAAV;AACA,UAAMJ,IAAI,KAAKE,EAAL,CAAQE,UAAR,EAAV;AACA,UAAIJ,MAAM,CAAV,EAAa;AACXK,gBAAQC,KAAR,CAAc,+CAAd;AACD;AACD,aAAOP,IAAIC,CAAX;AACD;;;gCAEWO,M,EAAwD;AAClE,aAAO,IAAId,qBAAJ,CAA0B,IAA1B,EAAgCc,MAAhC,CAAP;AACD;;;+BAEgB;AACf,WAAKN,EAAL,CAAQO,UAAR,CAAmB,IAAnB;AACA,WAAKN,EAAL,CAAQM,UAAR,CAAmB,IAAnB;AACD;;;+BAEgB;AACf,WAAKP,EAAL,CAAQQ,aAAR,CAAsB,IAAtB;AACA,WAAKP,EAAL,CAAQO,aAAR,CAAsB,IAAtB;AACA;AACD;;;wCAEwB;AACvB,aAAO;AACLC,cAAM,UADD;AAELC,eAAO,CAAC,KAAKV,EAAL,CAAQW,cAAR,EAAD,EAA2B,KAAKV,EAAL,CAAQU,cAAR,EAA3B;AAFF,OAAP;AAID;;;EA7C4Bf,oB;;AAgD/BgB,OAAOC,OAAP,GAAiBhB,gBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AnimatedDivision\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedInterpolation = require('./AnimatedInterpolation');\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedValue = require('./AnimatedValue');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\n\nimport type {InterpolationConfigType} from './AnimatedInterpolation';\n\nclass AnimatedDivision extends AnimatedWithChildren {\n  _a: AnimatedNode;\n  _b: AnimatedNode;\n\n  constructor(a: AnimatedNode | number, b: AnimatedNode | number) {\n    super();\n    this._a = typeof a === 'number' ? new AnimatedValue(a) : a;\n    this._b = typeof b === 'number' ? new AnimatedValue(b) : b;\n  }\n\n  __makeNative() {\n    this._a.__makeNative();\n    this._b.__makeNative();\n    super.__makeNative();\n  }\n\n  __getValue(): number {\n    const a = this._a.__getValue();\n    const b = this._b.__getValue();\n    if (b === 0) {\n      console.error('Detected division by zero in AnimatedDivision');\n    }\n    return a / b;\n  }\n\n  interpolate(config: InterpolationConfigType): AnimatedInterpolation {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __attach(): void {\n    this._a.__addChild(this);\n    this._b.__addChild(this);\n  }\n\n  __detach(): void {\n    this._a.__removeChild(this);\n    this._b.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    return {\n      type: 'division',\n      input: [this._a.__getNativeTag(), this._b.__getNativeTag()],\n    };\n  }\n}\n\nmodule.exports = AnimatedDivision;\n"]}]