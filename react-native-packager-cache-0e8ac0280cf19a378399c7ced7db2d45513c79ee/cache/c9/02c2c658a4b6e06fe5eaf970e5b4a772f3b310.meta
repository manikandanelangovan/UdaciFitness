["8fa27ca0354f658e1dfc6692d4a38686aef79bf6","bfb3c8bc84cc79d9d77a920291a55a8040b5550f",["prop-types","react","react-native"],[120,224,321],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/expo/src/admob/RNPublisherBanner.js"],"names":["RNBanner","PublisherBanner","state","style","_handleSizeChange","event","nativeEvent","height","width","setState","props","adUnitID","testDeviceID","bannerSize","didFailToReceiveAdWithError","admobDispatchAppEvent","adViewDidReceiveAd","error","adViewWillPresentScreen","adViewWillDismissScreen","adViewDidDismissScreen","adViewWillLeaveApplication","Component","propTypes","string","func","defaultProps"],"mappings":";;;;;AAAA;;;;AACA;;;;AACA;;AAEA,IAAMA,WAAW,yCAAuB,YAAvB,EAAqCC,eAArC,CAAjB;;IAEqBA,e;;;;;;;;;;;;;;oNACnBC,K,GAAQ;AACNC,aAAO;AADD,K,QAIRC,iB,GAAoB,iBAAS;AAAA,+BACDC,MAAMC,WADL;AAAA,UACnBC,MADmB,sBACnBA,MADmB;AAAA,UACXC,KADW,sBACXA,KADW;;AAE3B,YAAKC,QAAL,CAAc,EAAEN,OAAO,EAAEK,YAAF,EAASD,cAAT,EAAT,EAAd;AACD,K;;;;;6BAEQ;AAAA,mBAOH,KAAKG,KAPF;AAAA,UAELC,QAFK,UAELA,QAFK;AAAA,UAGLC,YAHK,UAGLA,YAHK;AAAA,UAILC,UAJK,UAILA,UAJK;AAAA,UAKLC,2BALK,UAKLA,2BALK;AAAA,UAMLC,qBANK,UAMLA,qBANK;;AAQP,aACE;AAAA;AAAA,UAAM,OAAO,KAAKL,KAAL,CAAWP,KAAxB;AACE,sCAAC,QAAD;AACE,iBAAO,KAAKD,KAAL,CAAWC,KADpB;AAEE,wBAAc,KAAKC,iBAFrB;AAGE,gCAAsB,KAAKM,KAAL,CAAWM,kBAHnC;AAIE,yCAA+B;AAAA,mBAC7BF,4BAA4BT,MAAMC,WAAN,CAAkBW,KAA9C,CAD6B;AAAA,WAJjC;AAME,qCAA2B,KAAKP,KAAL,CAAWQ,uBANxC;AAOE,qCAA2B,KAAKR,KAAL,CAAWS,uBAPxC;AAQE,oCAA0B,KAAKT,KAAL,CAAWU,sBARvC;AASE,wCAA8B,KAAKV,KAAL,CAAWW,0BAT3C;AAUE,mCAAyB;AAAA,mBAASN,sBAAsBV,KAAtB,CAAT;AAAA,WAV3B;AAWE,wBAAcO,YAXhB;AAYE,oBAAUD,QAZZ;AAaE,sBAAYE;AAbd;AADF,OADF;AAmBD;;;EArC0C,gBAAMS,S;;kBAA9BrB,e;;;AAwCrBA,gBAAgBsB,SAAhB;AAcEV,cAAY,oBAAUW,MAdxB;;AAmBEb,YAAU,oBAAUa,MAnBtB;;AAwBEZ,gBAAc,oBAAUY,MAxB1B;;AA6BER,sBAAoB,oBAAUS,IA7BhC;AA8BEX,+BAA6B,oBAAUW,IA9BzC;AA+BEP,2BAAyB,oBAAUO,IA/BrC;AAgCEN,2BAAyB,oBAAUM,IAhCrC;AAiCEL,0BAAwB,oBAAUK,IAjCpC;AAkCEJ,8BAA4B,oBAAUI,IAlCxC;AAmCEV,yBAAuB,oBAAUU;AAnCnC;;AAuCAxB,gBAAgByB,YAAhB,GAA+B;AAC7Bb,cAAY,qBADiB;AAE7BC,+BAA6B,uCAAM,CAAE,CAFR;AAG7BC,yBAAuB,iCAAM,CAAE;AAHF,CAA/B","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { requireNativeComponent, View, ViewPropTypes } from 'react-native';\n\nconst RNBanner = requireNativeComponent('RNAdMobDFP', PublisherBanner);\n\nexport default class PublisherBanner extends React.Component {\n  state = {\n    style: {},\n  };\n\n  _handleSizeChange = event => {\n    const { height, width } = event.nativeEvent;\n    this.setState({ style: { width, height } });\n  };\n\n  render() {\n    const {\n      adUnitID,\n      testDeviceID,\n      bannerSize,\n      didFailToReceiveAdWithError,\n      admobDispatchAppEvent,\n    } = this.props;\n    return (\n      <View style={this.props.style}>\n        <RNBanner\n          style={this.state.style}\n          onSizeChange={this._handleSizeChange}\n          onAdViewDidReceiveAd={this.props.adViewDidReceiveAd}\n          onDidFailToReceiveAdWithError={event =>\n            didFailToReceiveAdWithError(event.nativeEvent.error)}\n          onAdViewWillPresentScreen={this.props.adViewWillPresentScreen}\n          onAdViewWillDismissScreen={this.props.adViewWillDismissScreen}\n          onAdViewDidDismissScreen={this.props.adViewDidDismissScreen}\n          onAdViewWillLeaveApplication={this.props.adViewWillLeaveApplication}\n          onAdmobDispatchAppEvent={event => admobDispatchAppEvent(event)}\n          testDeviceID={testDeviceID}\n          adUnitID={adUnitID}\n          bannerSize={bannerSize}\n        />\n      </View>\n    );\n  }\n}\n\nPublisherBanner.propTypes = {\n  /**\n   * AdMob iOS library banner size constants\n   * (https://developers.google.com/admob/ios/banner)\n   * banner (320x50, Standard Banner for Phones and Tablets)\n   * largeBanner (320x100, Large Banner for Phones and Tablets)\n   * mediumRectangle (300x250, IAB Medium Rectangle for Phones and Tablets)\n   * fullBanner (468x60, IAB Full-Size Banner for Tablets)\n   * leaderboard (728x90, IAB Leaderboard for Tablets)\n   * smartBannerPortrait (Screen width x 32|50|90, Smart Banner for Phones and Tablets)\n   * smartBannerLandscape (Screen width x 32|50|90, Smart Banner for Phones and Tablets)\n   *\n   * banner is default\n   */\n  bannerSize: PropTypes.string,\n\n  /**\n   * AdMob ad unit ID\n   */\n  adUnitID: PropTypes.string,\n\n  /**\n   * Test device ID\n   */\n  testDeviceID: PropTypes.string,\n\n  /**\n   * AdMob iOS library events\n   */\n  adViewDidReceiveAd: PropTypes.func,\n  didFailToReceiveAdWithError: PropTypes.func,\n  adViewWillPresentScreen: PropTypes.func,\n  adViewWillDismissScreen: PropTypes.func,\n  adViewDidDismissScreen: PropTypes.func,\n  adViewWillLeaveApplication: PropTypes.func,\n  admobDispatchAppEvent: PropTypes.func,\n  ...ViewPropTypes,\n};\n\nPublisherBanner.defaultProps = {\n  bannerSize: 'smartBannerPortrait',\n  didFailToReceiveAdWithError: () => {},\n  admobDispatchAppEvent: () => {},\n};\n"]}]