["d7a943806670207057a7d150f3d8829807b3d6ae","8b07ca0c6cab8255ac08381c78a132ea0fa2cab2",["react-native"],[93],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/expo/src/Segment.js"],"names":["ExponentSegment","initialize","options","OS","initializeAndroid","androidWriteKey","initializeIOS","iosWriteKey","Error","writeKey","console","warn","identify","userId","identifyWithTraits","traits","reset","track","event","trackWithProperties","properties","screen","screenName","screenWithProperties","flush"],"mappings":";;;;AACA;;IAEQA,e,8BAAAA,e;kBAEO;AACbC,YADa,sBACFC,OADE,EAC2D;AACtE,QAAI,sBAASC,EAAT,KAAgB,SAApB,EAA+B;AAC7B,aAAOH,gBAAgBI,iBAAhB,CAAkCF,QAAQG,eAA1C,CAAP;AACD,KAFD,MAEO,IAAI,sBAASF,EAAT,KAAgB,KAApB,EAA2B;AAChC,aAAOH,gBAAgBM,aAAhB,CAA8BJ,QAAQK,WAAtC,CAAP;AACD,KAFM,MAEA;AACL,YAAM,IAAIC,KAAJ,uCAA+C,sBAASL,EAAxD,OAAN;AACD;AACF,GATY;AAWbG,eAXa,yBAWCG,QAXD,EAWmB;AAC9BC,YAAQC,IAAR,CACE,oHADF;AAGA,QAAI,sBAASR,EAAT,KAAgB,KAApB,EAA2B;AACzB,YAAM,IAAIK,KAAJ,sEACgE,sBAASL,EADzE,OAAN;AAGD;;AAED,WAAOH,gBAAgBM,aAAhB,CAA8BG,QAA9B,CAAP;AACD,GAtBY;AAwBbL,mBAxBa,6BAwBKK,QAxBL,EAwBuB;AAClCC,YAAQC,IAAR,CACE,wHADF;AAGA,QAAI,sBAASR,EAAT,KAAgB,SAApB,EAA+B;AAC7B,YAAM,IAAIK,KAAJ,8EACwE,sBAASL,EADjF,OAAN;AAGD;;AAED,WAAOH,gBAAgBI,iBAAhB,CAAkCK,QAAlC,CAAP;AACD,GAnCY;AAqCbG,UArCa,oBAqCJC,MArCI,EAqCY;AACvB,WAAOb,gBAAgBY,QAAhB,CAAyBC,MAAzB,CAAP;AACD,GAvCY;AAyCbC,oBAzCa,8BAyCMD,MAzCN,EAyCsBE,MAzCtB,EAyCiD;AAC5D,WAAOf,gBAAgBc,kBAAhB,CAAmCD,MAAnC,EAA2CE,MAA3C,CAAP;AACD,GA3CY;AA6CbC,OA7Ca,mBA6CL;AACN,WAAOhB,gBAAgBgB,KAAhB,EAAP;AACD,GA/CY;AAiDbC,OAjDa,iBAiDPC,KAjDO,EAiDQ;AACnB,WAAOlB,gBAAgBiB,KAAhB,CAAuBC,KAAvB,CAAP;AACD,GAnDY;AAqDbC,qBArDa,+BAqDOD,KArDP,EAqDsBE,UArDtB,EAqDqD;AAChE,WAAOpB,gBAAgBmB,mBAAhB,CAAoCD,KAApC,EAA2CE,UAA3C,CAAP;AACD,GAvDY;AAyDbC,QAzDa,kBAyDNC,UAzDM,EAyDc;AACzB,WAAOtB,gBAAgBqB,MAAhB,CAAuBC,UAAvB,CAAP;AACD,GA3DY;AA6DbC,sBA7Da,gCA6DQL,KA7DR,EA6DuBE,UA7DvB,EA6D2C;AACtD,WAAOpB,gBAAgBuB,oBAAhB,CAAqCL,KAArC,EAA4CE,UAA5C,CAAP;AACD,GA/DY;AAiEbI,OAjEa,mBAiEL;AACN,WAAOxB,gBAAgBwB,KAAhB,EAAP;AACD;AAnEY,C","sourcesContent":["// @flow\nimport { NativeModules, Platform } from 'react-native';\n\nconst { ExponentSegment } = NativeModules;\n\nexport default {\n  initialize(options: { androidWriteKey?: string, iosWriteKey?: string }) {\n    if (Platform.OS === 'android') {\n      return ExponentSegment.initializeAndroid(options.androidWriteKey);\n    } else if (Platform.OS === 'ios') {\n      return ExponentSegment.initializeIOS(options.iosWriteKey);\n    } else {\n      throw new Error(`Unable to initialize Segment on \\`${Platform.OS}\\``);\n    }\n  },\n\n  initializeIOS(writeKey: string) {\n    console.warn(\n      '`Segment.initializeIOS(writeKey)` is deprecated, use `Segment.initialize({androidWriteKey, iosWriteKey})` instead.'\n    );\n    if (Platform.OS !== 'ios') {\n      throw new Error(\n        `Expo.Segment.initializeIOS() should only be called on iOS, not \\`${Platform.OS}\\``\n      );\n    }\n\n    return ExponentSegment.initializeIOS(writeKey);\n  },\n\n  initializeAndroid(writeKey: string) {\n    console.warn(\n      '`Segment.initializeAndroid(writeKey)` is deprecated, use `Segment.initialize({androidWriteKey, iosWriteKey})` instead.'\n    );\n    if (Platform.OS !== 'android') {\n      throw new Error(\n        `Expo.Segment.initializeAndroid() should only be called on Android, not \\`${Platform.OS}\\``\n      );\n    }\n\n    return ExponentSegment.initializeAndroid(writeKey);\n  },\n\n  identify(userId: string) {\n    return ExponentSegment.identify(userId);\n  },\n\n  identifyWithTraits(userId: string, traits: { [string]: any }) {\n    return ExponentSegment.identifyWithTraits(userId, traits);\n  },\n\n  reset() {\n    return ExponentSegment.reset();\n  },\n\n  track(event: string) {\n    return ExponentSegment.track((event: string));\n  },\n\n  trackWithProperties(event: string, properties: { [string]: any }) {\n    return ExponentSegment.trackWithProperties(event, properties);\n  },\n\n  screen(screenName: string) {\n    return ExponentSegment.screen(screenName);\n  },\n\n  screenWithProperties(event: string, properties: string) {\n    return ExponentSegment.screenWithProperties(event, properties);\n  },\n\n  flush() {\n    return ExponentSegment.flush();\n  },\n};\n"]}]