["f87ee1578d092dc6b5f107d68138242364a68a38","114971c811bd3ac499243ab422dbe1cc30129262",["normalizeColor"],[45],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/StyleSheet/ColorPropType.js"],"names":["normalizeColor","require","colorPropType","isRequired","props","propName","componentName","location","propFullName","color","undefined","Error","ColorPropType","bind","module","exports"],"mappings":";AAUA;;AAEA,IAAIA,iBAAiBC,OAAjB,kBAAJ;;AAEA,IAAIC,gBAAgB,SAAhBA,aAAgB,CAASC,UAAT,EAAqBC,KAArB,EAA4BC,QAA5B,EAAsCC,aAAtC,EAAqDC,QAArD,EAA+DC,YAA/D,EAA6E;AAC/F,MAAIC,QAAQL,MAAMC,QAAN,CAAZ;AACA,MAAII,UAAUC,SAAV,IAAuBD,UAAU,IAArC,EAA2C;AACzC,QAAIN,UAAJ,EAAgB;AACd,aAAO,IAAIQ,KAAJ,CACL,cAAcJ,QAAd,GAAyB,IAAzB,IAAiCC,gBAAgBH,QAAjD,IACA,0BADA,GAC6BC,aAD7B,GAC6C,IAFxC,CAAP;AAID;AACD;AACD;;AAED,MAAI,OAAOG,KAAP,KAAiB,QAArB,EAA+B;AAI7B;AACD;;AAED,MAAIT,eAAeS,KAAf,MAA0B,IAA9B,EAAoC;AAClC,WAAO,IAAIE,KAAJ,CACL,aAAaJ,QAAb,GAAwB,IAAxB,IAAgCC,gBAAgBH,QAAhD,IACA,iBADA,GACoBC,aADpB,GACoC,KADpC,GAC4CG,KAD5C,GACoD,IADpD,mUADK,CAAP;AAgBD;AACF,CArCD;;AAuCA,IAAIG,gBAAgBV,cAAcW,IAAd,CAAmB,IAAnB,EAAyB,KAAzB,CAApB;AACAD,cAAcT,UAAd,GAA2BD,cAAcW,IAAd,CAAmB,IAAnB,EAAyB,IAAzB,CAA3B;;AAEAC,OAAOC,OAAP,GAAiBH,aAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ColorPropType\n */\n'use strict';\n\nvar normalizeColor = require('normalizeColor');\n\nvar colorPropType = function(isRequired, props, propName, componentName, location, propFullName) {\n  var color = props[propName];\n  if (color === undefined || color === null) {\n    if (isRequired) {\n      return new Error(\n        'Required ' + location + ' `' + (propFullName || propName) +\n        '` was not specified in `' + componentName + '`.'\n      );\n    }\n    return;\n  }\n\n  if (typeof color === 'number') {\n    // Developers should not use a number, but we are using the prop type\n    // both for user provided colors and for transformed ones. This isn't ideal\n    // and should be fixed but will do for now...\n    return;\n  }\n\n  if (normalizeColor(color) === null) {\n    return new Error(\n      'Invalid ' + location + ' `' + (propFullName || propName) +\n      '` supplied to `' + componentName + '`: ' + color + '\\n' +\n`Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n`);\n  }\n};\n\nvar ColorPropType = colorPropType.bind(null, false /* isRequired */);\nColorPropType.isRequired = colorPropType.bind(null, true /* isRequired */);\n\nmodule.exports = ColorPropType;\n"]}]