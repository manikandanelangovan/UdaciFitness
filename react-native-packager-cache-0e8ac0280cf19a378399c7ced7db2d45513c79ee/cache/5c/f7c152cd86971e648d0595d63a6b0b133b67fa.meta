["8a574d5f9d899dbcbb2efb5a3025eecbf02c84c7","7678144be5f1e3287a5ac51ddbee75b49229251d",["EventEmitter","Platform","RCTDeviceEventEmitter","fbjs/lib/invariant"],[43,83,132,182],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js"],"names":["EventEmitter","require","Platform","RCTDeviceEventEmitter","invariant","NativeEventEmitter","nativeModule","sharedSubscriber","OS","_nativeModule","eventType","listener","context","addListener","count","listeners","length","removeListeners","subscription","module","exports"],"mappings":";AAWA;;AAEA,IAAMA,eAAeC,OAAf,gBAAN;AACA,IAAMC,WAAWD,OAAX,YAAN;AACA,IAAME,wBAAwBF,OAAxB,yBAAN;AACA,IAAMG,YAAYH,OAAZ,sBAAN;;IAQMI,kB;;;AAGJ,8BAAYC,YAAZ,EAAkC;AAAA;;AAAA,oJAC1BH,sBAAsBI,gBADI;;AAEhC,QAAIL,SAASM,EAAT,KAAgB,KAApB,EAA2B;AACzBJ,gBAAUE,YAAV,EAAwB,+BAAxB;AACA,YAAKG,aAAL,GAAqBH,YAArB;AACD;AAL+B;AAMjC;;;;gCAEWI,S,EAAmBC,Q,EAAoBC,O,EAAuC;AACxF,UAAIV,SAASM,EAAT,KAAgB,KAApB,EAA2B;AACzB,aAAKC,aAAL,CAAmBI,WAAnB,CAA+BH,SAA/B;AACD;AACD,6JAAyBA,SAAzB,EAAoCC,QAApC,EAA8CC,OAA9C;AACD;;;uCAEkBF,S,EAAmB;AACpCN,gBAAUM,SAAV,EAAqB,iCAArB;AACA,UAAIR,SAASM,EAAT,KAAgB,KAApB,EAA2B;AACzB,YAAMM,QAAQ,KAAKC,SAAL,CAAeL,SAAf,EAA0BM,MAAxC;AACA,aAAKP,aAAL,CAAmBQ,eAAnB,CAAmCH,KAAnC;AACD;AACD,6JAAyBJ,SAAzB;AACD;;;uCAEkBQ,Y,EAAmC;AACpD,UAAIhB,SAASM,EAAT,KAAgB,KAApB,EAA2B;AACzB,aAAKC,aAAL,CAAmBQ,eAAnB,CAAmC,CAAnC;AACD;AACD,6JAAyBC,YAAzB;AACD;;;EAhC8BlB,Y;;AAmCjCmB,OAAOC,OAAP,GAAiBf,kBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule NativeEventEmitter\n * @flow\n */\n'use strict';\n\nconst EventEmitter = require('EventEmitter');\nconst Platform = require('Platform');\nconst RCTDeviceEventEmitter = require('RCTDeviceEventEmitter');\nconst invariant = require('fbjs/lib/invariant');\n\nimport type EmitterSubscription from 'EmitterSubscription';\n\n/**\n * Abstract base class for implementing event-emitting modules. This implements\n * a subset of the standard EventEmitter node module API.\n */\nclass NativeEventEmitter extends EventEmitter {\n  _nativeModule: Object;\n\n  constructor(nativeModule: Object) {\n    super(RCTDeviceEventEmitter.sharedSubscriber);\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule, 'Native module cannot be null.');\n      this._nativeModule = nativeModule;\n    }\n  }\n\n  addListener(eventType: string, listener: Function, context: ?Object): EmitterSubscription {\n    if (Platform.OS === 'ios') {\n      this._nativeModule.addListener(eventType);\n    }\n    return super.addListener(eventType, listener, context);\n  }\n\n  removeAllListeners(eventType: string) {\n    invariant(eventType, 'eventType argument is required.');\n    if (Platform.OS === 'ios') {\n      const count = this.listeners(eventType).length;\n      this._nativeModule.removeListeners(count);\n    }\n    super.removeAllListeners(eventType);\n  }\n\n  removeSubscription(subscription: EmitterSubscription) {\n    if (Platform.OS === 'ios') {\n      this._nativeModule.removeListeners(1);\n    }\n    super.removeSubscription(subscription);\n  }\n}\n\nmodule.exports = NativeEventEmitter;\n"]}]