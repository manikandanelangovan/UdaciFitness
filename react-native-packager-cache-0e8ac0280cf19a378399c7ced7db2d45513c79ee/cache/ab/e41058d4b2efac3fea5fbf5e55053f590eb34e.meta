["8248f1d5cbe675a2a64e29bc1d7e0990d56b3250","1b9b6ca4e6c79efb476db4c1edb9a50c2dae443d",["./isSymbol"],[23],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/lodash/_toKey.js"],"names":["isSymbol","require","INFINITY","toKey","value","result","module","exports"],"mappings":"AAAA,IAAIA,WAAWC,QAAQ,YAAR,CAAf;;AAGA,IAAIC,WAAW,IAAI,CAAnB;;AASA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,MAAI,OAAOA,KAAP,IAAgB,QAAhB,IAA4BJ,SAASI,KAAT,CAAhC,EAAiD;AAC/C,WAAOA,KAAP;AACD;AACD,MAAIC,SAAUD,QAAQ,EAAtB;AACA,SAAQC,UAAU,GAAV,IAAkB,IAAID,KAAL,IAAe,CAACF,QAAlC,GAA8C,IAA9C,GAAqDG,MAA5D;AACD;;AAEDC,OAAOC,OAAP,GAAiBJ,KAAjB","sourcesContent":["var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n"]}]