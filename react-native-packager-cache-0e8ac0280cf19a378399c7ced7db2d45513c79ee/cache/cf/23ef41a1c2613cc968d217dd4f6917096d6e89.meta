["9de4dc9a3630c0533e53f9e2ef39c92a99a7efc7","49367028af3c43a22a16bb1807e7b79bbbb9d042",["fbjs/lib/invariant"],[40],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Utilities/MatrixMath.js"],"names":["invariant","require","MatrixMath","createIdentityMatrix","createCopy","m","createOrthographic","left","right","bottom","top","near","far","a","b","c","tx","ty","tz","createFrustum","r_width","r_height","r_depth","x","y","A","B","C","D","createPerspective","fovInRadians","aspect","h","Math","tan","createTranslate2d","mat","reuseTranslate2dCommand","matrixCommand","reuseTranslate3dCommand","z","createScale","factor","reuseScaleCommand","reuseScale3dCommand","reusePerspectiveCommand","p","reuseScaleXCommand","reuseScaleYCommand","reuseScaleZCommand","reuseRotateXCommand","radians","cos","sin","reuseRotateYCommand","amount","reuseRotateZCommand","createRotateZ","reuseSkewXCommand","reuseSkewYCommand","multiplyInto","out","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","determinant","matrix","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","inverse","det","transpose","multiplyVectorByMatrix","v","vx","vy","vz","vw","v3Length","sqrt","v3Normalize","vector","im","v3Dot","v3Combine","aScale","bScale","v3Cross","quaternionToDegreesXYZ","q","row","qx","qy","qz","qw","qw2","qx2","qy2","qz2","test","unit","conv","PI","atan2","roundTo3Places","asin","n","arr","toString","split","round","decomposeMatrix","transformMatrix","length","perspective","quaternion","scale","skew","translation","perspectiveMatrix","i","push","j","value","rightHandSide","inversePerspectiveMatrix","transposedInversePerspectiveMatrix","pdum3","max","rotationDegrees","rotate","rotateX","rotateY","scaleX","scaleY","translateX","translateY","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule MatrixMath\n * @noflow\n */\n/* eslint-disable space-infix-ops */\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Memory conservative (mutative) matrix math utilities. Uses \"command\"\n * matrices, which are reusable.\n */\nvar MatrixMath = {\n  createIdentityMatrix: function() {\n    return [\n      1,0,0,0,\n      0,1,0,0,\n      0,0,1,0,\n      0,0,0,1\n    ];\n  },\n\n  createCopy: function(m) {\n    return [\n      m[0],  m[1],  m[2],  m[3],\n      m[4],  m[5],  m[6],  m[7],\n      m[8],  m[9],  m[10], m[11],\n      m[12], m[13], m[14], m[15],\n    ];\n  },\n\n  createOrthographic: function(left, right, bottom, top, near, far) {\n    var a = 2 / (right - left);\n    var b = 2 / (top - bottom);\n    var c = -2 / (far - near);\n\n    var tx = -(right + left) / (right - left);\n    var ty = -(top + bottom) / (top - bottom);\n    var tz = -(far + near) / (far - near);\n\n    return [\n        a,  0,  0,  0,\n        0,  b,  0,  0,\n        0,  0,  c,  0,\n        tx, ty, tz, 1\n    ];\n  },\n\n  createFrustum: function(left, right, bottom, top, near, far) {\n    var r_width  = 1 / (right - left);\n    var r_height = 1 / (top - bottom);\n    var r_depth  = 1 / (near - far);\n    var x = 2 * (near * r_width);\n    var y = 2 * (near * r_height);\n    var A = (right + left) * r_width;\n    var B = (top + bottom) * r_height;\n    var C = (far + near) * r_depth;\n    var D = 2 * (far * near * r_depth);\n    return [\n      x, 0, 0, 0,\n      0, y, 0, 0,\n      A, B, C,-1,\n      0, 0, D, 0,\n    ];\n  },\n\n  /**\n   * This create a perspective projection towards negative z\n   * Clipping the z range of [-near, -far]\n   *\n   * @param fovInRadians - field of view in randians\n   */\n  createPerspective: function(fovInRadians, aspect, near, far) {\n    var h = 1 / Math.tan(fovInRadians / 2);\n    var r_depth  = 1 / (near - far);\n    var C = (far + near) * r_depth;\n    var D = 2 * (far * near * r_depth);\n    return [\n      h/aspect, 0, 0, 0,\n      0, h, 0, 0,\n      0, 0, C,-1,\n      0, 0, D, 0,\n    ];\n  },\n\n  createTranslate2d: function(x, y) {\n    var mat = MatrixMath.createIdentityMatrix();\n    MatrixMath.reuseTranslate2dCommand(mat, x, y);\n    return mat;\n  },\n\n  reuseTranslate2dCommand: function(matrixCommand, x, y) {\n    matrixCommand[12] = x;\n    matrixCommand[13] = y;\n  },\n\n  reuseTranslate3dCommand: function(matrixCommand, x, y, z) {\n    matrixCommand[12] = x;\n    matrixCommand[13] = y;\n    matrixCommand[14] = z;\n  },\n\n  createScale: function(factor) {\n    var mat = MatrixMath.createIdentityMatrix();\n    MatrixMath.reuseScaleCommand(mat, factor);\n    return mat;\n  },\n\n  reuseScaleCommand: function(matrixCommand, factor) {\n    matrixCommand[0] = factor;\n    matrixCommand[5] = factor;\n  },\n\n  reuseScale3dCommand: function(matrixCommand, x, y, z) {\n    matrixCommand[0] = x;\n    matrixCommand[5] = y;\n    matrixCommand[10] = z;\n  },\n\n  reusePerspectiveCommand: function(matrixCommand, p) {\n    matrixCommand[11] = -1 / p;\n  },\n\n  reuseScaleXCommand(matrixCommand, factor) {\n    matrixCommand[0] = factor;\n  },\n\n  reuseScaleYCommand(matrixCommand, factor) {\n    matrixCommand[5] = factor;\n  },\n\n  reuseScaleZCommand(matrixCommand, factor) {\n    matrixCommand[10] = factor;\n  },\n\n  reuseRotateXCommand: function(matrixCommand, radians) {\n    matrixCommand[5] = Math.cos(radians);\n    matrixCommand[6] = Math.sin(radians);\n    matrixCommand[9] = -Math.sin(radians);\n    matrixCommand[10] = Math.cos(radians);\n  },\n\n  reuseRotateYCommand: function(matrixCommand, amount) {\n    matrixCommand[0] = Math.cos(amount);\n    matrixCommand[2] = -Math.sin(amount);\n    matrixCommand[8] = Math.sin(amount);\n    matrixCommand[10] = Math.cos(amount);\n  },\n\n  // http://www.w3.org/TR/css3-transforms/#recomposing-to-a-2d-matrix\n  reuseRotateZCommand: function(matrixCommand, radians) {\n    matrixCommand[0] = Math.cos(radians);\n    matrixCommand[1] = Math.sin(radians);\n    matrixCommand[4] = -Math.sin(radians);\n    matrixCommand[5] = Math.cos(radians);\n  },\n\n  createRotateZ: function(radians) {\n    var mat = MatrixMath.createIdentityMatrix();\n    MatrixMath.reuseRotateZCommand(mat, radians);\n    return mat;\n  },\n\n  reuseSkewXCommand: function(matrixCommand, radians) {\n    matrixCommand[4] = Math.tan(radians);\n  },\n\n  reuseSkewYCommand: function(matrixCommand, radians) {\n    matrixCommand[1] = Math.tan(radians);\n  },\n\n  multiplyInto: function(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n      a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n      a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n      a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n  },\n\n  determinant(matrix: Array<number>): number {\n    var [\n      m00, m01, m02, m03,\n      m10, m11, m12, m13,\n      m20, m21, m22, m23,\n      m30, m31, m32, m33\n    ] = matrix;\n    return (\n      m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 -\n      m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 +\n      m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 -\n      m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 +\n      m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 -\n      m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 +\n      m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 -\n      m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 +\n      m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 -\n      m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 +\n      m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 -\n      m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33\n    );\n  },\n\n  /**\n   * Inverse of a matrix. Multiplying by the inverse is used in matrix math\n   * instead of division.\n   *\n   * Formula from:\n   * http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n   */\n  inverse(matrix: Array<number>): Array<number> {\n    var det = MatrixMath.determinant(matrix);\n    if (!det) {\n      return matrix;\n    }\n    var [\n      m00, m01, m02, m03,\n      m10, m11, m12, m13,\n      m20, m21, m22, m23,\n      m30, m31, m32, m33\n    ] = matrix;\n    return [\n      (m12*m23*m31 - m13*m22*m31 + m13*m21*m32 - m11*m23*m32 - m12*m21*m33 + m11*m22*m33) / det,\n      (m03*m22*m31 - m02*m23*m31 - m03*m21*m32 + m01*m23*m32 + m02*m21*m33 - m01*m22*m33) / det,\n      (m02*m13*m31 - m03*m12*m31 + m03*m11*m32 - m01*m13*m32 - m02*m11*m33 + m01*m12*m33) / det,\n      (m03*m12*m21 - m02*m13*m21 - m03*m11*m22 + m01*m13*m22 + m02*m11*m23 - m01*m12*m23) / det,\n      (m13*m22*m30 - m12*m23*m30 - m13*m20*m32 + m10*m23*m32 + m12*m20*m33 - m10*m22*m33) / det,\n      (m02*m23*m30 - m03*m22*m30 + m03*m20*m32 - m00*m23*m32 - m02*m20*m33 + m00*m22*m33) / det,\n      (m03*m12*m30 - m02*m13*m30 - m03*m10*m32 + m00*m13*m32 + m02*m10*m33 - m00*m12*m33) / det,\n      (m02*m13*m20 - m03*m12*m20 + m03*m10*m22 - m00*m13*m22 - m02*m10*m23 + m00*m12*m23) / det,\n      (m11*m23*m30 - m13*m21*m30 + m13*m20*m31 - m10*m23*m31 - m11*m20*m33 + m10*m21*m33) / det,\n      (m03*m21*m30 - m01*m23*m30 - m03*m20*m31 + m00*m23*m31 + m01*m20*m33 - m00*m21*m33) / det,\n      (m01*m13*m30 - m03*m11*m30 + m03*m10*m31 - m00*m13*m31 - m01*m10*m33 + m00*m11*m33) / det,\n      (m03*m11*m20 - m01*m13*m20 - m03*m10*m21 + m00*m13*m21 + m01*m10*m23 - m00*m11*m23) / det,\n      (m12*m21*m30 - m11*m22*m30 - m12*m20*m31 + m10*m22*m31 + m11*m20*m32 - m10*m21*m32) / det,\n      (m01*m22*m30 - m02*m21*m30 + m02*m20*m31 - m00*m22*m31 - m01*m20*m32 + m00*m21*m32) / det,\n      (m02*m11*m30 - m01*m12*m30 - m02*m10*m31 + m00*m12*m31 + m01*m10*m32 - m00*m11*m32) / det,\n      (m01*m12*m20 - m02*m11*m20 + m02*m10*m21 - m00*m12*m21 - m01*m10*m22 + m00*m11*m22) / det\n    ];\n  },\n\n  /**\n   * Turns columns into rows and rows into columns.\n   */\n   transpose(m: Array<number>): Array<number> {\n    return [\n      m[0], m[4], m[8],  m[12],\n      m[1], m[5], m[9],  m[13],\n      m[2], m[6], m[10], m[14],\n      m[3], m[7], m[11], m[15]\n    ];\n  },\n\n  /**\n   * Based on: http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c\n   */\n  multiplyVectorByMatrix(\n    v: Array<number>,\n    m: Array<number>\n  ): Array<number> {\n    var [vx, vy, vz, vw] = v;\n    return [\n      vx * m[0] + vy * m[4] + vz * m[8]  + vw * m[12],\n      vx * m[1] + vy * m[5] + vz * m[9]  + vw * m[13],\n      vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14],\n      vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]\n    ];\n  },\n\n  /**\n   * From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js\n   */\n  v3Length(a: Array<number>): number {\n    return Math.sqrt(a[0]*a[0] + a[1]*a[1] + a[2]*a[2]);\n  },\n\n  /**\n   * Based on: https://code.google.com/p/webgl-mjs/source/browse/mjs.js\n   */\n   v3Normalize(\n     vector: Array<number>,\n     v3Length: number\n    ): Array<number> {\n    var im = 1 / (v3Length || MatrixMath.v3Length(vector));\n    return [\n      vector[0] * im,\n      vector[1] * im,\n      vector[2] * im\n    ];\n  },\n\n  /**\n   * The dot product of a and b, two 3-element vectors.\n   * From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js\n   */\n  v3Dot(a, b) {\n    return a[0] * b[0] +\n           a[1] * b[1] +\n           a[2] * b[2];\n  },\n\n  /**\n   * From:\n   * http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp\n   */\n  v3Combine(\n    a: Array<number>,\n    b: Array<number>,\n    aScale: number,\n    bScale: number\n  ): Array<number> {\n    return [\n      aScale * a[0] + bScale * b[0],\n      aScale * a[1] + bScale * b[1],\n      aScale * a[2] + bScale * b[2]\n    ];\n  },\n\n  /**\n   * From:\n   * http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp\n   */\n  v3Cross(a: Array<number>, b: Array<number>): Array<number> {\n    return [\n      a[1] * b[2] - a[2] * b[1],\n      a[2] * b[0] - a[0] * b[2],\n      a[0] * b[1] - a[1] * b[0]\n    ];\n  },\n\n  /**\n   * Based on:\n   * http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/\n   * and:\n   * http://quat.zachbennett.com/\n   *\n   * Note that this rounds degrees to the thousandth of a degree, due to\n   * floating point errors in the creation of the quaternion.\n   *\n   * Also note that this expects the qw value to be last, not first.\n   *\n   * Also, when researching this, remember that:\n   * yaw   === heading            === z-axis\n   * pitch === elevation/attitude === y-axis\n   * roll  === bank               === x-axis\n   */\n  quaternionToDegreesXYZ(q: Array<number>, matrix, row): Array<number> {\n    var [qx, qy, qz, qw] = q;\n    var qw2 = qw * qw;\n    var qx2 = qx * qx;\n    var qy2 = qy * qy;\n    var qz2 = qz * qz;\n    var test = qx * qy + qz * qw;\n    var unit = qw2 + qx2 + qy2 + qz2;\n    var conv = 180 / Math.PI;\n\n    if (test > 0.49999 * unit) {\n      return [0, 2 * Math.atan2(qx, qw) * conv, 90];\n    }\n    if (test < -0.49999 * unit) {\n      return [0, -2 * Math.atan2(qx, qw) * conv, -90];\n    }\n\n    return [\n      MatrixMath.roundTo3Places(\n        Math.atan2(2*qx*qw-2*qy*qz,1-2*qx2-2*qz2) * conv\n      ),\n      MatrixMath.roundTo3Places(\n        Math.atan2(2*qy*qw-2*qx*qz,1-2*qy2-2*qz2) * conv\n      ),\n      MatrixMath.roundTo3Places(\n        Math.asin(2*qx*qy+2*qz*qw) * conv\n      )\n    ];\n  },\n\n  /**\n   * Based on:\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n   */\n  roundTo3Places(n: number): number {\n    var arr = n.toString().split('e');\n    return Math.round(arr[0] + 'e' + (arr[1] ? (+arr[1] - 3) : 3)) * 0.001;\n  },\n\n  /**\n   * Decompose a matrix into separate transform values, for use on platforms\n   * where applying a precomposed matrix is not possible, and transforms are\n   * applied in an inflexible ordering (e.g. Android).\n   *\n   * Implementation based on\n   * http://www.w3.org/TR/css3-transforms/#decomposing-a-2d-matrix\n   * http://www.w3.org/TR/css3-transforms/#decomposing-a-3d-matrix\n   * which was based on\n   * http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c\n   */\n  decomposeMatrix(transformMatrix: Array<number>): ?Object {\n\n    invariant(\n      transformMatrix.length === 16,\n      'Matrix decomposition needs a list of 3d matrix values, received %s',\n      transformMatrix\n    );\n\n    // output values\n    var perspective = [];\n    var quaternion = [];\n    var scale = [];\n    var skew = [];\n    var translation = [];\n\n    // create normalized, 2d array matrix\n    // and normalized 1d array perspectiveMatrix with redefined 4th column\n    if (!transformMatrix[15]) {\n      return;\n    }\n    var matrix = [];\n    var perspectiveMatrix = [];\n    for (var i = 0; i < 4; i++) {\n      matrix.push([]);\n      for (var j = 0; j < 4; j++) {\n        var value = transformMatrix[(i * 4) + j] / transformMatrix[15];\n        matrix[i].push(value);\n        perspectiveMatrix.push(j === 3 ? 0 : value);\n      }\n    }\n    perspectiveMatrix[15] = 1;\n\n    // test for singularity of upper 3x3 part of the perspective matrix\n    if (!MatrixMath.determinant(perspectiveMatrix)) {\n      return;\n    }\n\n    // isolate perspective\n    if (matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0) {\n      // rightHandSide is the right hand side of the equation.\n      // rightHandSide is a vector, or point in 3d space relative to the origin.\n      var rightHandSide = [\n        matrix[0][3],\n        matrix[1][3],\n        matrix[2][3],\n        matrix[3][3]\n      ];\n\n      // Solve the equation by inverting perspectiveMatrix and multiplying\n      // rightHandSide by the inverse.\n      var inversePerspectiveMatrix = MatrixMath.inverse(\n        perspectiveMatrix\n      );\n      var transposedInversePerspectiveMatrix = MatrixMath.transpose(\n        inversePerspectiveMatrix\n      );\n      var perspective = MatrixMath.multiplyVectorByMatrix(\n        rightHandSide,\n        transposedInversePerspectiveMatrix\n      );\n    } else {\n      // no perspective\n      perspective[0] = perspective[1] = perspective[2] = 0;\n      perspective[3] = 1;\n    }\n\n    // translation is simple\n    for (var i = 0; i < 3; i++) {\n      translation[i] = matrix[3][i];\n    }\n\n    // Now get scale and shear.\n    // 'row' is a 3 element array of 3 component vectors\n    var row = [];\n    for (i = 0; i < 3; i++) {\n      row[i] = [\n        matrix[i][0],\n        matrix[i][1],\n        matrix[i][2]\n      ];\n    }\n\n    // Compute X scale factor and normalize first row.\n    scale[0] = MatrixMath.v3Length(row[0]);\n    row[0] = MatrixMath.v3Normalize(row[0], scale[0]);\n\n    // Compute XY shear factor and make 2nd row orthogonal to 1st.\n    skew[0] = MatrixMath.v3Dot(row[0], row[1]);\n    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);\n\n    // Compute XY shear factor and make 2nd row orthogonal to 1st.\n    skew[0] = MatrixMath.v3Dot(row[0], row[1]);\n    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);\n\n    // Now, compute Y scale and normalize 2nd row.\n    scale[1] = MatrixMath.v3Length(row[1]);\n    row[1] = MatrixMath.v3Normalize(row[1], scale[1]);\n    skew[0] /= scale[1];\n\n    // Compute XZ and YZ shears, orthogonalize 3rd row\n    skew[1] = MatrixMath.v3Dot(row[0], row[2]);\n    row[2] = MatrixMath.v3Combine(row[2], row[0], 1.0, -skew[1]);\n    skew[2] = MatrixMath.v3Dot(row[1], row[2]);\n    row[2] = MatrixMath.v3Combine(row[2], row[1], 1.0, -skew[2]);\n\n    // Next, get Z scale and normalize 3rd row.\n    scale[2] = MatrixMath.v3Length(row[2]);\n    row[2] = MatrixMath.v3Normalize(row[2], scale[2]);\n    skew[1] /= scale[2];\n    skew[2] /= scale[2];\n\n    // At this point, the matrix (in rows) is orthonormal.\n    // Check for a coordinate system flip.  If the determinant\n    // is -1, then negate the matrix and the scaling factors.\n    var pdum3 = MatrixMath.v3Cross(row[1], row[2]);\n    if (MatrixMath.v3Dot(row[0], pdum3) < 0) {\n      for (i = 0; i < 3; i++) {\n        scale[i] *= -1;\n        row[i][0] *= -1;\n        row[i][1] *= -1;\n        row[i][2] *= -1;\n      }\n    }\n\n    // Now, get the rotations out\n    quaternion[0] =\n      0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));\n    quaternion[1] =\n      0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));\n    quaternion[2] =\n      0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));\n    quaternion[3] =\n      0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));\n\n    if (row[2][1] > row[1][2]) {\n      quaternion[0] = -quaternion[0];\n    }\n    if (row[0][2] > row[2][0]) {\n      quaternion[1] = -quaternion[1];\n    }\n    if (row[1][0] > row[0][1]) {\n      quaternion[2] = -quaternion[2];\n    }\n\n    // correct for occasional, weird Euler synonyms for 2d rotation\n    var rotationDegrees;\n    if (\n      quaternion[0] < 0.001 && quaternion[0] >= 0 &&\n      quaternion[1] < 0.001 && quaternion[1] >= 0\n    ) {\n      // this is a 2d rotation on the z-axis\n      rotationDegrees = [0, 0, MatrixMath.roundTo3Places(\n        Math.atan2(row[0][1], row[0][0]) * 180 / Math.PI\n      )];\n    } else {\n      rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion, matrix, row);\n    }\n\n    // expose both base data and convenience names\n    return {\n      rotationDegrees,\n      perspective,\n      quaternion,\n      scale,\n      skew,\n      translation,\n\n      rotate: rotationDegrees[2],\n      rotateX: rotationDegrees[0],\n      rotateY: rotationDegrees[1],\n      scaleX: scale[0],\n      scaleY: scale[1],\n      translateX: translation[0],\n      translateY: translation[1],\n    };\n  },\n\n};\n\nmodule.exports = MatrixMath;\n"]}]