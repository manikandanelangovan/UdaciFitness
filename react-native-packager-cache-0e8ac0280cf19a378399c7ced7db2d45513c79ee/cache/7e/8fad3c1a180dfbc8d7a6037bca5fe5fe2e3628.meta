["10db8757425102d3b34a2cd713ae7bfd20924175","0215a73224621bcc27517f631e7928d0ab4fdd63",[],[],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js"],"names":["deepDiffer","one","two","constructor","Array","isArray","len","length","ii","key","twoKey","undefined","module","exports"],"mappings":";AAWA;;AAKA,IAAIA,aAAa,SAAbA,UAAa,CAASC,GAAT,EAAmBC,GAAnB,EAAmC;AAClD,MAAID,QAAQC,GAAZ,EAAiB;AAEf,WAAO,KAAP;AACD;AACD,MAAK,OAAOD,GAAP,KAAe,UAAhB,IAAgC,OAAOC,GAAP,KAAe,UAAnD,EAAgE;AAE9D,WAAO,KAAP;AACD;AACD,MAAK,OAAOD,GAAP,KAAe,QAAhB,IAA8BA,QAAQ,IAA1C,EAAiD;AAE/C,WAAOA,QAAQC,GAAf;AACD;AACD,MAAK,OAAOA,GAAP,KAAe,QAAhB,IAA8BA,QAAQ,IAA1C,EAAiD;AAG/C,WAAO,IAAP;AACD;AACD,MAAID,IAAIE,WAAJ,KAAoBD,IAAIC,WAA5B,EAAyC;AACvC,WAAO,IAAP;AACD;AACD,MAAIC,MAAMC,OAAN,CAAcJ,GAAd,CAAJ,EAAwB;AAEtB,QAAIK,MAAML,IAAIM,MAAd;AACA,QAAIL,IAAIK,MAAJ,KAAeD,GAAnB,EAAwB;AACtB,aAAO,IAAP;AACD;AACD,SAAK,IAAIE,KAAK,CAAd,EAAiBA,KAAKF,GAAtB,EAA2BE,IAA3B,EAAiC;AAC/B,UAAIR,WAAWC,IAAIO,EAAJ,CAAX,EAAoBN,IAAIM,EAAJ,CAApB,CAAJ,EAAkC;AAChC,eAAO,IAAP;AACD;AACF;AACF,GAXD,MAWO;AACL,SAAK,IAAIC,GAAT,IAAgBR,GAAhB,EAAqB;AACnB,UAAID,WAAWC,IAAIQ,GAAJ,CAAX,EAAqBP,IAAIO,GAAJ,CAArB,CAAJ,EAAoC;AAClC,eAAO,IAAP;AACD;AACF;AACD,SAAK,IAAIC,MAAT,IAAmBR,GAAnB,EAAwB;AAGtB,UAAID,IAAIS,MAAJ,MAAgBC,SAAhB,IAA6BT,IAAIQ,MAAJ,MAAgBC,SAAjD,EAA4D;AAC1D,eAAO,IAAP;AACD;AACF;AACF;AACD,SAAO,KAAP;AACD,CA/CD;;AAiDAC,OAAOC,OAAP,GAAiBb,UAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule deepDiffer\n * @flow\n */\n'use strict';\n\n/*\n * @returns {bool} true if different, false if equal\n */\nvar deepDiffer = function(one: any, two: any): bool {\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n  if ((typeof one === 'function') && (typeof two === 'function')) {\n    // We consider all functions equal\n    return false;\n  }\n  if ((typeof one !== 'object') || (one === null)) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n  if ((typeof two !== 'object') || (two === null)) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    var len = one.length;\n    if (two.length !== len) {\n      return true;\n    }\n    for (var ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii])) {\n        return true;\n      }\n    }\n  } else {\n    for (var key in one) {\n      if (deepDiffer(one[key], two[key])) {\n        return true;\n      }\n    }\n    for (var twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nmodule.exports = deepDiffer;\n"]}]