["23bd380ff849faa1d0f270b4e9dd008262b5937d","14a453d87cbb364d8a1fe65b6c9063fcab49ee41",["mixInEventEmitter"],[49],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/vendor/document/selection/DocumentSelectionState.js"],"names":["mixInEventEmitter","require","DocumentSelectionState","anchor","focus","_anchorOffset","_focusOffset","_hasFocus","emit","maxLength","update","Math","min","max","start","end","hasFocus","getStartOffset","getEndOffset","module","exports"],"mappings":";;AAYA;;AAEA,IAAIA,oBAAoBC,OAApB,qBAAJ;;IAWMC,sB;AAKJ,kCAAYC,MAAZ,EAAoBC,KAApB,EAA2B;AAAA;;AACzB,SAAKC,aAAL,GAAqBF,MAArB;AACA,SAAKG,YAAL,GAAoBF,KAApB;AACA,SAAKG,SAAL,GAAiB,KAAjB;AACD;;;;2BASMJ,M,EAAQC,K,EAAO;AACpB,UAAI,KAAKC,aAAL,KAAuBF,MAAvB,IAAiC,KAAKG,YAAL,KAAsBF,KAA3D,EAAkE;AAChE,aAAKC,aAAL,GAAqBF,MAArB;AACA,aAAKG,YAAL,GAAoBF,KAApB;AACA,aAAKI,IAAL,CAAU,QAAV;AACD;AACF;;;oCAQeC,S,EAAW;AACzB,WAAKC,MAAL,CACEC,KAAKC,GAAL,CAAS,KAAKP,aAAd,EAA6BI,SAA7B,CADF,EAEEE,KAAKC,GAAL,CAAS,KAAKN,YAAd,EAA4BG,SAA5B,CAFF;AAID;;;4BAEO;AACN,UAAI,CAAC,KAAKF,SAAV,EAAqB;AACnB,aAAKA,SAAL,GAAiB,IAAjB;AACA,aAAKC,IAAL,CAAU,OAAV;AACD;AACF;;;2BAEM;AACL,UAAI,KAAKD,SAAT,EAAoB;AAClB,aAAKA,SAAL,GAAiB,KAAjB;AACA,aAAKC,IAAL,CAAU,MAAV;AACD;AACF;;;+BAKU;AACT,aAAO,KAAKD,SAAZ;AACD;;;kCAKa;AACZ,aAAO,KAAKF,aAAL,KAAuB,KAAKC,YAAnC;AACD;;;iCAKY;AACX,aAAO,KAAKD,aAAL,GAAqB,KAAKC,YAAjC;AACD;;;sCAKiB;AAChB,aAAO,KAAKC,SAAL,GAAiB,KAAKF,aAAtB,GAAsC,IAA7C;AACD;;;qCAKgB;AACf,aAAO,KAAKE,SAAL,GAAiB,KAAKD,YAAtB,GAAqC,IAA5C;AACD;;;qCAKgB;AACf,aACE,KAAKC,SAAL,GAAiBI,KAAKC,GAAL,CAAS,KAAKP,aAAd,EAA6B,KAAKC,YAAlC,CAAjB,GAAmE,IADrE;AAGD;;;mCAKc;AACb,aACE,KAAKC,SAAL,GAAiBI,KAAKE,GAAL,CAAS,KAAKR,aAAd,EAA6B,KAAKC,YAAlC,CAAjB,GAAmE,IADrE;AAGD;;;6BAOQQ,K,EAAOC,G,EAAK;AACnB,aACE,KAAKC,QAAL,MACA,KAAKC,cAAL,MAAyBF,GADzB,IACgCD,SAAS,KAAKI,YAAL,EAF3C;AAID;;;;;AAGHlB,kBAAkBE,sBAAlB,EAA0C;AACxC,UAAQ,IADgC;AAExC,WAAS,IAF+B;AAGxC,YAAU;AAH8B,CAA1C;;AAMAiB,OAAOC,OAAP,GAAiBlB,sBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DocumentSelectionState\n * @typechecks\n */\n\n'use strict';\n\nvar mixInEventEmitter = require('mixInEventEmitter');\n\n/**\n * DocumentSelectionState is responsible for maintaining selection information\n * for a document.\n *\n * It is intended for use by AbstractTextEditor-based components for\n * identifying the appropriate start/end positions to modify the\n * DocumentContent, and for programatically setting browser selection when\n * components re-render.\n */\nclass DocumentSelectionState {\n  /**\n   * @param {number} anchor\n   * @param {number} focus\n   */\n  constructor(anchor, focus) {\n    this._anchorOffset = anchor;\n    this._focusOffset = focus;\n    this._hasFocus = false;\n  }\n\n  /**\n   * Apply an update to the state. If either offset value has changed,\n   * set the values and emit the `change` event. Otherwise no-op.\n   *\n   * @param {number} anchor\n   * @param {number} focus\n   */\n  update(anchor, focus) {\n    if (this._anchorOffset !== anchor || this._focusOffset !== focus) {\n      this._anchorOffset = anchor;\n      this._focusOffset = focus;\n      this.emit('update');\n    }\n  }\n\n  /**\n   * Given a max text length, constrain our selection offsets to ensure\n   * that the selection remains strictly within the text range.\n   *\n   * @param {number} maxLength\n   */\n  constrainLength(maxLength) {\n    this.update(\n      Math.min(this._anchorOffset, maxLength),\n      Math.min(this._focusOffset, maxLength)\n    );\n  }\n\n  focus() {\n    if (!this._hasFocus) {\n      this._hasFocus = true;\n      this.emit('focus');\n    }\n  }\n\n  blur() {\n    if (this._hasFocus) {\n      this._hasFocus = false;\n      this.emit('blur');\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasFocus() {\n    return this._hasFocus;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCollapsed() {\n    return this._anchorOffset === this._focusOffset;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isBackward() {\n    return this._anchorOffset > this._focusOffset;\n  }\n\n  /**\n   * @return {?number}\n   */\n  getAnchorOffset() {\n    return this._hasFocus ? this._anchorOffset : null;\n  }\n\n  /**\n   * @return {?number}\n   */\n  getFocusOffset() {\n    return this._hasFocus ? this._focusOffset : null;\n  }\n\n  /**\n   * @return {?number}\n   */\n  getStartOffset() {\n    return (\n      this._hasFocus ? Math.min(this._anchorOffset, this._focusOffset) : null\n    );\n  }\n\n  /**\n   * @return {?number}\n   */\n  getEndOffset() {\n    return (\n      this._hasFocus ? Math.max(this._anchorOffset, this._focusOffset) : null\n    );\n  }\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   * @return {boolean}\n   */\n  overlaps(start, end) {\n    return (\n      this.hasFocus() &&\n      this.getStartOffset() <= end && start <= this.getEndOffset()\n    );\n  }\n}\n\nmixInEventEmitter(DocumentSelectionState, {\n  'blur': true,\n  'focus': true,\n  'update': true\n});\n\nmodule.exports = DocumentSelectionState;\n"]}]