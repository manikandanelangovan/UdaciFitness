["f7fffe8c89068c21ca524ae6df4b77bdace892f3","31afe102bc41a63f760e3ef2bf51ad50acc0d54e",["./AnimatedEvent","./nodes/AnimatedAddition","./nodes/AnimatedDiffClamp","./nodes/AnimatedDivision","./nodes/AnimatedInterpolation","./nodes/AnimatedModulo","./nodes/AnimatedMultiplication","./nodes/AnimatedNode","./nodes/AnimatedProps","./nodes/AnimatedTracking","./nodes/AnimatedValue","./nodes/AnimatedValueXY","./animations/DecayAnimation","./animations/SpringAnimation","./animations/TimingAnimation","./createAnimatedComponent"],[39,187,248,309,374,437,501,563,616,673,730,786,843,905,968,1040],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Animated/src/AnimatedImplementation.js"],"names":["require","AnimatedEvent","attachNativeEvent","AnimatedAddition","AnimatedDiffClamp","AnimatedDivision","AnimatedInterpolation","AnimatedModulo","AnimatedMultiplication","AnimatedNode","AnimatedProps","AnimatedTracking","AnimatedValue","AnimatedValueXY","DecayAnimation","SpringAnimation","TimingAnimation","createAnimatedComponent","add","a","b","divide","multiply","modulo","modulus","diffClamp","min","max","_combineCallbacks","callback","config","onComplete","maybeVectorAnim","value","anim","configX","configY","key","x","y","undefined","aX","aY","parallel","stopTogether","spring","start","animatedValue","configuration","singleValue","singleConfig","stopTracking","toValue","track","animate","stop","stopAnimation","reset","resetAnimation","_startNativeLoop","iterations","_isUsingNativeDriver","useNativeDriver","timing","decay","sequence","animations","current","result","finished","length","forEach","animation","idx","Error","doneCount","hasEnded","cb","endResult","delay","time","duration","stagger","map","i","loop","isFinished","iterationsSoFar","restart","forkEvent","event","listener","__addListener","unforkEvent","__removeListener","argMapping","animatedEvent","__isNative","__getHandler","module","exports","Value","ValueXY","Interpolation","Node","__PropsOnlyForTests"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AnimatedImplementation\n * @flow\n * @format\n * @preventMunge\n */\n'use strict';\n\nconst {AnimatedEvent, attachNativeEvent} = require('./AnimatedEvent');\nconst AnimatedAddition = require('./nodes/AnimatedAddition');\nconst AnimatedDiffClamp = require('./nodes/AnimatedDiffClamp');\nconst AnimatedDivision = require('./nodes/AnimatedDivision');\nconst AnimatedInterpolation = require('./nodes/AnimatedInterpolation');\nconst AnimatedModulo = require('./nodes/AnimatedModulo');\nconst AnimatedMultiplication = require('./nodes/AnimatedMultiplication');\nconst AnimatedNode = require('./nodes/AnimatedNode');\nconst AnimatedProps = require('./nodes/AnimatedProps');\nconst AnimatedTracking = require('./nodes/AnimatedTracking');\nconst AnimatedValue = require('./nodes/AnimatedValue');\nconst AnimatedValueXY = require('./nodes/AnimatedValueXY');\nconst DecayAnimation = require('./animations/DecayAnimation');\nconst SpringAnimation = require('./animations/SpringAnimation');\nconst TimingAnimation = require('./animations/TimingAnimation');\n\nconst createAnimatedComponent = require('./createAnimatedComponent');\n\nimport type {\n  AnimationConfig,\n  EndCallback,\n  EndResult,\n} from './animations/Animation';\nimport type {TimingAnimationConfig} from './animations/TimingAnimation';\nimport type {DecayAnimationConfig} from './animations/DecayAnimation';\nimport type {SpringAnimationConfig} from './animations/SpringAnimation';\nimport type {Mapping, EventConfig} from './AnimatedEvent';\n\ntype CompositeAnimation = {\n  start: (callback?: ?EndCallback) => void,\n  stop: () => void,\n  reset: () => void,\n  _startNativeLoop: (iterations?: number) => void,\n  _isUsingNativeDriver: () => boolean,\n};\n\nconst add = function(\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedAddition {\n  return new AnimatedAddition(a, b);\n};\n\nconst divide = function(\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedDivision {\n  return new AnimatedDivision(a, b);\n};\n\nconst multiply = function(\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedMultiplication {\n  return new AnimatedMultiplication(a, b);\n};\n\nconst modulo = function(a: AnimatedNode, modulus: number): AnimatedModulo {\n  return new AnimatedModulo(a, modulus);\n};\n\nconst diffClamp = function(\n  a: AnimatedNode,\n  min: number,\n  max: number,\n): AnimatedDiffClamp {\n  return new AnimatedDiffClamp(a, min, max);\n};\n\nconst _combineCallbacks = function(\n  callback: ?EndCallback,\n  config: AnimationConfig,\n) {\n  if (callback && config.onComplete) {\n    return (...args) => {\n      config.onComplete && config.onComplete(...args);\n      callback && callback(...args);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\n\nconst maybeVectorAnim = function(\n  value: AnimatedValue | AnimatedValueXY,\n  config: Object,\n  anim: (value: AnimatedValue, config: Object) => CompositeAnimation,\n): ?CompositeAnimation {\n  if (value instanceof AnimatedValueXY) {\n    const configX = {...config};\n    const configY = {...config};\n    for (const key in config) {\n      const {x, y} = config[key];\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n    const aX = anim((value: AnimatedValueXY).x, configX);\n    const aY = anim((value: AnimatedValueXY).y, configY);\n    // We use `stopTogether: false` here because otherwise tracking will break\n    // because the second animation will get stopped before it can update.\n    return parallel([aX, aY], {stopTogether: false});\n  }\n  return null;\n};\n\nconst spring = function(\n  value: AnimatedValue | AnimatedValueXY,\n  config: SpringAnimationConfig,\n): CompositeAnimation {\n  const start = function(\n    animatedValue: AnimatedValue | AnimatedValueXY,\n    configuration: SpringAnimationConfig,\n    callback?: ?EndCallback,\n  ): void {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue: any = animatedValue;\n    const singleConfig: any = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(\n        new AnimatedTracking(\n          singleValue,\n          configuration.toValue,\n          SpringAnimation,\n          singleConfig,\n          callback,\n        ),\n      );\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n  return (\n    maybeVectorAnim(value, config, spring) || {\n      start: function(callback?: ?EndCallback): void {\n        start(value, config, callback);\n      },\n\n      stop: function(): void {\n        value.stopAnimation();\n      },\n\n      reset: function(): void {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function(iterations?: number): void {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function(): boolean {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst timing = function(\n  value: AnimatedValue | AnimatedValueXY,\n  config: TimingAnimationConfig,\n): CompositeAnimation {\n  const start = function(\n    animatedValue: AnimatedValue | AnimatedValueXY,\n    configuration: TimingAnimationConfig,\n    callback?: ?EndCallback,\n  ): void {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue: any = animatedValue;\n    const singleConfig: any = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(\n        new AnimatedTracking(\n          singleValue,\n          configuration.toValue,\n          TimingAnimation,\n          singleConfig,\n          callback,\n        ),\n      );\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n\n  return (\n    maybeVectorAnim(value, config, timing) || {\n      start: function(callback?: ?EndCallback): void {\n        start(value, config, callback);\n      },\n\n      stop: function(): void {\n        value.stopAnimation();\n      },\n\n      reset: function(): void {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function(iterations?: number): void {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function(): boolean {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst decay = function(\n  value: AnimatedValue | AnimatedValueXY,\n  config: DecayAnimationConfig,\n): CompositeAnimation {\n  const start = function(\n    animatedValue: AnimatedValue | AnimatedValueXY,\n    configuration: DecayAnimationConfig,\n    callback?: ?EndCallback,\n  ): void {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue: any = animatedValue;\n    const singleConfig: any = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n\n  return (\n    maybeVectorAnim(value, config, decay) || {\n      start: function(callback?: ?EndCallback): void {\n        start(value, config, callback);\n      },\n\n      stop: function(): void {\n        value.stopAnimation();\n      },\n\n      reset: function(): void {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function(iterations?: number): void {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function(): boolean {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst sequence = function(\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  let current = 0;\n  return {\n    start: function(callback?: ?EndCallback) {\n      const onComplete = function(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n\n        current++;\n\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n\n        animations[current].start(onComplete);\n      };\n\n      if (animations.length === 0) {\n        callback && callback({finished: true});\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n\n    stop: function() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n\n    reset: function() {\n      animations.forEach((animation, idx) => {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n\n    _startNativeLoop: function() {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.sequence animations',\n      );\n    },\n\n    _isUsingNativeDriver: function(): boolean {\n      return false;\n    },\n  };\n};\n\ntype ParallelConfig = {\n  stopTogether?: boolean, // If one is stopped, stop all.  default: true\n};\nconst parallel = function(\n  animations: Array<CompositeAnimation>,\n  config?: ?ParallelConfig,\n): CompositeAnimation {\n  let doneCount = 0;\n  // Make sure we only call stop() at most once for each animation\n  const hasEnded = {};\n  const stopTogether = !(config && config.stopTogether === false);\n\n  const result = {\n    start: function(callback?: ?EndCallback) {\n      if (doneCount === animations.length) {\n        callback && callback({finished: true});\n        return;\n      }\n\n      animations.forEach((animation, idx) => {\n        const cb = function(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n\n        if (!animation) {\n          cb({finished: true});\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n\n    stop: function(): void {\n      animations.forEach((animation, idx) => {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n\n    reset: function(): void {\n      animations.forEach((animation, idx) => {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n\n    _startNativeLoop: function() {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.parallel animations',\n      );\n    },\n\n    _isUsingNativeDriver: function(): boolean {\n      return false;\n    },\n  };\n\n  return result;\n};\n\nconst delay = function(time: number): CompositeAnimation {\n  // Would be nice to make a specialized implementation\n  return timing(new AnimatedValue(0), {toValue: 0, delay: time, duration: 0});\n};\n\nconst stagger = function(\n  time: number,\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return parallel(\n    animations.map((animation, i) => {\n      return sequence([delay(time * i), animation]);\n    }),\n  );\n};\n\ntype LoopAnimationConfig = {iterations: number};\n\nconst loop = function(\n  animation: CompositeAnimation,\n  {iterations = -1}: LoopAnimationConfig = {},\n): CompositeAnimation {\n  let isFinished = false;\n  let iterationsSoFar = 0;\n  return {\n    start: function(callback?: ?EndCallback) {\n      const restart = function(result: EndResult = {finished: true}): void {\n        if (\n          isFinished ||\n          iterationsSoFar === iterations ||\n          result.finished === false\n        ) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          animation.reset();\n          animation.start(restart);\n        }\n      };\n      if (!animation || iterations === 0) {\n        callback && callback({finished: true});\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart(); // Start looping recursively on the js thread\n        }\n      }\n    },\n\n    stop: function(): void {\n      isFinished = true;\n      animation.stop();\n    },\n\n    reset: function(): void {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n\n    _startNativeLoop: function() {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.loop animations',\n      );\n    },\n\n    _isUsingNativeDriver: function(): boolean {\n      return animation._isUsingNativeDriver();\n    },\n  };\n};\n\nfunction forkEvent(\n  event: ?AnimatedEvent | ?Function,\n  listener: Function,\n): AnimatedEvent | Function {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n    return event;\n  } else {\n    return (...args) => {\n      typeof event === 'function' && event(...args);\n      listener(...args);\n    };\n  }\n}\n\nfunction unforkEvent(\n  event: ?AnimatedEvent | ?Function,\n  listener: Function,\n): void {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\n\nconst event = function(argMapping: Array<?Mapping>, config?: EventConfig): any {\n  const animatedEvent = new AnimatedEvent(argMapping, config);\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n\n/**\n * The `Animated` library is designed to make animations fluid, powerful, and\n * easy to build and maintain. `Animated` focuses on declarative relationships\n * between inputs and outputs, with configurable transforms in between, and\n * simple `start`/`stop` methods to control time-based animation execution.\n *\n * The simplest workflow for creating an animation is to create an\n * `Animated.Value`, hook it up to one or more style attributes of an animated\n * component, and then drive updates via animations using `Animated.timing()`:\n *\n * ```javascript\n * Animated.timing(                            // Animate value over time\n *   this.state.fadeAnim,                      // The value to drive\n *   {\n *     toValue: 1,                             // Animate to final value of 1\n *   }\n * ).start();                                  // Start the animation\n * ```\n *\n * Refer to the [Animations](docs/animations.html#animated-api) guide to see\n * additional examples of `Animated` in action.\n *\n * ## Overview\n *\n * There are two value types you can use with `Animated`:\n *\n * - [`Animated.Value()`](docs/animated.html#value) for single values\n * - [`Animated.ValueXY()`](docs/animated.html#valuexy) for vectors\n *\n * `Animated.Value` can bind to style properties or other props, and can be\n * interpolated as well. A single `Animated.Value` can drive any number of\n * properties.\n *\n * ### Configuring animations\n *\n * `Animated` provides three types of animation types. Each animation type\n * provides a particular animation curve that controls how your values animate\n * from their initial value to the final value:\n *\n * - [`Animated.decay()`](docs/animated.html#decay) starts with an initial\n *   velocity and gradually slows to a stop.\n * - [`Animated.spring()`](docs/animated.html#spring) provides a simple\n *   spring physics model.\n * - [`Animated.timing()`](docs/animated.html#timing) animates a value over time\n *   using [easing functions](docs/easing.html).\n *\n * In most cases, you will be using `timing()`. By default, it uses a symmetric\n * easeInOut curve that conveys the gradual acceleration of an object to full\n * speed and concludes by gradually decelerating to a stop.\n *\n * ### Working with animations\n *\n * Animations are started by calling `start()` on your animation. `start()`\n * takes a completion callback that will be called when the animation is done.\n * If the animation finished running normally, the completion callback will be\n * invoked with `{finished: true}`. If the animation is done because `stop()`\n * was called on it before it could finish (e.g. because it was interrupted by a\n * gesture or another animation), then it will receive `{finished: false}`.\n *\n * ### Using the native driver\n *\n * By using the native driver, we send everything about the animation to native\n * before starting the animation, allowing native code to perform the animation\n * on the UI thread without having to go through the bridge on every frame.\n * Once the animation has started, the JS thread can be blocked without\n * affecting the animation.\n *\n * You can use the native driver by specifying `useNativeDriver: true` in your\n * animation configuration. See the\n * [Animations](docs/animations.html#using-the-native-driver) guide to learn\n * more.\n *\n * ### Animatable components\n *\n * Only animatable components can be animated. These special components do the\n * magic of binding the animated values to the properties, and do targeted\n * native updates to avoid the cost of the react render and reconciliation\n * process on every frame. They also handle cleanup on unmount so they are safe\n * by default.\n *\n * - [`createAnimatedComponent()`](docs/animated.html#createanimatedcomponent)\n *   can be used to make a component animatable.\n *\n * `Animated` exports the following animatable components using the above\n * wrapper:\n *\n * - `Animated.Image`\n * - `Animated.ScrollView`\n * - `Animated.Text`\n * - `Animated.View`\n *\n * ### Composing animations\n *\n * Animations can also be combined in complex ways using composition functions:\n *\n * - [`Animated.delay()`](docs/animated.html#delay) starts an animation after\n *   a given delay.\n * - [`Animated.parallel()`](docs/animated.html#parallel) starts a number of\n *   animations at the same time.\n * - [`Animated.sequence()`](docs/animated.html#sequence) starts the animations\n *   in order, waiting for each to complete before starting the next.\n * - [`Animated.stagger()`](docs/animated.html#stagger) starts animations in\n *   order and in parallel, but with successive delays.\n *\n * Animations can also be chained together simply by setting the `toValue` of\n * one animation to be another `Animated.Value`. See\n * [Tracking dynamic values](docs/animations.html#tracking-dynamic-values) in\n * the Animations guide.\n *\n * By default, if one animation is stopped or interrupted, then all other\n * animations in the group are also stopped.\n *\n * ### Combining animated values\n *\n * You can combine two animated values via addition, multiplication, division,\n * or modulo to make a new animated value:\n *\n * - [`Animated.add()`](docs/animated.html#add)\n * - [`Animated.divide()`](docs/animated.html#divide)\n * - [`Animated.modulo()`](docs/animated.html#modulo)\n * - [`Animated.multiply()`](docs/animated.html#multiply)\n *\n * ### Interpolation\n *\n * The `interpolate()` function allows input ranges to map to different output\n * ranges. By default, it will extrapolate the curve beyond the ranges given,\n * but you can also have it clamp the output value. It uses lineal interpolation\n * by default but also supports easing functions.\n *\n * - [`interpolate()`](docs/animated.html#interpolate)\n *\n * Read more about interpolation in the\n * [Animation](docs/animations.html#interpolation) guide.\n *\n * ### Handling gestures and other events\n *\n * Gestures, like panning or scrolling, and other events can map directly to\n * animated values using `Animated.event()`. This is done with a structured map\n * syntax so that values can be extracted from complex event objects. The first\n * level is an array to allow mapping across multiple args, and that array\n * contains nested objects.\n *\n * - [`Animated.event()`](docs/animated.html#event)\n *\n * For example, when working with horizontal scrolling gestures, you would do\n * the following in order to map `event.nativeEvent.contentOffset.x` to\n * `scrollX` (an `Animated.Value`):\n *\n * ```javascript\n *  onScroll={Animated.event(\n *    // scrollX = e.nativeEvent.contentOffset.x\n *    [{ nativeEvent: {\n *         contentOffset: {\n *           x: scrollX\n *         }\n *       }\n *     }]\n *  )}\n * ```\n *\n */\nmodule.exports = {\n  /**\n   * Standard value class for driving animations.  Typically initialized with\n   * `new Animated.Value(0);`\n   *\n   * See also [`AnimatedValue`](docs/animated.html#animatedvalue).\n   */\n  Value: AnimatedValue,\n  /**\n   * 2D value class for driving 2D animations, such as pan gestures.\n   *\n   * See also [`AnimatedValueXY`](docs/animated.html#animatedvaluexy).\n   */\n  ValueXY: AnimatedValueXY,\n  /**\n   * exported to use the Interpolation type in flow\n   *\n   * See also [`AnimatedInterpolation`](docs/animated.html#animatedinterpolation).\n   */\n  Interpolation: AnimatedInterpolation,\n  /**\n   * Exported for ease of type checking. All animated values derive from this class.\n   */\n  Node: AnimatedNode,\n\n  /**\n   * Animates a value from an initial velocity to zero based on a decay\n   * coefficient.\n   *\n   * Config is an object that may have the following options:\n   *\n   *   - `velocity`: Initial velocity.  Required.\n   *   - `deceleration`: Rate of decay.  Default 0.997.\n   *   - `useNativeDriver`: Uses the native driver when true. Default false.\n   */\n  decay,\n  /**\n   * Animates a value along a timed easing curve. The\n   * [`Easing`](docs/easing.html) module has tons of predefined curves, or you\n   * can use your own function.\n   *\n   * Config is an object that may have the following options:\n   *\n   *   - `duration`: Length of animation (milliseconds).  Default 500.\n   *   - `easing`: Easing function to define curve.\n   *     Default is `Easing.inOut(Easing.ease)`.\n   *   - `delay`: Start the animation after delay (milliseconds).  Default 0.\n   *   - `useNativeDriver`: Uses the native driver when true. Default false.\n   */\n  timing,\n  /**\n   * Spring animation based on Rebound and\n   * [Origami](https://facebook.github.io/origami/).  Tracks velocity state to\n   * create fluid motions as the `toValue` updates, and can be chained together.\n   *\n   * Config is an object that may have the following options. Note that you can\n   * only define bounciness/speed or tension/friction but not both:\n   *\n   *   - `friction`: Controls \"bounciness\"/overshoot.  Default 7.\n   *   - `tension`: Controls speed.  Default 40.\n   *   - `speed`: Controls speed of the animation. Default 12.\n   *   - `bounciness`: Controls bounciness. Default 8.\n   *   - `useNativeDriver`: Uses the native driver when true. Default false.\n   */\n  spring,\n\n  /**\n   * Creates a new Animated value composed from two Animated values added\n   * together.\n   */\n  add,\n\n  /**\n   * Creates a new Animated value composed by dividing the first Animated value\n   * by the second Animated value.\n   */\n  divide,\n\n  /**\n   * Creates a new Animated value composed from two Animated values multiplied\n   * together.\n   */\n  multiply,\n\n  /**\n   * Creates a new Animated value that is the (non-negative) modulo of the\n   * provided Animated value\n   */\n  modulo,\n\n  /**\n   * Create a new Animated value that is limited between 2 values. It uses the\n   * difference between the last value so even if the value is far from the bounds\n   * it will start changing when the value starts getting closer again.\n   * (`value = clamp(value + diff, min, max)`).\n   *\n   * This is useful with scroll events, for example, to show the navbar when\n   * scrolling up and to hide it when scrolling down.\n   */\n  diffClamp,\n\n  /**\n   * Starts an animation after the given delay.\n   */\n  delay,\n  /**\n   * Starts an array of animations in order, waiting for each to complete\n   * before starting the next.  If the current running animation is stopped, no\n   * following animations will be started.\n   */\n  sequence,\n  /**\n   * Starts an array of animations all at the same time.  By default, if one\n   * of the animations is stopped, they will all be stopped.  You can override\n   * this with the `stopTogether` flag.\n   */\n  parallel,\n  /**\n   * Array of animations may run in parallel (overlap), but are started in\n   * sequence with successive delays.  Nice for doing trailing effects.\n   */\n  stagger,\n  /**\n  * Loops a given animation continuously, so that each time it reaches the\n  * end, it resets and begins again from the start. Can specify number of\n  * times to loop using the key 'iterations' in the config. Will loop without\n  * blocking the UI thread if the child animation is set to 'useNativeDriver'.\n  */\n  loop,\n\n  /**\n   * Takes an array of mappings and extracts values from each arg accordingly,\n   * then calls `setValue` on the mapped outputs.  e.g.\n   *\n   *```javascript\n   *  onScroll={Animated.event(\n   *    [{nativeEvent: {contentOffset: {x: this._scrollX}}}],\n   *    {listener},          // Optional async listener\n   *  )}\n   *  ...\n   *  onPanResponderMove: Animated.event([\n   *    null,                // raw event arg ignored\n   *    {dx: this._panX},    // gestureState arg\n   *  ]),\n   *```\n   *\n   * Config is an object that may have the following options:\n   *\n   *   - `listener`: Optional async listener.\n   *   - `useNativeDriver`: Uses the native driver when true. Default false.\n   */\n  event,\n\n  /**\n   * Make any React component Animatable.  Used to create `Animated.View`, etc.\n   */\n  createAnimatedComponent,\n\n  /**\n   * Imperative API to attach an animated value to an event on a view. Prefer using\n   * `Animated.event` with `useNativeDrive: true` if possible.\n   */\n  attachNativeEvent,\n\n  /**\n   * Advanced imperative API for snooping on animated events that are passed in through props. Use\n   * values directly where possible.\n   */\n  forkEvent,\n  unforkEvent,\n\n  __PropsOnlyForTests: AnimatedProps,\n};\n"]}]