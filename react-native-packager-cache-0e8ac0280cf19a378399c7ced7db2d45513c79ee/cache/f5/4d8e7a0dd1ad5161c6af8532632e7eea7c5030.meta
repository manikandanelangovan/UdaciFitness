["645f3b37124f961327b53682768bd7157a03feea","f5d1d81fae8618686531992854ae7da23e6c5c40",[],[],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/polyfills/Object.es6.js"],"names":["Object","assign","target","sources","__DEV__","TypeError","nextIndex","arguments","length","nextSource","key","hasOwnProperty","prototype","call"],"mappings":";;AAmBAA,OAAOC,MAAP,GAAgB,UAASC,MAAT,EAAiBC,OAAjB,EAA0B;AACxC,MAAIC,OAAJ,EAAa;AACX,QAAIF,UAAU,IAAd,EAAoB;AAClB,YAAM,IAAIG,SAAJ,CAAc,kDAAd,CAAN;AACD;AACD,QAAI,OAAOH,MAAP,KAAkB,QAAlB,IAA8B,OAAOA,MAAP,KAAkB,UAApD,EAAgE;AAC9D,YAAM,IAAIG,SAAJ,CACJ,iEACA,kEAFI,CAAN;AAID;AACF;;AAED,OAAK,IAAIC,YAAY,CAArB,EAAwBA,YAAYC,UAAUC,MAA9C,EAAsDF,WAAtD,EAAmE;AACjE,QAAIG,aAAaF,UAAUD,SAAV,CAAjB;AACA,QAAIG,cAAc,IAAlB,EAAwB;AACtB;AACD;;AAED,QAAIL,OAAJ,EAAa;AACX,UAAI,OAAOK,UAAP,KAAsB,QAAtB,IACA,OAAOA,UAAP,KAAsB,UAD1B,EACsC;AACpC,cAAM,IAAIJ,SAAJ,CACJ,mEACA,kEAFI,CAAN;AAID;AACF;;AAMD,SAAK,IAAIK,GAAT,IAAgBD,UAAhB,EAA4B;AAC1B,UAAIL,OAAJ,EAAa;AACX,YAAIO,iBAAiBX,OAAOY,SAAP,CAAiBD,cAAtC;AACA,YAAI,CAACA,eAAeE,IAAf,CAAoBJ,UAApB,EAAgCC,GAAhC,CAAL,EAA2C;AACzC,gBAAM,IAAIL,SAAJ,CACJ,gEACA,kEADA,GAEA,sEAFA,GAGA,kEAJI,CAAN;AAMD;AACF;AACDH,aAAOQ,GAAP,IAAcD,WAAWC,GAAX,CAAd;AACD;AACF;;AAED,SAAOR,MAAP;AACD,CAlDD","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Object.es6\n * @polyfill\n * @nolint\n */\n\n/* eslint-disable strict */\n\n// WARNING: This is an optimized version that fails on hasOwnProperty checks\n// and non objects. It's not spec-compliant. It's a perf optimization.\n// This is only needed for iOS 8 and current Android JSC.\n\nObject.assign = function(target, sources) {\n  if (__DEV__) {\n    if (target == null) {\n      throw new TypeError('Object.assign target cannot be null or undefined');\n    }\n    if (typeof target !== 'object' && typeof target !== 'function') {\n      throw new TypeError(\n        'In this environment the target of assign MUST be an object. ' +\n        'This error is a performance optimization and not spec compliant.'\n      );\n    }\n  }\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    if (__DEV__) {\n      if (typeof nextSource !== 'object' &&\n          typeof nextSource !== 'function') {\n        throw new TypeError(\n          'In this environment the sources for assign MUST be an object. ' +\n          'This error is a performance optimization and not spec compliant.'\n        );\n      }\n    }\n\n    // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects.\n\n    for (var key in nextSource) {\n      if (__DEV__) {\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        if (!hasOwnProperty.call(nextSource, key)) {\n          throw new TypeError(\n            'One of the sources for assign has an enumerable key on the ' +\n            'prototype chain. Are you trying to assign a prototype property? ' +\n            'We don\\'t allow it, as this is an edge case that we do not support. ' +\n            'This error is a performance optimization and not spec compliant.'\n          );\n        }\n      }\n      target[key] = nextSource[key];\n    }\n  }\n\n  return target;\n};\n"]}]