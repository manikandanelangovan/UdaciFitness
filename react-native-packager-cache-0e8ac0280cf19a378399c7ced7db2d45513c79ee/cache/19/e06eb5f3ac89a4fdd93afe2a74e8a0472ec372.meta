["aabda7c4743926666926b4a88a1967e00deb071c","8a70638fb10c2dd6d76d0c93eccb2f9a00fc7676",["react","prop-types","react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js","../lib/extract/extractText","../lib/props","../lib/attributes","../lib/extract/extractProps","./Shape"],[157,252,382,598,722,766,817,945],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native-svg/elements/Text.js"],"names":["isInAParentText","bool","props","root","ele","x","y","displayName","propTypes","dx","dy","textAnchor","oneOf","childContextTypes","setNativeProps","RNSVGText","validAttributes","uiViewClassName"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;0CAiBsB;AACd,mBAAO;AACHA,iCAAiB;AADd,aAAP;AAGH;;;0CAEiB;AACd,mBAAO;AACHA,iCAAiB,oBAAUC;AADxB,aAAP;AAGH;;;iCAMQ;AAAA;;AACL,gBAAMC,QAAQ,KAAKA,KAAnB;;AAEA,mBAAO,8BAAC,SAAD;AACH,qBAAK,kBAAO;AAAC,2BAAKC,IAAL,GAAYC,GAAZ;AAAiB;AAD3B,eAEC,qDACGF,KADH;AAEAG,mBAAG,IAFH;AAGAC,mBAAG;AAHH,gBAID,IAJC,CAFD,EAOC,2BAAYJ,KAAZ,EAAmB,IAAnB,CAPD,EAAP;AASH;;;2BA1CMK,W,GAAc,M,SAEdC,S;AAGHC,yB;AACAC,yB;AACAC,gBAAY,oBAAUC,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,CAAhB;WAGTC,iB,GAAoB;AACvBb,qBAAiB,oBAAUC;AADJ,C;;;SAgB3Ba,c,GAAiB,YAAa;AAAA;;AAC1B,wBAAKX,IAAL,EAAUW,cAAV;AACH,K;;;;;;AAiBL,IAAMC,YAAY,+CAAgC;AAC9CC,+CAD8C;AAE9CC,qBAAiB;AAF6B,CAAhC,CAAlB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport createReactNativeComponentClass from 'react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js';\nimport extractText from '../lib/extract/extractText';\nimport {numberProp, pathProps, fontProps} from '../lib/props';\nimport {TextAttributes} from '../lib/attributes';\nimport extractProps from '../lib/extract/extractProps';\nimport Shape from './Shape';\n\nexport default class extends Shape {\n    static displayName = 'Text';\n\n    static propTypes = {\n        ...pathProps,\n        ...fontProps,\n        dx: numberProp,\n        dy: numberProp,\n        textAnchor: PropTypes.oneOf(['start', 'middle', 'end'])\n    };\n\n    static childContextTypes = {\n        isInAParentText: PropTypes.bool\n    };\n\n    getChildContext() {\n        return {\n            isInAParentText: true\n        };\n    };\n\n    getContextTypes() {\n        return {\n            isInAParentText: PropTypes.bool\n        };\n    };\n\n    setNativeProps = (...args) => {\n        this.root.setNativeProps(...args);\n    };\n\n    render() {\n        const props = this.props;\n\n        return <RNSVGText\n            ref={ele => {this.root = ele;}}\n            {...extractProps({\n                ...props,\n                x: null,\n                y: null\n            }, this)}\n            {...extractText(props, true)}\n        />;\n    }\n}\n\nconst RNSVGText = createReactNativeComponentClass({\n    validAttributes: TextAttributes,\n    uiViewClassName: 'RNSVGText'\n});\n"]}]