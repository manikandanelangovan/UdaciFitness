["d6f777c03c00afd8c15589374413df8471f3c196","6db687d4cd9211903056dcccaae3fbe5c587d860",["event-target-shim","RCTNetworking","base64-js","fbjs/lib/invariant","fbjs/lib/warning"],[63,113,153,191,236],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Network/XMLHttpRequest.js"],"names":["EventTarget","require","RCTNetworking","base64","invariant","warning","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","DONE","SUPPORTED_RESPONSE_TYPES","arraybuffer","global","ArrayBuffer","blob","Blob","document","json","text","REQUEST_EVENTS","XHR_EVENTS","concat","XMLHttpRequestEventTarget","XMLHttpRequest","interceptor","_interceptor","readyState","status","timeout","withCredentials","upload","_aborted","_hasError","_method","_response","_url","_timedOut","_trackingName","_incrementalEvents","_reset","responseHeaders","undefined","responseURL","_requestId","_cachedResponse","_headers","_responseType","_sent","_lowerCaseResponseHeaders","_clearSubscriptions","requestId","requestSent","progress","total","dispatchEvent","type","lengthComputable","loaded","setResponseHeaders","setReadyState","responseReceived","response","dataReceived","responseText","__didReceiveDataProgress","error","timeOutError","loadingFailed","loadingFinished","length","_subscriptions","forEach","sub","remove","headers","Object","keys","map","headerName","join","header","value","toLowerCase","Error","String","trackingName","method","url","async","toUpperCase","data","incrementalEvents","onreadystatechange","onprogress","push","addListener","args","__didUploadProgress","__didReceiveResponse","__didReceiveData","__didReceiveIncrementalData","__didCompleteResponse","nativeResponseType","sendRequest","__didCreateRequest","bind","abortRequest","reduce","lcaseHeaders","newState","listener","responseType","hasOwnProperty","toByteArray","buffer","getResponseHeader","JSON","parse","_","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule XMLHttpRequest\n * @flow\n */\n'use strict';\n\nconst EventTarget = require('event-target-shim');\nconst RCTNetworking = require('RCTNetworking');\n\nconst base64 = require('base64-js');\nconst invariant = require('fbjs/lib/invariant');\nconst warning = require('fbjs/lib/warning');\n\ntype ResponseType = '' | 'arraybuffer' | 'blob' | 'document' | 'json' | 'text';\ntype Response = ?Object | string;\n\ntype XHRInterceptor = {\n  requestSent(\n    id: number,\n    url: string,\n    method: string,\n    headers: Object\n  ): void,\n  responseReceived(\n    id: number,\n    url: string,\n    status: number,\n    headers: Object\n  ): void,\n  dataReceived(\n    id: number,\n    data: string\n  ): void,\n  loadingFinished(\n    id: number,\n    encodedDataLength: number\n  ): void,\n  loadingFailed(\n    id: number,\n    error: string\n  ): void,\n};\n\nconst UNSENT = 0;\nconst OPENED = 1;\nconst HEADERS_RECEIVED = 2;\nconst LOADING = 3;\nconst DONE = 4;\n\nconst SUPPORTED_RESPONSE_TYPES = {\n  arraybuffer: typeof global.ArrayBuffer === 'function',\n  blob: typeof global.Blob === 'function',\n  document: false,\n  json: true,\n  text: true,\n  '': true,\n};\n\nconst REQUEST_EVENTS = [\n  'abort',\n  'error',\n  'load',\n  'loadstart',\n  'progress',\n  'timeout',\n  'loadend',\n];\n\nconst XHR_EVENTS = REQUEST_EVENTS.concat('readystatechange');\n\nclass XMLHttpRequestEventTarget extends EventTarget(...REQUEST_EVENTS) {\n  onload: ?Function;\n  onloadstart: ?Function;\n  onprogress: ?Function;\n  ontimeout: ?Function;\n  onerror: ?Function;\n  onabort: ?Function;\n  onloadend: ?Function;\n}\n\n/**\n * Shared base for platform-specific XMLHttpRequest implementations.\n */\nclass XMLHttpRequest extends EventTarget(...XHR_EVENTS) {\n\n  static UNSENT: number = UNSENT;\n  static OPENED: number = OPENED;\n  static HEADERS_RECEIVED: number = HEADERS_RECEIVED;\n  static LOADING: number = LOADING;\n  static DONE: number = DONE;\n\n  static _interceptor: ?XHRInterceptor = null;\n\n  UNSENT: number = UNSENT;\n  OPENED: number = OPENED;\n  HEADERS_RECEIVED: number = HEADERS_RECEIVED;\n  LOADING: number = LOADING;\n  DONE: number = DONE;\n\n  // EventTarget automatically initializes these to `null`.\n  onload: ?Function;\n  onloadstart: ?Function;\n  onprogress: ?Function;\n  ontimeout: ?Function;\n  onerror: ?Function;\n  onabort: ?Function;\n  onloadend: ?Function;\n  onreadystatechange: ?Function;\n\n  readyState: number = UNSENT;\n  responseHeaders: ?Object;\n  status: number = 0;\n  timeout: number = 0;\n  responseURL: ?string;\n  withCredentials: boolean = true\n\n  upload: XMLHttpRequestEventTarget = new XMLHttpRequestEventTarget();\n\n  _requestId: ?number;\n  _subscriptions: Array<*>;\n\n  _aborted: boolean = false;\n  _cachedResponse: Response;\n  _hasError: boolean = false;\n  _headers: Object;\n  _lowerCaseResponseHeaders: Object;\n  _method: ?string = null;\n  _response: string | ?Object;\n  _responseType: ResponseType;\n  _response: string = '';\n  _sent: boolean;\n  _url: ?string = null;\n  _timedOut: boolean = false;\n  _trackingName: string = 'unknown';\n  _incrementalEvents: boolean = false;\n\n  static setInterceptor(interceptor: ?XHRInterceptor) {\n    XMLHttpRequest._interceptor = interceptor;\n  }\n\n  constructor() {\n    super();\n    this._reset();\n  }\n\n  _reset(): void {\n    this.readyState = this.UNSENT;\n    this.responseHeaders = undefined;\n    this.status = 0;\n    delete this.responseURL;\n\n    this._requestId = null;\n\n    this._cachedResponse = undefined;\n    this._hasError = false;\n    this._headers = {};\n    this._response = '';\n    this._responseType = '';\n    this._sent = false;\n    this._lowerCaseResponseHeaders = {};\n\n    this._clearSubscriptions();\n    this._timedOut = false;\n  }\n\n  get responseType(): ResponseType {\n    return this._responseType;\n  }\n\n  set responseType(responseType: ResponseType): void {\n    if (this._sent) {\n      throw new Error(\n        'Failed to set the \\'responseType\\' property on \\'XMLHttpRequest\\': The ' +\n        'response type cannot be set after the request has been sent.'\n      );\n    }\n    if (!SUPPORTED_RESPONSE_TYPES.hasOwnProperty(responseType)) {\n      warning(\n        false,\n        `The provided value '${responseType}' is not a valid 'responseType'.`\n      );\n      return;\n    }\n\n    // redboxes early, e.g. for 'arraybuffer' on ios 7\n    invariant(\n      SUPPORTED_RESPONSE_TYPES[responseType] || responseType === 'document',\n      `The provided value '${responseType}' is unsupported in this environment.`\n    );\n    this._responseType = responseType;\n  }\n\n  get responseText(): string {\n    if (this._responseType !== '' && this._responseType !== 'text') {\n      throw new Error(\n        \"The 'responseText' property is only available if 'responseType' \" +\n        `is set to '' or 'text', but it is '${this._responseType}'.`\n      );\n    }\n    if (this.readyState < LOADING) {\n      return '';\n    }\n    return this._response;\n  }\n\n  get response(): Response {\n    const {responseType} = this;\n    if (responseType === '' || responseType === 'text') {\n      return this.readyState < LOADING || this._hasError\n        ? ''\n        : this._response;\n    }\n\n    if (this.readyState !== DONE) {\n      return null;\n    }\n\n    if (this._cachedResponse !== undefined) {\n      return this._cachedResponse;\n    }\n\n    switch (responseType) {\n      case 'document':\n        this._cachedResponse = null;\n        break;\n\n      case 'arraybuffer':\n        this._cachedResponse = base64.toByteArray(this._response).buffer;\n        break;\n\n      case 'blob':\n        this._cachedResponse = new global.Blob(\n          [base64.toByteArray(this._response).buffer],\n          {type: this.getResponseHeader('content-type') || ''}\n        );\n        break;\n\n      case 'json':\n        try {\n          this._cachedResponse = JSON.parse(this._response);\n        } catch (_) {\n          this._cachedResponse = null;\n        }\n        break;\n\n      default:\n        this._cachedResponse = null;\n    }\n\n    return this._cachedResponse;\n  }\n\n  // exposed for testing\n  __didCreateRequest(requestId: number): void {\n    this._requestId = requestId;\n\n    XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.requestSent(\n      requestId,\n      this._url || '',\n      this._method || 'GET',\n      this._headers);\n  }\n\n  // exposed for testing\n  __didUploadProgress(\n    requestId: number,\n    progress: number,\n    total: number\n  ): void {\n    if (requestId === this._requestId) {\n      this.upload.dispatchEvent({\n        type: 'progress',\n        lengthComputable: true,\n        loaded: progress,\n        total,\n      });\n    }\n  }\n\n  __didReceiveResponse(\n    requestId: number,\n    status: number,\n    responseHeaders: ?Object,\n    responseURL: ?string\n  ): void {\n    if (requestId === this._requestId) {\n      this.status = status;\n      this.setResponseHeaders(responseHeaders);\n      this.setReadyState(this.HEADERS_RECEIVED);\n      if (responseURL || responseURL === '') {\n        this.responseURL = responseURL;\n      } else {\n        delete this.responseURL;\n      }\n\n      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.responseReceived(\n        requestId,\n        responseURL || this._url || '',\n        status,\n        responseHeaders || {});\n    }\n  }\n\n  __didReceiveData(requestId: number, response: string): void {\n    if (requestId !== this._requestId) {\n      return;\n    }\n    this._response = response;\n    this._cachedResponse = undefined; // force lazy recomputation\n    this.setReadyState(this.LOADING);\n\n    XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(\n      requestId,\n      response);\n  }\n\n  __didReceiveIncrementalData(\n    requestId: number,\n    responseText: string,\n    progress: number,\n    total: number\n  ) {\n    if (requestId !== this._requestId) {\n      return;\n    }\n    if (!this._response) {\n      this._response = responseText;\n    } else {\n      this._response += responseText;\n    }\n\n    XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(\n      requestId,\n      responseText);\n\n    this.setReadyState(this.LOADING);\n    this.__didReceiveDataProgress(requestId, progress, total);\n  }\n\n  __didReceiveDataProgress(\n    requestId: number,\n    loaded: number,\n    total: number\n  ): void {\n    if (requestId !== this._requestId) {\n      return;\n    }\n    this.dispatchEvent({\n      type: 'progress',\n      lengthComputable: total >= 0,\n      loaded,\n      total,\n    });\n  }\n\n  // exposed for testing\n  __didCompleteResponse(\n    requestId: number,\n    error: string,\n    timeOutError: boolean\n  ): void {\n    if (requestId === this._requestId) {\n      if (error) {\n        if (this._responseType === '' || this._responseType === 'text') {\n          this._response = error;\n        }\n        this._hasError = true;\n        if (timeOutError) {\n          this._timedOut = true;\n        }\n      }\n      this._clearSubscriptions();\n      this._requestId = null;\n      this.setReadyState(this.DONE);\n\n      if (error) {\n        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFailed(\n          requestId,\n          error);\n      } else {\n        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFinished(\n          requestId,\n          this._response.length);\n      }\n    }\n  }\n\n  _clearSubscriptions(): void {\n    (this._subscriptions || []).forEach(sub => {\n      if (sub) {\n        sub.remove();\n      }\n    });\n    this._subscriptions = [];\n  }\n\n  getAllResponseHeaders(): ?string {\n    if (!this.responseHeaders) {\n      // according to the spec, return null if no response has been received\n      return null;\n    }\n    var headers = this.responseHeaders || {};\n    return Object.keys(headers).map((headerName) => {\n      return headerName + ': ' + headers[headerName];\n    }).join('\\r\\n');\n  }\n\n  getResponseHeader(header: string): ?string {\n    var value = this._lowerCaseResponseHeaders[header.toLowerCase()];\n    return value !== undefined ? value : null;\n  }\n\n  setRequestHeader(header: string, value: any): void {\n    if (this.readyState !== this.OPENED) {\n      throw new Error('Request has not been opened');\n    }\n    this._headers[header.toLowerCase()] = String(value);\n  }\n\n  /**\n   * Custom extension for tracking origins of request.\n   */\n  setTrackingName(trackingName: string): XMLHttpRequest {\n    this._trackingName = trackingName;\n    return this;\n  }\n\n  open(method: string, url: string, async: ?boolean): void {\n    /* Other optional arguments are not supported yet */\n    if (this.readyState !== this.UNSENT) {\n      throw new Error('Cannot open, already sending');\n    }\n    if (async !== undefined && !async) {\n      // async is default\n      throw new Error('Synchronous http requests are not supported');\n    }\n    if (!url) {\n      throw new Error('Cannot load an empty url');\n    }\n    this._method = method.toUpperCase();\n    this._url = url;\n    this._aborted = false;\n    this.setReadyState(this.OPENED);\n  }\n\n  send(data: any): void {\n    if (this.readyState !== this.OPENED) {\n      throw new Error('Request has not been opened');\n    }\n    if (this._sent) {\n      throw new Error('Request has already been sent');\n    }\n    this._sent = true;\n    const incrementalEvents = this._incrementalEvents ||\n      !!this.onreadystatechange ||\n      !!this.onprogress;\n\n    this._subscriptions.push(RCTNetworking.addListener(\n      'didSendNetworkData',\n      (args) => this.__didUploadProgress(...args)\n    ));\n    this._subscriptions.push(RCTNetworking.addListener(\n      'didReceiveNetworkResponse',\n      (args) => this.__didReceiveResponse(...args)\n    ));\n    this._subscriptions.push(RCTNetworking.addListener(\n      'didReceiveNetworkData',\n      (args) => this.__didReceiveData(...args)\n    ));\n    this._subscriptions.push(RCTNetworking.addListener(\n      'didReceiveNetworkIncrementalData',\n      (args) => this.__didReceiveIncrementalData(...args)\n    ));\n    this._subscriptions.push(RCTNetworking.addListener(\n      'didReceiveNetworkDataProgress',\n      (args) => this.__didReceiveDataProgress(...args)\n    ));\n    this._subscriptions.push(RCTNetworking.addListener(\n      'didCompleteNetworkResponse',\n      (args) => this.__didCompleteResponse(...args)\n    ));\n\n    let nativeResponseType = 'text';\n    if (this._responseType === 'arraybuffer' || this._responseType === 'blob') {\n      nativeResponseType = 'base64';\n    }\n\n    invariant(this._method, 'Request method needs to be defined.');\n    invariant(this._url, 'Request URL needs to be defined.');\n    RCTNetworking.sendRequest(\n      this._method,\n      this._trackingName,\n      this._url,\n      this._headers,\n      data,\n      nativeResponseType,\n      incrementalEvents,\n      this.timeout,\n      this.__didCreateRequest.bind(this),\n      this.withCredentials\n    );\n  }\n\n  abort(): void {\n    this._aborted = true;\n    if (this._requestId) {\n      RCTNetworking.abortRequest(this._requestId);\n    }\n    // only call onreadystatechange if there is something to abort,\n    // below logic is per spec\n    if (!(this.readyState === this.UNSENT ||\n        (this.readyState === this.OPENED && !this._sent) ||\n        this.readyState === this.DONE)) {\n      this._reset();\n      this.setReadyState(this.DONE);\n    }\n    // Reset again after, in case modified in handler\n    this._reset();\n  }\n\n  setResponseHeaders(responseHeaders: ?Object): void {\n    this.responseHeaders = responseHeaders || null;\n    var headers = responseHeaders || {};\n    this._lowerCaseResponseHeaders =\n      Object.keys(headers).reduce((lcaseHeaders, headerName) => {\n        lcaseHeaders[headerName.toLowerCase()] = headers[headerName];\n        return lcaseHeaders;\n      }, {});\n  }\n\n  setReadyState(newState: number): void {\n    this.readyState = newState;\n    this.dispatchEvent({type: 'readystatechange'});\n    if (newState === this.DONE) {\n      if (this._aborted) {\n        this.dispatchEvent({type: 'abort'});\n      } else if (this._hasError) {\n        if (this._timedOut) {\n          this.dispatchEvent({type: 'timeout'});\n        } else {\n          this.dispatchEvent({type: 'error'});\n        }\n      } else {\n        this.dispatchEvent({type: 'load'});\n      }\n      this.dispatchEvent({type: 'loadend'});\n    }\n  }\n\n  /* global EventListener */\n  addEventListener(type: string, listener: EventListener): void {\n    // If we dont' have a 'readystatechange' event handler, we don't\n    // have to send repeated LOADING events with incremental updates\n    // to responseText, which will avoid a bunch of native -> JS\n    // bridge traffic.\n    if (type === 'readystatechange' || type === 'progress') {\n      this._incrementalEvents = true;\n    }\n    super.addEventListener(type, listener);\n  }\n}\n\nmodule.exports = XMLHttpRequest;\n"]}]