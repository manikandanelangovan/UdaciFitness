["9666df5a04e6d1d4288f684f7b91d1357612b26c","7f27055a846387fcb14cd9f298859df183aefd98",["regenerator-runtime","NativeEventEmitter","NativeModules","fbjs/lib/invariant","logError","fbjs/lib/warning","Platform","PermissionsAndroid"],[49,107,164,224,270,305,423,469],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Geolocation/Geolocation.js"],"names":["NativeEventEmitter","require","RCTLocationObserver","LocationObserver","invariant","logError","warning","LocationEventEmitter","Platform","PermissionsAndroid","subscriptions","updatesEnabled","Geolocation","setRNConfiguration","config","setConfiguration","requestAuthorization","getCurrentPosition","geo_success","geo_error","geo_options","hasPermission","OS","Version","check","PERMISSIONS","ACCESS_FINE_LOCATION","request","status","RESULTS","GRANTED","watchPosition","success","error","options","startObserving","watchID","length","push","addListener","clearWatch","sub","remove","sub1","undefined","noWatchers","ii","stopObserving","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Geolocation\n * @flow\n */\n'use strict';\n\nconst NativeEventEmitter = require('NativeEventEmitter');\nconst RCTLocationObserver = require('NativeModules').LocationObserver;\n\nconst invariant = require('fbjs/lib/invariant');\nconst logError = require('logError');\nconst warning = require('fbjs/lib/warning');\n\nconst LocationEventEmitter = new NativeEventEmitter(RCTLocationObserver);\n\nconst Platform = require('Platform');\nconst PermissionsAndroid = require('PermissionsAndroid');\n\nvar subscriptions = [];\nvar updatesEnabled = false;\n\ntype GeoConfiguration = {\n  skipPermissionRequests: bool;\n}\n\ntype GeoOptions = {\n  timeout?: number,\n  maximumAge?: number,\n  enableHighAccuracy?: bool,\n  distanceFilter: number,\n  useSignificantChanges?: bool,\n}\n\n/**\n * The Geolocation API extends the web spec:\n * https://developer.mozilla.org/en-US/docs/Web/API/Geolocation\n *\n * As a browser polyfill, this API is available through the `navigator.geolocation`\n * global - you do not need to `import` it.\n *\n * ### Configuration and Permissions\n *\n * <div class=\"banner-crna-ejected\">\n *   <h3>Projects with Native Code Only</h3>\n *   <p>\n *     This section only applies to projects made with <code>react-native init</code>\n *     or to those made with Create React Native App which have since ejected. For\n *     more information about ejecting, please see\n *     the <a href=\"https://github.com/react-community/create-react-native-app/blob/master/EJECTING.md\" target=\"_blank\">guide</a> on\n *     the Create React Native App repository.\n *   </p>\n * </div>\n *\n * #### iOS\n * You need to include the `NSLocationWhenInUseUsageDescription` key\n * in Info.plist to enable geolocation when using the app. Geolocation is\n * enabled by default when you create a project with `react-native init`.\n *\n * In order to enable geolocation in the background, you need to include the\n * 'NSLocationAlwaysUsageDescription' key in Info.plist and add location as\n * a background mode in the 'Capabilities' tab in Xcode.\n *\n * #### Android\n * To request access to location, you need to add the following line to your\n * app's `AndroidManifest.xml`:\n *\n * `<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />`\n *\n * Android API >= 18 Positions will also contain a `mocked` boolean to indicate if position\n * was created from a mock provider.\n *\n */\nvar Geolocation = {\n\n  /*\n    * Sets configuration options that will be used in all location requests.\n    *\n    * ### Options\n    *\n    * #### iOS\n    *\n    * - `skipPermissionRequests` - defaults to `false`, if `true` you must request permissions\n    * before using Geolocation APIs.\n    *\n    */\n  setRNConfiguration: function(\n    config: GeoConfiguration\n  ) {\n    if (RCTLocationObserver.setConfiguration) {\n      RCTLocationObserver.setConfiguration(config);\n    }\n  },\n\n  /*\n   * Request suitable Location permission based on the key configured on pList.\n   * If NSLocationAlwaysUsageDescription is set, it will request Always authorization,\n   * although if NSLocationWhenInUseUsageDescription is set, it will request InUse\n   * authorization.\n   */\n  requestAuthorization: function() {\n    RCTLocationObserver.requestAuthorization();\n  },\n\n  /*\n   * Invokes the success callback once with the latest location info.  Supported\n   * options: timeout (ms), maximumAge (ms), enableHighAccuracy (bool)\n   * On Android, if the location is cached this can return almost immediately,\n   * or it will request an update which might take a while.\n   */\n  getCurrentPosition: async function(\n    geo_success: Function,\n    geo_error?: Function,\n    geo_options?: GeoOptions\n  ) {\n    invariant(\n      typeof geo_success === 'function',\n      'Must provide a valid geo_success callback.'\n    );\n    let hasPermission = true;\n    // Supports Android's new permission model. For Android older devices,\n    // it's always on.\n    if (Platform.OS === 'android' && Platform.Version >= 23) {\n      hasPermission = await PermissionsAndroid.check(\n        PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\n      );\n      if (!hasPermission) {\n        const status = await PermissionsAndroid.request(\n          PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\n        );\n        hasPermission = status === PermissionsAndroid.RESULTS.GRANTED;\n      }\n    }\n    if (hasPermission) {\n      RCTLocationObserver.getCurrentPosition(\n        geo_options || {},\n        geo_success,\n        geo_error || logError,\n      );\n    }\n  },\n\n  /*\n   * Invokes the success callback whenever the location changes.  Supported\n   * options: timeout (ms), maximumAge (ms), enableHighAccuracy (bool), distanceFilter(m), useSignificantChanges (bool)\n   */\n  watchPosition: function(success: Function, error?: Function, options?: GeoOptions): number {\n    if (!updatesEnabled) {\n      RCTLocationObserver.startObserving(options || {});\n      updatesEnabled = true;\n    }\n    var watchID = subscriptions.length;\n    subscriptions.push([\n      LocationEventEmitter.addListener(\n        'geolocationDidChange',\n        success\n      ),\n      error ? LocationEventEmitter.addListener(\n        'geolocationError',\n        error\n      ) : null,\n    ]);\n    return watchID;\n  },\n\n  clearWatch: function(watchID: number) {\n    var sub = subscriptions[watchID];\n    if (!sub) {\n      // Silently exit when the watchID is invalid or already cleared\n      // This is consistent with timers\n      return;\n    }\n\n    sub[0].remove();\n    // array element refinements not yet enabled in Flow\n    var sub1 = sub[1]; sub1 && sub1.remove();\n    subscriptions[watchID] = undefined;\n    var noWatchers = true;\n    for (var ii = 0; ii < subscriptions.length; ii++) {\n      if (subscriptions[ii]) {\n        noWatchers = false; // still valid subscriptions\n      }\n    }\n    if (noWatchers) {\n      Geolocation.stopObserving();\n    }\n  },\n\n  stopObserving: function() {\n    if (updatesEnabled) {\n      RCTLocationObserver.stopObserving();\n      updatesEnabled = false;\n      for (var ii = 0; ii < subscriptions.length; ii++) {\n        var sub = subscriptions[ii];\n        if (sub) {\n          warning(false, 'Called stopObserving with existing subscriptions.');\n          sub[0].remove();\n          // array element refinements not yet enabled in Flow\n          var sub1 = sub[1]; sub1 && sub1.remove();\n        }\n      }\n      subscriptions = [];\n    }\n  }\n};\n\nmodule.exports = Geolocation;\n"]}]