["11ec9fb44852668379c4b6618356de676772a453","a27ad70acfeffb88b2f16f672eda718bd481a8c6",["react","react-native","fbjs/lib/areEqual","prop-types"],[641,738,780,893],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native-gesture-handler/GestureHandler.js"],"names":["RNGestureHandlerModule","UIManager","oldSetJSResponder","setJSResponder","oldClearJSResponder","clearJSResponder","tag","blockNativeResponder","handleSetJSResponder","handleClearJSResponder","State","handlerTag","handlerIDToTag","GestureHandlerPropTypes","id","string","enabled","bool","waitFor","oneOfType","arrayOf","simultaneousHandlers","shouldCancelWhenOutside","hitSlop","number","shape","left","top","right","bottom","vertical","horizontal","onGestureEvent","func","object","onHandlerStateChange","canUseNativeParam","param","undefined","transformIntoHandlerTags","handlerIDs","Array","isArray","map","handlerID","filter","filterConfig","props","validProps","defaults","res","Object","keys","forEach","value","key","createHandler","handlerName","propTypes","config","Handler","_onGestureHandlerEvent","event","nativeEvent","_handlerTag","onGestureHandlerEvent","_onGestureHandlerStateChange","onGestureHandlerStateChange","_refHandler","_viewNode","node","child","Children","only","children","ref","_config","Error","dropGestureHandler","_viewTag","constructor","createGestureHandler","attachGestureHandler","prevProps","prevState","viewTag","newConfig","updateGestureHandler","gestureEventHandler","cloneElement","collapsable","Component","NativeViewGestureHandler","shouldActivateOnStart","disallowInterruption","TapGestureHandler","maxDurationMs","maxDelayMs","numberOfTaps","LongPressGestureHandler","minDurationMs","PanGestureHandler","minDeltaX","minDeltaY","maxDeltaX","maxDeltaY","minOffsetX","minOffsetY","minDist","minVelocity","minVelocityX","minVelocityY","minPointers","maxPointers","avgTouches","PinchGestureHandler","RotationGestureHandler","createNativeWrapper","ComponentWrapper","methodName","method","startsWith","rest","WrappedScrollView","WrappedSlider","WrappedSwitch","WrappedTextInput","WrappedWebView","WrappedToolbarAndroid","WrappedViewPagerAndroid","WrappedDrawerLayoutAndroid","positions","print","i","length","state","RawButton","BaseButton","_onHandlerEvent","e","oldState","pointerInside","active","ACTIVE","_lastActive","onActiveStateChange","CANCELLED","onPress","AnimatedBaseButton","createAnimatedComponent","btnStyles","create","underlay","position","RectButton","_handleActiveStateChange","OS","_opacity","setValue","activeOpacity","Value","backgroundColor","underlayColor","opacity","defaultProps","BorderlessButton","style","FlatListWithGHScroll","ScrollView","Slider","Switch","TextInput","ToolbarAndroid","ViewPagerAndroid","DrawerLayoutAndroid","WebView","FlatList"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  findNodeHandle,\n  requireNativeComponent,\n  Animated,\n  NativeModules,\n  ScrollView,\n  Slider,\n  Switch,\n  TextInput,\n  ToolbarAndroid,\n  ViewPagerAndroid,\n  DrawerLayoutAndroid,\n  WebView,\n  StyleSheet,\n  FlatList,\n  Platform,\n} from 'react-native';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport PropTypes from 'prop-types';\n\nconst RNGestureHandlerModule = NativeModules.RNGestureHandlerModule;\n\n/* Wrap JS responder calls and notify gesture handler manager */\nconst { UIManager } = NativeModules;\nconst {\n  setJSResponder: oldSetJSResponder,\n  clearJSResponder: oldClearJSResponder,\n} = UIManager;\nUIManager.setJSResponder = (tag, blockNativeResponder) => {\n  RNGestureHandlerModule.handleSetJSResponder(tag, blockNativeResponder);\n  oldSetJSResponder(tag, blockNativeResponder);\n};\nUIManager.clearJSResponder = () => {\n  RNGestureHandlerModule.handleClearJSResponder();\n  oldClearJSResponder();\n};\n\nconst State = RNGestureHandlerModule.State;\n\nlet handlerTag = 1;\nconst handlerIDToTag = {};\n\nconst GestureHandlerPropTypes = {\n  id: PropTypes.string,\n  enabled: PropTypes.bool,\n  waitFor: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  simultaneousHandlers: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  shouldCancelWhenOutside: PropTypes.bool,\n  hitSlop: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      left: PropTypes.number,\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      vertical: PropTypes.number,\n      horizontal: PropTypes.number,\n    }),\n  ]),\n  onGestureEvent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onHandlerStateChange: PropTypes.func,\n};\n\nfunction canUseNativeParam(param) {\n  return (\n    param !== undefined &&\n    typeof param !== 'function' &&\n    (typeof param !== 'object' || !('__isNative' in param))\n  );\n}\n\nfunction transformIntoHandlerTags(handlerIDs) {\n  if (!Array.isArray(handlerIDs)) {\n    handlerIDs = [handlerIDs];\n  }\n  // converts handler string IDs into their numeric tags\n  return handlerIDs\n    .map(handlerID => handlerIDToTag[handlerID] || -1)\n    .filter(handlerTag => handlerTag > 0);\n}\n\nfunction filterConfig(props, validProps, defaults = {}) {\n  const res = { ...defaults };\n  Object.keys(validProps).forEach(key => {\n    const value = props[key];\n    if (canUseNativeParam(value)) {\n      let value = props[key];\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop') {\n        if (typeof value !== 'object') {\n          value = { top: value, left: value, bottom: value, right: value };\n        }\n      }\n      res[key] = value;\n    }\n  });\n  return res;\n}\n\nfunction createHandler(handlerName, propTypes = null, config = {}) {\n  class Handler extends React.Component {\n    static propTypes = {\n      ...GestureHandlerPropTypes,\n      ...propTypes,\n    };\n\n    constructor(props) {\n      super(props);\n      this._handlerTag = handlerTag++;\n      this._config = {};\n      if (props.id) {\n        if (handlerIDToTag[props.id] !== undefined) {\n          throw new Error(`Handler with ID \"${props.id}\" already registered`);\n        }\n        handlerIDToTag[props.id] = this._handlerTag;\n      }\n    }\n\n    _onGestureHandlerEvent = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onGestureEvent && this.props.onGestureEvent(event);\n      } else {\n        this.props.onGestureHandlerEvent &&\n          this.props.onGestureHandlerEvent(event);\n      }\n    };\n\n    _onGestureHandlerStateChange = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onHandlerStateChange &&\n          this.props.onHandlerStateChange(event);\n      } else {\n        this.props.onGestureHandlerStateChange &&\n          this.props.onGestureHandlerStateChange(event);\n      }\n    };\n\n    _refHandler = node => {\n      this._viewNode = node;\n\n      const child = React.Children.only(this.props.children);\n      const { ref } = child;\n      if (typeof ref === 'function') {\n        ref(node);\n      }\n    };\n\n    componentWillUnmount() {\n      RNGestureHandlerModule.dropGestureHandler(this._handlerTag);\n      if (this.props.id) {\n        delete handlerIDToTag[this.props.id];\n      }\n    }\n\n    componentDidMount() {\n      this._viewTag = findNodeHandle(this._viewNode);\n      this._config = filterConfig(\n        this.props,\n        this.constructor.propTypes,\n        config\n      );\n      RNGestureHandlerModule.createGestureHandler(\n        handlerName,\n        this._handlerTag,\n        this._config\n      );\n      RNGestureHandlerModule.attachGestureHandler(\n        this._handlerTag,\n        this._viewTag\n      );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      const viewTag = findNodeHandle(this._viewNode);\n      if (this._viewTag !== viewTag) {\n        this._viewTag = viewTag;\n        RNGestureHandlerModule.attachGestureHandler(this._handlerTag, viewTag);\n      }\n\n      const newConfig = filterConfig(\n        this.props,\n        this.constructor.propTypes,\n        config\n      );\n      if (!deepEqual(this._config, newConfig)) {\n        this._config = newConfig;\n        RNGestureHandlerModule.updateGestureHandler(\n          this._handlerTag,\n          this._config\n        );\n      }\n    }\n\n    render() {\n      let gestureEventHandler = this._onGestureHandlerEvent;\n      const { onGestureEvent, onGestureHandlerEvent } = this.props;\n      if (onGestureEvent && typeof onGestureEvent !== 'function') {\n        // If it's not a mathod it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerEvent) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureEventHandler = this.props.onGestureEvent;\n      } else {\n        if (\n          onGestureHandlerEvent &&\n          typeof onGestureHandlerEvent !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n      const child = React.Children.only(this.props.children);\n      return React.cloneElement(child, {\n        ref: this._refHandler,\n        collapsable: false,\n        onGestureHandlerEvent: gestureEventHandler,\n        onGestureHandlerStateChange: this._onGestureHandlerStateChange,\n      });\n    }\n  }\n  return Handler;\n}\n\nconst NativeViewGestureHandler = createHandler('NativeViewGestureHandler', {\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool,\n});\nconst TapGestureHandler = createHandler(\n  'TapGestureHandler',\n  {\n    maxDurationMs: PropTypes.number,\n    maxDelayMs: PropTypes.number,\n    numberOfTaps: PropTypes.number,\n  },\n  {}\n);\nconst LongPressGestureHandler = createHandler(\n  'LongPressGestureHandler',\n  {\n    minDurationMs: PropTypes.number,\n  },\n  {}\n);\nconst PanGestureHandler = createHandler(\n  'PanGestureHandler',\n  {\n    minDeltaX: PropTypes.number,\n    minDeltaY: PropTypes.number,\n    maxDeltaX: PropTypes.number,\n    maxDeltaY: PropTypes.number,\n    minOffsetX: PropTypes.number,\n    minOffsetY: PropTypes.number,\n    minDist: PropTypes.number,\n    minVelocity: PropTypes.number,\n    minVelocityX: PropTypes.number,\n    minVelocityY: PropTypes.number,\n    minPointers: PropTypes.number,\n    maxPointers: PropTypes.number,\n    avgTouches: PropTypes.bool,\n  },\n  {}\n);\nconst PinchGestureHandler = createHandler('PinchGestureHandler', {}, {});\nconst RotationGestureHandler = createHandler('RotationGestureHandler', {}, {});\n\nfunction createNativeWrapper(Component, config = {}) {\n  class ComponentWrapper extends React.Component {\n    static propTypes = {\n      ...NativeViewGestureHandler.propTypes,\n      ...Component.propTypes,\n    };\n\n    constructor(props) {\n      super(props);\n      this._handlerTag = handlerTag++;\n      this._config = {};\n      if (props.id) {\n        if (handlerIDToTag[props.id] !== undefined) {\n          throw new Error(`Handler with ID \"${props.id}\" already registered`);\n        }\n        handlerIDToTag[props.id] = this._handlerTag;\n      }\n    }\n\n    _refHandler = node => {\n      this._viewNode = node;\n\n      // bind native component's methods\n      for (let methodName in node) {\n        if (methodName === 'replaceState' || methodName === 'isMounted') {\n          continue;\n        }\n        const method = node[methodName];\n        if (\n          !methodName.startsWith('_') &&\n          typeof method === 'function' &&\n          this[methodName] === undefined\n        ) {\n          this[methodName] = method;\n        }\n      }\n    };\n\n    componentWillUnmount() {\n      RNGestureHandlerModule.dropGestureHandler(this._handlerTag);\n      if (this.props.id) {\n        delete handlerIDToTag[this.props.id];\n      }\n    }\n\n    componentDidMount() {\n      this._viewTag = findNodeHandle(this._viewNode);\n      this._config = filterConfig(\n        this.props,\n        NativeViewGestureHandler.propTypes,\n        config\n      );\n      RNGestureHandlerModule.createGestureHandler(\n        'NativeViewGestureHandler',\n        this._handlerTag,\n        this._config\n      );\n      RNGestureHandlerModule.attachGestureHandler(\n        this._handlerTag,\n        this._viewTag\n      );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      const viewTag = findNodeHandle(this._viewNode);\n      if (this._viewTag !== viewTag) {\n        this._viewTag = viewTag;\n        RNGestureHandlerModule.attachGestureHandler(this._handlerTag, viewTag);\n      }\n\n      const newConfig = filterConfig(\n        this.props,\n        NativeViewGestureHandler.propTypes,\n        config\n      );\n      if (!deepEqual(this._config, newConfig)) {\n        this._config = newConfig;\n        RNGestureHandlerModule.updateGestureHandler(\n          viewTag,\n          this._handlerTag,\n          this._config\n        );\n      }\n    }\n\n    render() {\n      const { onGestureEvent, onHandlerStateChange, ...rest } = this.props;\n      return (\n        <Component\n          {...rest}\n          onGestureHandlerEvent={onGestureEvent}\n          onGestureHandlerStateChange={onHandlerStateChange}\n          ref={this._refHandler}\n        />\n      );\n    }\n  }\n  return ComponentWrapper;\n}\n\nconst WrappedScrollView = createNativeWrapper(ScrollView, {\n  disallowInterruption: true,\n});\nconst WrappedSlider = createNativeWrapper(Slider, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nconst WrappedSwitch = createNativeWrapper(Switch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nconst WrappedTextInput = createNativeWrapper(TextInput);\nconst WrappedWebView = createNativeWrapper(WebView);\n\nconst WrappedToolbarAndroid = createNativeWrapper(ToolbarAndroid);\nconst WrappedViewPagerAndroid = createNativeWrapper(ViewPagerAndroid, {\n  disallowInterruption: true,\n});\nconst WrappedDrawerLayoutAndroid = createNativeWrapper(DrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\nWrappedDrawerLayoutAndroid.positions = DrawerLayoutAndroid.positions;\n\nState.print = state => {\n  const keys = Object.keys(State);\n  for (let i = 0; i < keys.length; i++) {\n    if (state === State[keys[i]]) {\n      return keys[i];\n    }\n  }\n};\n\nconst RawButton = createNativeWrapper(\n  requireNativeComponent('RNGestureHandlerButton', null),\n  {\n    shouldCancelWhenOutside: false,\n    shouldActivateOnStart: false,\n  }\n);\n\n/* Buttons */\n\nclass BaseButton extends React.Component {\n  static propTypes = RawButton.propTypes;\n  constructor(props) {\n    super(props);\n    this._lastActive = false;\n  }\n  _onHandlerEvent = e => {\n    const { state, oldState, pointerInside } = e.nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n    if (active != this._lastActive) {\n      this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n    }\n    if (\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this._lastActive\n    ) {\n      this.props.onPress && this.props.onPress(active);\n    }\n    this._lastActive = active;\n  };\n  render() {\n    return (\n      <RawButton\n        {...this.props}\n        onHandlerStateChange={this._onHandlerEvent}\n        onGestureEvent={this._onHandlerEvent}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nclass RectButton extends React.Component {\n  static propTypes = BaseButton.propTypes;\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(0);\n  }\n  _handleActiveStateChange = Platform.OS === 'android'\n    ? null\n    : active => {\n        this._opacity.setValue(active ? this.props.activeOpacity : 0);\n      };\n  render() {\n    const { children, ...rest } = this.props;\n    return (\n      <BaseButton {...rest} onActiveStateChange={this._handleActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            { backgroundColor: this.props.underlayColor },\n            { opacity: this._opacity },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nclass BorderlessButton extends React.Component {\n  static propTypes = BaseButton.propTypes;\n  static defaultProps = {\n    activeOpacity: 0.3,\n  };\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(1);\n  }\n  _handleActiveStateChange = Platform.OS === 'android'\n    ? null\n    : active => {\n        this._opacity.setValue(active ? this.props.activeOpacity : 1);\n      };\n  render() {\n    const { children, style, ...rest } = this.props;\n    return (\n      <AnimatedBaseButton\n        borderless={true}\n        {...rest}\n        onActiveStateChange={this._handleActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this._opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\n/* Other */\n\nconst FlatListWithGHScroll = props => (\n  <FlatList\n    {...props}\n    renderScrollComponent={props => <WrappedScrollView {...props} />}\n  />\n);\n\nexport {\n  WrappedScrollView as ScrollView,\n  WrappedSlider as Slider,\n  WrappedSwitch as Switch,\n  WrappedTextInput as TextInput,\n  WrappedToolbarAndroid as ToolbarAndroid,\n  WrappedViewPagerAndroid as ViewPagerAndroid,\n  WrappedDrawerLayoutAndroid as DrawerLayoutAndroid,\n  WrappedWebView as WebView,\n  NativeViewGestureHandler,\n  TapGestureHandler,\n  LongPressGestureHandler,\n  PanGestureHandler,\n  PinchGestureHandler,\n  RotationGestureHandler,\n  State,\n  /* Buttons */\n  RawButton,\n  BaseButton,\n  RectButton,\n  BorderlessButton,\n  /* Other */\n  FlatListWithGHScroll as FlatList,\n};\n"]}]