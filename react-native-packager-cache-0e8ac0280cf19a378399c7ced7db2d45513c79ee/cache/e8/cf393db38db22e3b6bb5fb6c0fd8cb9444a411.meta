["cfe18385b296de181032d1aab3609f0149ca4223","4c96523dd289408bc34e56198f34adec63d3e057",[],[],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/fbjs/lib/areEqual.js"],"names":["aStackPool","bStackPool","areEqual","a","b","aStack","length","pop","bStack","result","eq","push","objToStr","Object","prototype","toString","className","call","String","isNaN","Number","source","global","multiline","ignoreCase","size","constructor","hasOwnProperty","valueOf","keys","i","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar aStackPool = [];\nvar bStackPool = [];\n\n/**\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\n * Returns true if both arguments have the same keys and values.\n *\n * @see http://underscorejs.org\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * @license MIT\n */\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    return a !== 0 || 1 / a == 1 / b;\n  }\n  if (a == null || b == null) {\n    // a or b can be `null` or `undefined`\n    return false;\n  }\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  }\n  // Assume equality for cyclic structures.\n  var length = aStack.length;\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0;\n  // Recursively compare objects and arrays.\n  if (className === '[object Array]') {\n    size = a.length;\n    if (size !== b.length) {\n      return false;\n    }\n    // Deep compare the contents, ignoring non-numeric properties.\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n    var keys = Object.keys(a);\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;"]}]