["964e91bece6eb14db9509f3100bc152d5a4ab143","69e96da3be446f48af921f926c4f0e586d02b7fc",[],[],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/uuid/lib/rng-browser.js"],"names":["rng","crypto","global","msCrypto","getRandomValues","rnds8","Uint8Array","whatwgRNG","rnds","Array","i","r","Math","random","module","exports"],"mappings":";AAIA,IAAIA,GAAJ;;AAEA,IAAIC,SAASC,OAAOD,MAAP,IAAiBC,OAAOC,QAArC;AACA,IAAIF,UAAUA,OAAOG,eAArB,EAAsC;AAEpC,MAAIC,QAAQ,IAAIC,UAAJ,CAAe,EAAf,CAAZ;AACAN,QAAM,SAASO,SAAT,GAAqB;AACzBN,WAAOG,eAAP,CAAuBC,KAAvB;AACA,WAAOA,KAAP;AACD,GAHD;AAID;;AAED,IAAI,CAACL,GAAL,EAAU;AAKR,MAAIQ,OAAO,IAAIC,KAAJ,CAAU,EAAV,CAAX;AACAT,QAAM,eAAW;AACf,SAAK,IAAIU,IAAI,CAAR,EAAWC,CAAhB,EAAmBD,IAAI,EAAvB,EAA2BA,GAA3B,EAAgC;AAC9B,UAAI,CAACA,IAAI,IAAL,MAAe,CAAnB,EAAsBC,IAAIC,KAAKC,MAAL,KAAgB,WAApB;AACtBL,WAAKE,CAAL,IAAUC,OAAO,CAACD,IAAI,IAAL,KAAc,CAArB,IAA0B,IAApC;AACD;;AAED,WAAOF,IAAP;AACD,GAPD;AAQD;;AAEDM,OAAOC,OAAP,GAAiBf,GAAjB","sourcesContent":["// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n"]}]