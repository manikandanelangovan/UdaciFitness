["3eb06e1c69975828ccf4e47e7b1635302dae42bc","c269850b30a178a43da6602e4d34c61fd61420f7",["../nodes/AnimatedValue","../nodes/AnimatedValueXY","./Animation","../SpringConfig","fbjs/lib/invariant","../NativeAnimatedHelper"],[44,101,154,197,242,289],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Animated/src/animations/SpringAnimation.js"],"names":["AnimatedValue","require","AnimatedValueXY","Animation","SpringConfig","invariant","shouldUseNativeDriver","withDefault","value","defaultValue","undefined","SpringAnimation","config","_overshootClamping","overshootClamping","_restDisplacementThreshold","restDisplacementThreshold","_restSpeedThreshold","restSpeedThreshold","_initialVelocity","velocity","_lastVelocity","_toValue","toValue","_delay","delay","_useNativeDriver","__isInteraction","isInteraction","__iterations","iterations","springConfig","bounciness","speed","tension","friction","fromBouncinessAndSpeed","fromOrigamiTensionAndFriction","_tension","_friction","type","stiffness","damping","mass","initialVelocity","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","__active","_startPosition","_lastPosition","_onUpdate","__onEnd","_lastTime","Date","now","internalState","getInternalState","lastPosition","lastVelocity","lastTime","start","__startNativeAnimation","_timeout","setTimeout","position","tempPosition","tempVelocity","MAX_STEPS","TIMESTEP_MSEC","numSteps","Math","floor","i","step","aVelocity","aAcceleration","bVelocity","bAcceleration","cVelocity","cAcceleration","dVelocity","dAcceleration","dxdt","dvdt","isOvershooting","isVelocity","abs","isDisplacement","__debouncedOnEnd","finished","_animationFrame","requestAnimationFrame","bind","clearTimeout","global","cancelAnimationFrame","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SpringAnimation\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedValue = require('../nodes/AnimatedValue');\nconst AnimatedValueXY = require('../nodes/AnimatedValueXY');\nconst Animation = require('./Animation');\nconst SpringConfig = require('../SpringConfig');\n\nconst invariant = require('fbjs/lib/invariant');\nconst {shouldUseNativeDriver} = require('../NativeAnimatedHelper');\n\nimport type {AnimationConfig, EndCallback} from './Animation';\n\nexport type SpringAnimationConfig = AnimationConfig & {\n  toValue: number | AnimatedValue | {x: number, y: number} | AnimatedValueXY,\n  overshootClamping?: boolean,\n  restDisplacementThreshold?: number,\n  restSpeedThreshold?: number,\n  velocity?: number | {x: number, y: number},\n  bounciness?: number,\n  speed?: number,\n  tension?: number,\n  friction?: number,\n  delay?: number,\n};\n\nexport type SpringAnimationConfigSingle = AnimationConfig & {\n  toValue: number | AnimatedValue,\n  overshootClamping?: boolean,\n  restDisplacementThreshold?: number,\n  restSpeedThreshold?: number,\n  velocity?: number,\n  bounciness?: number,\n  speed?: number,\n  tension?: number,\n  friction?: number,\n  delay?: number,\n};\n\nfunction withDefault<T>(value: ?T, defaultValue: T): T {\n  if (value === undefined || value === null) {\n    return defaultValue;\n  }\n  return value;\n}\n\nclass SpringAnimation extends Animation {\n  _overshootClamping: boolean;\n  _restDisplacementThreshold: number;\n  _restSpeedThreshold: number;\n  _initialVelocity: ?number;\n  _lastVelocity: number;\n  _startPosition: number;\n  _lastPosition: number;\n  _fromValue: number;\n  _toValue: any;\n  _tension: number;\n  _friction: number;\n  _delay: number;\n  _timeout: any;\n  _lastTime: number;\n  _onUpdate: (value: number) => void;\n  _animationFrame: any;\n  _useNativeDriver: boolean;\n\n  constructor(config: SpringAnimationConfigSingle) {\n    super();\n\n    this._overshootClamping = withDefault(config.overshootClamping, false);\n    this._restDisplacementThreshold = withDefault(\n      config.restDisplacementThreshold,\n      0.001,\n    );\n    this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);\n    this._initialVelocity = config.velocity;\n    this._lastVelocity = withDefault(config.velocity, 0);\n    this._toValue = config.toValue;\n    this._delay = withDefault(config.delay, 0);\n    this._useNativeDriver = shouldUseNativeDriver(config);\n    this.__isInteraction =\n      config.isInteraction !== undefined ? config.isInteraction : true;\n    this.__iterations = config.iterations !== undefined ? config.iterations : 1;\n\n    let springConfig;\n    if (config.bounciness !== undefined || config.speed !== undefined) {\n      invariant(\n        config.tension === undefined && config.friction === undefined,\n        'You can only define bounciness/speed or tension/friction but not both',\n      );\n      springConfig = SpringConfig.fromBouncinessAndSpeed(\n        withDefault(config.bounciness, 8),\n        withDefault(config.speed, 12),\n      );\n    } else {\n      springConfig = SpringConfig.fromOrigamiTensionAndFriction(\n        withDefault(config.tension, 40),\n        withDefault(config.friction, 7),\n      );\n    }\n    this._tension = springConfig.tension;\n    this._friction = springConfig.friction;\n  }\n\n  __getNativeAnimationConfig() {\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      tension: this._tension,\n      friction: this._friction,\n      stiffness: this._tension,\n      damping: this._friction,\n      mass: 1,\n      initialVelocity: withDefault(this._initialVelocity, this._lastVelocity),\n      toValue: this._toValue,\n      iterations: this.__iterations,\n    };\n  }\n\n  start(\n    fromValue: number,\n    onUpdate: (value: number) => void,\n    onEnd: ?EndCallback,\n    previousAnimation: ?Animation,\n    animatedValue: AnimatedValue,\n  ): void {\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n\n    if (previousAnimation instanceof SpringAnimation) {\n      const internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n    if (this._initialVelocity !== undefined && this._initialVelocity !== null) {\n      this._lastVelocity = this._initialVelocity;\n    }\n\n    const start = () => {\n      if (this._useNativeDriver) {\n        this.__startNativeAnimation(animatedValue);\n      } else {\n        this.onUpdate();\n      }\n    };\n\n    //  If this._delay is more than 0, we start after the timeout.\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  }\n\n  getInternalState(): Object {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime,\n    };\n  }\n\n  onUpdate(): void {\n    let position = this._lastPosition;\n    let velocity = this._lastVelocity;\n\n    let tempPosition = this._lastPosition;\n    let tempVelocity = this._lastVelocity;\n\n    // If for some reason we lost a lot of frames (e.g. process large payload or\n    // stopped in the debugger), we only advance by 4 frames worth of\n    // computation and will continue on the next frame. It's better to have it\n    // running at faster speed than jumping to the end.\n    const MAX_STEPS = 64;\n    let now = Date.now();\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n\n    // We are using a fixed time step and a maximum number of iterations.\n    // The following post provides a lot of thoughts into how to build this\n    // loop: http://gafferongames.com/game-physics/fix-your-timestep/\n    const TIMESTEP_MSEC = 1;\n    const numSteps = Math.floor((now - this._lastTime) / TIMESTEP_MSEC);\n\n    for (let i = 0; i < numSteps; ++i) {\n      // Velocity is based on seconds instead of milliseconds\n      const step = TIMESTEP_MSEC / 1000;\n\n      // This is using RK4. A good blog post to understand how it works:\n      // http://gafferongames.com/game-physics/integration-basics/\n      const aVelocity = velocity;\n      const aAcceleration =\n        this._tension * (this._toValue - tempPosition) -\n        this._friction * tempVelocity;\n      tempPosition = position + aVelocity * step / 2;\n      tempVelocity = velocity + aAcceleration * step / 2;\n\n      const bVelocity = tempVelocity;\n      const bAcceleration =\n        this._tension * (this._toValue - tempPosition) -\n        this._friction * tempVelocity;\n      tempPosition = position + bVelocity * step / 2;\n      tempVelocity = velocity + bAcceleration * step / 2;\n\n      const cVelocity = tempVelocity;\n      const cAcceleration =\n        this._tension * (this._toValue - tempPosition) -\n        this._friction * tempVelocity;\n      tempPosition = position + cVelocity * step / 2;\n      tempVelocity = velocity + cAcceleration * step / 2;\n\n      const dVelocity = tempVelocity;\n      const dAcceleration =\n        this._tension * (this._toValue - tempPosition) -\n        this._friction * tempVelocity;\n      tempPosition = position + cVelocity * step / 2;\n      tempVelocity = velocity + cAcceleration * step / 2;\n\n      const dxdt = (aVelocity + 2 * (bVelocity + cVelocity) + dVelocity) / 6;\n      const dvdt =\n        (aAcceleration + 2 * (bAcceleration + cAcceleration) + dAcceleration) /\n        6;\n\n      position += dxdt * step;\n      velocity += dvdt * step;\n    }\n\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n\n    this._onUpdate(position);\n    if (!this.__active) {\n      // a listener might have stopped us in _onUpdate\n      return;\n    }\n\n    // Conditions for stopping the spring animation\n    let isOvershooting = false;\n    if (this._overshootClamping && this._tension !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n    const isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n    let isDisplacement = true;\n    if (this._tension !== 0) {\n      isDisplacement =\n        Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n\n    if (isOvershooting || (isVelocity && isDisplacement)) {\n      if (this._tension !== 0) {\n        // Ensure that we end up with a round value\n        this._onUpdate(this._toValue);\n      }\n\n      this.__debouncedOnEnd({finished: true});\n      return;\n    }\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  }\n\n  stop(): void {\n    super.stop();\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n    this.__debouncedOnEnd({finished: false});\n  }\n}\n\nmodule.exports = SpringAnimation;\n"]}]