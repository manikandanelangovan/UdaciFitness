["ef6e55e29da3dd5c53867b69dd6b9ff7428b2bb0","ce17e574989e992eb293c3ef166926ac08458056",["ColorPropType","NativeMethodsMixin","Platform","React","prop-types","StyleSheet","View","ViewPropTypes","create-react-class","requireNativeComponent"],[44,95,141,174,208,248,282,319,369,429],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js"],"names":["ColorPropType","require","NativeMethodsMixin","Platform","React","PropTypes","StyleSheet","View","ViewPropTypes","createReactClass","requireNativeComponent","GRAY","ActivityIndicator","displayName","mixins","propTypes","animating","bool","color","size","oneOfType","oneOf","number","hidesWhenStopped","getDefaultProps","OS","undefined","render","props","onLayout","style","sizeStyle","styles","sizeSmall","sizeLarge","height","width","container","create","alignItems","justifyContent","RCTActivityIndicator","nativeOnly","activityIndicatorViewStyle","indeterminate","progress","styleAttr","module","exports"],"mappings":";AAWA;;AAEA,IAAMA,gBAAgBC,OAAhB,iBAAN;AACA,IAAMC,qBAAqBD,OAArB,sBAAN;AACA,IAAME,WAAWF,OAAX,YAAN;AACA,IAAMG,QAAQH,OAAR,SAAN;AACA,IAAMI,YAAYJ,OAAZ,cAAN;AACA,IAAMK,aAAaL,OAAb,cAAN;AACA,IAAMM,OAAON,OAAP,QAAN;AACA,IAAMO,gBAAgBP,OAAhB,iBAAN;;AAEA,IAAMQ,mBAAmBR,OAAnB,sBAAN;AACA,IAAMS,yBAAyBT,OAAzB,0BAAN;;AAEA,IAAMU,OAAO,SAAb;;AAiBA,IAAMC,oBAAoBH,iBAAiB;AACzCI,eAAa,mBAD4B;AAEzCC,UAAQ,CAACZ,kBAAD,CAFiC;;AAIzCa,sCACKP,aADL;AAKEQ,eAAWX,UAAUY,IALvB;;AASEC,WAAOlB,aATT;;AAcEmB,UAAMd,UAAUe,SAAV,CAAoB,CACxBf,UAAUgB,KAAV,CAAgB,CAAE,OAAF,EAAW,OAAX,CAAhB,CADwB,EAExBhB,UAAUiB,MAFc,CAApB,CAdR;;AAuBEC,sBAAkBlB,UAAUY;AAvB9B,IAJyC;;AA8BzCO,iBA9ByC,6BA8BT;AAC9B,WAAO;AACLR,iBAAW,IADN;AAELE,aAAOf,SAASsB,EAAT,KAAgB,KAAhB,GAAwBd,IAAxB,GAA+Be,SAFjC;AAGLH,wBAAkB,IAHb;AAILJ,YAAM;AAJD,KAAP;AAMD,GArCwC;AAuCzCQ,QAvCyC,oBAuChC;AAAA,iBAC6B,KAAKC,KADlC;AAAA,QACAC,QADA,UACAA,QADA;AAAA,QACUC,KADV,UACUA,KADV;AAAA,QACoBF,KADpB;;AAEP,QAAIG,kBAAJ;;AAEA,YAAQH,MAAMT,IAAd;AACE,WAAK,OAAL;AACEY,oBAAYC,OAAOC,SAAnB;AACA;AACF,WAAK,OAAL;AACEF,oBAAYC,OAAOE,SAAnB;AACA;AACF;AACEH,oBAAY,EAACI,QAAQP,MAAMT,IAAf,EAAqBiB,OAAOR,MAAMT,IAAlC,EAAZ;AACA;AATJ;;AAYA,WACE;AAAC,UAAD;AAAA;AACE,kBAAUU,QADZ;AAEE,eAAO,CAACG,OAAOK,SAAR,EAAmBP,KAAnB,CAFT;AAGE,0BAAC,oBAAD,2BACMF,KADN;AAEE,eAAOG,SAFT;AAGE,mBAAU,QAHZ;AAIE;AAJF;AAHF,KADF;AAYD;AAnEwC,CAAjB,CAA1B;;AAsEA,IAAMC,SAAS1B,WAAWgC,MAAX,CAAkB;AAC/BD,aAAW;AACTE,gBAAY,QADH;AAETC,oBAAgB;AAFP,GADoB;AAK/BP,aAAW;AACTG,WAAO,EADE;AAETD,YAAQ;AAFC,GALoB;AAS/BD,aAAW;AACTE,WAAO,EADE;AAETD,YAAQ;AAFC;AAToB,CAAlB,CAAf;;AAeA,IAAIhC,SAASsB,EAAT,KAAgB,KAApB,EAA2B;AACzB,MAAIgB,uBAAuB/B,uBACzB,0BADyB,EAEzBE,iBAFyB,EAGzB,EAAC8B,YAAY,EAACC,4BAA4B,IAA7B,EAAb,EAHyB,CAA3B;AAKD,CAND,MAMO,IAAIxC,SAASsB,EAAT,KAAgB,SAApB,EAA+B;AACpC,MAAIgB,uBAAuB/B,uBACzB,oBADyB,EAEzBE,iBAFyB,EAIzB,EAAC8B,YAAY;AACXE,qBAAe,IADJ;AAEXC,gBAAU,IAFC;AAGXC,iBAAW;AAHA,KAAb,EAJyB,CAA3B;AAUD;;AAEDC,OAAOC,OAAP,GAAiBpC,iBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ActivityIndicator\n * @flow\n */\n'use strict';\n\nconst ColorPropType = require('ColorPropType');\nconst NativeMethodsMixin = require('NativeMethodsMixin');\nconst Platform = require('Platform');\nconst React = require('React');\nconst PropTypes = require('prop-types');\nconst StyleSheet = require('StyleSheet');\nconst View = require('View');\nconst ViewPropTypes = require('ViewPropTypes');\n\nconst createReactClass = require('create-react-class');\nconst requireNativeComponent = require('requireNativeComponent');\n\nconst GRAY = '#999999';\n\ntype IndicatorSize = number | 'small' | 'large';\n\ntype DefaultProps = {\n  animating: boolean,\n  color: any,\n  hidesWhenStopped: boolean,\n  size: IndicatorSize,\n}\n\n/**\n * Displays a circular loading indicator.\n */\n/* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n * suppresses an error when upgrading Flow's support for React. To see the\n * error delete this comment and run Flow. */\nconst ActivityIndicator = createReactClass({\n  displayName: 'ActivityIndicator',\n  mixins: [NativeMethodsMixin],\n\n  propTypes: {\n    ...ViewPropTypes,\n    /**\n     * Whether to show the indicator (true, the default) or hide it (false).\n     */\n    animating: PropTypes.bool,\n    /**\n     * The foreground color of the spinner (default is gray).\n     */\n    color: ColorPropType,\n    /**\n     * Size of the indicator (default is 'small').\n     * Passing a number to the size prop is only supported on Android.\n     */\n    size: PropTypes.oneOfType([\n      PropTypes.oneOf([ 'small', 'large' ]),\n      PropTypes.number,\n    ]),\n    /**\n     * Whether the indicator should hide when not animating (true by default).\n     *\n     * @platform ios\n     */\n    hidesWhenStopped: PropTypes.bool,\n  },\n\n  getDefaultProps(): DefaultProps {\n    return {\n      animating: true,\n      color: Platform.OS === 'ios' ? GRAY : undefined,\n      hidesWhenStopped: true,\n      size: 'small',\n    };\n  },\n\n  render() {\n    const {onLayout, style, ...props} = this.props;\n    let sizeStyle;\n\n    switch (props.size) {\n      case 'small':\n        sizeStyle = styles.sizeSmall;\n        break;\n      case 'large':\n        sizeStyle = styles.sizeLarge;\n        break;\n      default:\n        sizeStyle = {height: props.size, width: props.size};\n        break;\n    }\n\n    return (\n      <View\n        onLayout={onLayout}\n        style={[styles.container, style]}>\n        <RCTActivityIndicator\n          {...props}\n          style={sizeStyle}\n          styleAttr=\"Normal\"\n          indeterminate\n        />\n      </View>\n    );\n  }\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  sizeSmall: {\n    width: 20,\n    height: 20,\n  },\n  sizeLarge: {\n    width: 36,\n    height: 36,\n  },\n});\n\nif (Platform.OS === 'ios') {\n  var RCTActivityIndicator = requireNativeComponent(\n    'RCTActivityIndicatorView',\n    ActivityIndicator,\n    {nativeOnly: {activityIndicatorViewStyle: true}},\n  );\n} else if (Platform.OS === 'android') {\n  var RCTActivityIndicator = requireNativeComponent(\n    'AndroidProgressBar',\n    ActivityIndicator,\n    // Ignore props that are specific to non inderterminate ProgressBar.\n    {nativeOnly: {\n      indeterminate: true,\n      progress: true,\n      styleAttr: true,\n    }},\n  );\n}\n\nmodule.exports = ActivityIndicator;\n"]}]