["aa34774c25f12b9a4f797b8d91ec47e7f68cbff8","f4373ee66f60d260e75dbc9ff8bf2d01a0963e59",[],[],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native/Libraries/vendor/emitter/EventValidator.js"],"names":["EventValidator","addValidation","emitter","types","eventTypes","Object","keys","emitterWithValidation","create","emit","type","a","b","c","d","e","_","assertAllowsEventType","call","allowedTypes","indexOf","TypeError","errorMessageFor","message","__DEV__","recommendationFor","join","closestTypeRecommendation","closestTypeFor","isCloseEnough","typeRecommendations","map","typeRecommendationFor","bind","sort","recommendationSort","recomendedType","distance","damerauLevenshteinDistance","recommendationA","recommendationB","closestType","actualType","length","i","j","cost","charAt","Math","min","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventValidator\n * @flow\n */\n'use strict';\n\n/**\n * EventValidator is designed to validate event types to make it easier to catch\n * common mistakes. It accepts a map of all of the different types of events\n * that the emitter can emit. Then, if a user attempts to emit an event that is\n * not one of those specified types the emitter will throw an error. Also, it\n * provides a relatively simple matcher so that if it thinks that you likely\n * mistyped the event name it will suggest what you might have meant to type in\n * the error message.\n */\nconst EventValidator = {\n  /**\n   * @param {Object} emitter - The object responsible for emitting the actual\n   *                             events\n   * @param {Object} types - The collection of valid types that will be used to\n   *                         check for errors\n   * @return {Object} A new emitter with event type validation\n   * @example\n   *   const types = {someEvent: true, anotherEvent: true};\n   *   const emitter = EventValidator.addValidation(emitter, types);\n   */\n  addValidation: function(emitter: Object, types: Object) {\n    const eventTypes = Object.keys(types);\n    const emitterWithValidation = Object.create(emitter);\n\n    Object.assign(emitterWithValidation, {\n      emit: function emit(type, a, b, c, d, e, _) {\n        assertAllowsEventType(type, eventTypes);\n        return emitter.emit.call(this, type, a, b, c, d, e, _);\n      }\n    });\n\n    return emitterWithValidation;\n  }\n};\n\nfunction assertAllowsEventType(type, allowedTypes) {\n  if (allowedTypes.indexOf(type) === -1) {\n    throw new TypeError(errorMessageFor(type, allowedTypes));\n  }\n}\n\nfunction errorMessageFor(type, allowedTypes) {\n  let message = 'Unknown event type \"' + type + '\". ';\n  if (__DEV__) {\n    message += recommendationFor(type, allowedTypes);\n  }\n  message += 'Known event types: ' + allowedTypes.join(', ') + '.';\n  return message;\n}\n\n// Allow for good error messages\nif (__DEV__) {\n  var recommendationFor = function (type, allowedTypes) {\n    const closestTypeRecommendation = closestTypeFor(type, allowedTypes);\n    if (isCloseEnough(closestTypeRecommendation, type)) {\n      return 'Did you mean \"' + closestTypeRecommendation.type + '\"? ';\n    } else {\n      return '';\n    }\n  };\n\n  var closestTypeFor = function (type, allowedTypes) {\n    const typeRecommendations = allowedTypes.map(\n      typeRecommendationFor.bind(this, type)\n    );\n    return typeRecommendations.sort(recommendationSort)[0];\n  };\n\n  var typeRecommendationFor = function (type, recomendedType) {\n    return {\n      type: recomendedType,\n      distance: damerauLevenshteinDistance(type, recomendedType)\n    };\n  };\n\n  var recommendationSort = function (recommendationA, recommendationB) {\n    if (recommendationA.distance < recommendationB.distance) {\n      return -1;\n    } else if (recommendationA.distance > recommendationB.distance) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  var isCloseEnough = function (closestType, actualType) {\n    return (closestType.distance / actualType.length) < 0.334;\n  };\n\n  var damerauLevenshteinDistance = function (a, b) {\n    let i, j;\n    const d = [];\n\n    for (i = 0; i <= a.length; i++) {\n      d[i] = [i];\n    }\n\n    for (j = 1; j <= b.length; j++) {\n      d[0][j] = j;\n    }\n\n    for (i = 1; i <= a.length; i++) {\n      for (j = 1; j <= b.length; j++) {\n        const cost = a.charAt(i - 1) === b.charAt(j - 1) ? 0 : 1;\n\n        d[i][j] = Math.min(\n          d[i - 1][j] + 1,\n          d[i][j - 1] + 1,\n          d[i - 1][j - 1] + cost\n        );\n\n        if (i > 1 && j > 1 &&\n            a.charAt(i - 1) === b.charAt(j - 2) &&\n            a.charAt(i - 2) === b.charAt(j - 1)) {\n          d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n        }\n      }\n    }\n\n    return d[a.length][b.length];\n  };\n}\n\nmodule.exports = EventValidator;\n"]}]