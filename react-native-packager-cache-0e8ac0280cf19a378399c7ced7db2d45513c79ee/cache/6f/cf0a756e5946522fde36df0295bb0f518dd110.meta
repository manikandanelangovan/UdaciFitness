["f64f4b28d037957b0e4232e15ce0975a81a49264","f9a1fb9f319182708b2d73f4e4b31729fa6befd0",["./extractBrush","./extractOpacity","../props"],[1197,1320,1440],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/react-native-svg/lib/extract/extractStroke.js"],"names":["props","styleProperties","strokeKeys","forEach","name","hasOwnProperty","push","stroke","strokeWidth","strokeDasharray","split","separator","map","dash","length","strokeOpacity","strokeLinecap","caps","strokeLinejoin","joins","strokeDashoffset","strokeMiterlimit","butt","square","round","miter","bevel","Object","keys"],"mappings":";;;;kBAoBe,UAASA,KAAT,EAAgBC,eAAhB,EAAiC;AAC5CC,eAAWC,OAAX,CAAmB,UAACC,IAAD,EAAU;AACzB,YAAIJ,MAAMK,cAAN,CAAqBD,IAArB,CAAJ,EAAgC;AAC5BH,4BAAgBK,IAAhB,CAAqBF,IAArB;AACH;AACJ,KAJD;;AAD4C,QAOrCG,MAPqC,GAO3BP,KAP2B,CAOrCO,MAPqC;;AAQ5C,QAAMC,cAAc,CAACR,MAAMQ,WAA3B;AACA,QAAIC,kBAAkBT,MAAMS,eAA5B;;AAEA,QAAI,OAAOA,eAAP,KAA2B,QAA/B,EAAyC;AACrCA,0BAAkBA,gBAAgBC,KAAhB,CAAsBC,SAAtB,EAAiCC,GAAjC,CAAqC;AAAA,mBAAQ,CAACC,IAAT;AAAA,SAArC,CAAlB;AACH;;AAGD,QAAIJ,mBAAmBA,gBAAgBK,MAAhB,KAA2B,CAAlD,EAAqD;AACjDL,wBAAgBH,IAAhB,CAAqBG,gBAAgB,CAAhB,CAArB;AACH;;AAED,WAAO;AACHF,gBAAQ,4BAAaA,MAAb,CADL;AAEHQ,uBAAe,8BAAef,MAAMe,aAArB,CAFZ;AAGHC,uBAAeC,KAAKjB,MAAMgB,aAAX,KAA6B,CAHzC;AAIHE,wBAAgBC,MAAMnB,MAAMkB,cAAZ,KAA+B,CAJ5C;AAKHT,yBAAiBA,mBAAmB,IALjC;AAMHD,qBAAaA,eAAe,IANzB;AAOHY,0BAAkBX,kBAAmB,CAACT,MAAMoB,gBAAP,IAA2B,CAA9C,GAAmD,IAPlE;AAQHC,0BAAkBrB,MAAMqB,gBAAN,IAA0B;AARzC,KAAP;AAUH,C;;AAlDD;;;;AACA;;;;AACA;;AAEA,IAAMV,YAAY,SAAlB;;AAEA,IAAMM,OAAO;AACTK,UAAM,CADG;AAETC,YAAQ,CAFC;AAGTC,WAAO;AAHE,CAAb;;AAMA,IAAML,QAAQ;AACVM,WAAO,CADG;AAEVC,WAAO,CAFG;AAGVF,WAAO;AAHG,CAAd;;AAMA,IAAMtB,aAAayB,OAAOC,IAAP,oBAAnB","sourcesContent":["import extractBrush from './extractBrush';\nimport extractOpacity from './extractOpacity';\nimport {strokeProps} from '../props'\n\nconst separator = /\\s*,\\s*/;\n\nconst caps = {\n    butt: 0,\n    square: 2,\n    round: 1\n};\n\nconst joins = {\n    miter: 0,\n    bevel: 2,\n    round: 1\n};\n\nconst strokeKeys = Object.keys(strokeProps);\n\nexport default function(props, styleProperties) {\n    strokeKeys.forEach((name) => {\n        if (props.hasOwnProperty(name)) {\n            styleProperties.push(name);\n        }\n    });\n\n    const {stroke} = props;\n    const strokeWidth = +props.strokeWidth;\n    let strokeDasharray = props.strokeDasharray;\n\n    if (typeof strokeDasharray === 'string') {\n        strokeDasharray = strokeDasharray.split(separator).map(dash => +dash);\n    }\n\n    // strokeDasharray length must be more than 1.\n    if (strokeDasharray && strokeDasharray.length === 1) {\n        strokeDasharray.push(strokeDasharray[0]);\n    }\n\n    return {\n        stroke: extractBrush(stroke),\n        strokeOpacity: extractOpacity(props.strokeOpacity),\n        strokeLinecap: caps[props.strokeLinecap] || 0,\n        strokeLinejoin: joins[props.strokeLinejoin] || 0,\n        strokeDasharray: strokeDasharray || null,\n        strokeWidth: strokeWidth || null,\n        strokeDashoffset: strokeDasharray ? (+props.strokeDashoffset || 0) : null,\n        strokeMiterlimit: props.strokeMiterlimit || 4\n    };\n}\n"]}]