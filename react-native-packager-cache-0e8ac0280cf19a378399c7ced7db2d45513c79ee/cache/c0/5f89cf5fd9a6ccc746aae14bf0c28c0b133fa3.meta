["b689aa0555f11d8a6f7777d3547f314319ff3d9b","f34eb07d7d347bf864bfc09da65d0d2f07304ace",["./conversions","./route"],[26,64],{"version":3,"sources":["/Users/mani/Documents/Udacity/Core/React_Native/UdaciFitness/node_modules/color-convert/index.js"],"names":["conversions","require","route","convert","models","Object","keys","wrapRaw","fn","wrappedFn","args","undefined","arguments","length","Array","prototype","slice","call","conversion","wrapRounded","result","len","i","Math","round","forEach","fromModel","defineProperty","value","channels","labels","routes","routeModels","toModel","raw","module","exports"],"mappings":"AAAA,IAAIA,cAAcC,QAAQ,eAAR,CAAlB;AACA,IAAIC,QAAQD,QAAQ,SAAR,CAAZ;;AAEA,IAAIE,UAAU,EAAd;;AAEA,IAAIC,SAASC,OAAOC,IAAP,CAAYN,WAAZ,CAAb;;AAEA,SAASO,OAAT,CAAiBC,EAAjB,EAAqB;AACpB,KAAIC,YAAY,SAAZA,SAAY,CAAUC,IAAV,EAAgB;AAC/B,MAAIA,SAASC,SAAT,IAAsBD,SAAS,IAAnC,EAAyC;AACxC,UAAOA,IAAP;AACA;;AAED,MAAIE,UAAUC,MAAV,GAAmB,CAAvB,EAA0B;AACzBH,UAAOI,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BL,SAA3B,CAAP;AACA;;AAED,SAAOJ,GAAGE,IAAH,CAAP;AACA,EAVD;;AAaA,KAAI,gBAAgBF,EAApB,EAAwB;AACvBC,YAAUS,UAAV,GAAuBV,GAAGU,UAA1B;AACA;;AAED,QAAOT,SAAP;AACA;;AAED,SAASU,WAAT,CAAqBX,EAArB,EAAyB;AACxB,KAAIC,YAAY,SAAZA,SAAY,CAAUC,IAAV,EAAgB;AAC/B,MAAIA,SAASC,SAAT,IAAsBD,SAAS,IAAnC,EAAyC;AACxC,UAAOA,IAAP;AACA;;AAED,MAAIE,UAAUC,MAAV,GAAmB,CAAvB,EAA0B;AACzBH,UAAOI,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BL,SAA3B,CAAP;AACA;;AAED,MAAIQ,SAASZ,GAAGE,IAAH,CAAb;;AAKA,MAAI,OAAOU,MAAP,KAAkB,QAAtB,EAAgC;AAC/B,QAAK,IAAIC,MAAMD,OAAOP,MAAjB,EAAyBS,IAAI,CAAlC,EAAqCA,IAAID,GAAzC,EAA8CC,GAA9C,EAAmD;AAClDF,WAAOE,CAAP,IAAYC,KAAKC,KAAL,CAAWJ,OAAOE,CAAP,CAAX,CAAZ;AACA;AACD;;AAED,SAAOF,MAAP;AACA,EArBD;;AAwBA,KAAI,gBAAgBZ,EAApB,EAAwB;AACvBC,YAAUS,UAAV,GAAuBV,GAAGU,UAA1B;AACA;;AAED,QAAOT,SAAP;AACA;;AAEDL,OAAOqB,OAAP,CAAe,UAAUC,SAAV,EAAqB;AACnCvB,SAAQuB,SAAR,IAAqB,EAArB;;AAEArB,QAAOsB,cAAP,CAAsBxB,QAAQuB,SAAR,CAAtB,EAA0C,UAA1C,EAAsD,EAACE,OAAO5B,YAAY0B,SAAZ,EAAuBG,QAA/B,EAAtD;AACAxB,QAAOsB,cAAP,CAAsBxB,QAAQuB,SAAR,CAAtB,EAA0C,QAA1C,EAAoD,EAACE,OAAO5B,YAAY0B,SAAZ,EAAuBI,MAA/B,EAApD;;AAEA,KAAIC,SAAS7B,MAAMwB,SAAN,CAAb;AACA,KAAIM,cAAc3B,OAAOC,IAAP,CAAYyB,MAAZ,CAAlB;;AAEAC,aAAYP,OAAZ,CAAoB,UAAUQ,OAAV,EAAmB;AACtC,MAAIzB,KAAKuB,OAAOE,OAAP,CAAT;;AAEA9B,UAAQuB,SAAR,EAAmBO,OAAnB,IAA8Bd,YAAYX,EAAZ,CAA9B;AACAL,UAAQuB,SAAR,EAAmBO,OAAnB,EAA4BC,GAA5B,GAAkC3B,QAAQC,EAAR,CAAlC;AACA,EALD;AAMA,CAfD;;AAiBA2B,OAAOC,OAAP,GAAiBjC,OAAjB","sourcesContent":["var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n"]}]